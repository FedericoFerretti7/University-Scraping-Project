{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a-ZtmXUsVQAo","executionInfo":{"status":"ok","timestamp":1694073667163,"user_tz":-120,"elapsed":31127,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"9332422c-4e69-498e-8146-163a2d6c8049"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["# libraries\n","import pandas as pd\n","import numpy as np\n","import plotly.graph_objects as go\n","\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import StandardScaler\n","\n","from sklearn.cluster import KMeans\n","import plotly.express as px\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import matplotlib.ticker as ticker\n","import matplotlib.patches as mpatches\n","import random\n","from sklearn import metrics\n","from sklearn.metrics import silhouette_score\n","from sklearn.metrics import pairwise_distances\n","from sklearn.metrics import davies_bouldin_score\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\n","\n","\n","\n","! pip install pingouin\n","import pingouin as pg"],"metadata":{"id":"uwzH2OWtVeU-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694073676410,"user_tz":-120,"elapsed":9264,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"f666d2b3-0df8-408e-f062-d5e3ba21bd49"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pingouin\n","  Downloading pingouin-0.5.3-py3-none-any.whl (198 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m198.6/198.6 kB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.19 in /usr/local/lib/python3.10/dist-packages (from pingouin) (1.23.5)\n","Requirement already satisfied: scipy>=1.7 in /usr/local/lib/python3.10/dist-packages (from pingouin) (1.10.1)\n","Requirement already satisfied: pandas>=1.0 in /usr/local/lib/python3.10/dist-packages (from pingouin) (1.5.3)\n","Requirement already satisfied: matplotlib>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from pingouin) (3.7.1)\n","Requirement already satisfied: seaborn>=0.11 in /usr/local/lib/python3.10/dist-packages (from pingouin) (0.12.2)\n","Requirement already satisfied: statsmodels>=0.13 in /usr/local/lib/python3.10/dist-packages (from pingouin) (0.14.0)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from pingouin) (1.2.2)\n","Collecting pandas-flavor>=0.2.0 (from pingouin)\n","  Downloading pandas_flavor-0.6.0-py3-none-any.whl (7.2 kB)\n","Collecting outdated (from pingouin)\n","  Downloading outdated-0.2.2-py2.py3-none-any.whl (7.5 kB)\n","Requirement already satisfied: tabulate in /usr/local/lib/python3.10/dist-packages (from pingouin) (0.9.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (4.42.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.0.2->pingouin) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.0->pingouin) (2023.3)\n","Requirement already satisfied: xarray in /usr/local/lib/python3.10/dist-packages (from pandas-flavor>=0.2.0->pingouin) (2023.7.0)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels>=0.13->pingouin) (0.5.3)\n","Requirement already satisfied: setuptools>=44 in /usr/local/lib/python3.10/dist-packages (from outdated->pingouin) (67.7.2)\n","Collecting littleutils (from outdated->pingouin)\n","  Downloading littleutils-0.2.2.tar.gz (6.6 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from outdated->pingouin) (2.31.0)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->pingouin) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->pingouin) (3.2.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels>=0.13->pingouin) (1.16.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->outdated->pingouin) (3.2.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->outdated->pingouin) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->outdated->pingouin) (2.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->outdated->pingouin) (2023.7.22)\n","Building wheels for collected packages: littleutils\n","  Building wheel for littleutils (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for littleutils: filename=littleutils-0.2.2-py3-none-any.whl size=7028 sha256=e83915bb42d025243a3a5ca76e553dd392d6f88d9140f1873ab5cfc992a8cb3e\n","  Stored in directory: /root/.cache/pip/wheels/3d/fe/b0/27a9892da57472e538c7452a721a9cf463cc03cf7379889266\n","Successfully built littleutils\n","Installing collected packages: littleutils, outdated, pandas-flavor, pingouin\n","Successfully installed littleutils-0.2.2 outdated-0.2.2 pandas-flavor-0.6.0 pingouin-0.5.3\n"]}]},{"cell_type":"markdown","source":["1. Clusterizzazione di freedom sulla base del dataset che mette insieme freedom e happiness (ottenendo meno paesi) per il 2013 e il 2022\n","2. Clusterizzazione di freedom sulla base del dataset originario solo su freedom (ottengo più paesi) per il 2013 e il 2022"],"metadata":{"id":"h5Xvk7VP7krF"}},{"cell_type":"markdown","source":["# Clustering Freedom\n","\n","Using merged dataframe"],"metadata":{"id":"TSdtjCXB7e_4"}},{"cell_type":"code","source":["data=pd.read_csv(\"/content/drive/MyDrive/DS LAB - Colombaro, Ferretti, Fracchia, Salvatori/PROCESSED DATASETS/Happiness + Freedom/freedom_cleaned.csv\")\n","pd.reset_option('display.max_rows')\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":756},"id":"svqIgsVxWOJg","executionInfo":{"status":"ok","timestamp":1694073678004,"user_tz":-120,"elapsed":1610,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"a3d4cdee-195e-416e-faa9-88e24f1d977a"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Country name  Region C/T  Edition Status  PR rating  CL rating  A1  A2  \\\n","0     Afghanistan    Asia   c     2013     NF          6          6   1   1   \n","1     Afghanistan    Asia   c     2014     NF          6          6   1   1   \n","2     Afghanistan    Asia   c     2015     NF          6          6   1   1   \n","3     Afghanistan    Asia   c     2016     NF          6          6   1   0   \n","4     Afghanistan    Asia   c     2017     NF          6          6   1   0   \n","...           ...     ...  ..      ...    ...        ...        ...  ..  ..   \n","1333     Zimbabwe  Africa   c     2018     NF          6          5   0   1   \n","1334     Zimbabwe  Africa   c     2019     PF          5          5   1   1   \n","1335     Zimbabwe  Africa   c     2020     PF          5          5   1   1   \n","1336     Zimbabwe  Africa   c     2021     NF          6          5   1   1   \n","1337     Zimbabwe  Africa   c     2022     NF          6          5   1   1   \n","\n","      A3  ...  Perceptions of corruption % change  Positive affect  \\\n","0      1  ...                            0.000000         0.547417   \n","1      1  ...                            0.003405         0.491641   \n","2      1  ...                            0.000116         0.491410   \n","3      1  ...                            0.009848         0.501409   \n","4      1  ...                            0.041269         0.435270   \n","...   ..  ...                                 ...              ...   \n","1333   1  ...                            0.015327         0.657524   \n","1334   1  ...                            0.000258         0.658434   \n","1335   1  ...                            0.002572         0.660658   \n","1336   1  ...                            0.001604         0.609917   \n","1337   1  ...                            0.000032         0.640609   \n","\n","      Negative affect  Happiness scaled  country-code     iso_3166-2  region  \\\n","0            0.273328         35.721004           4.0  ISO 3166-2:AF    Asia   \n","1            0.374861         31.308956           4.0  ISO 3166-2:AF    Asia   \n","2            0.339276         39.828546           4.0  ISO 3166-2:AF    Asia   \n","3            0.348332         42.201686           4.0  ISO 3166-2:AF    Asia   \n","4            0.371326         26.617181           4.0  ISO 3166-2:AF    Asia   \n","...               ...               ...           ...            ...     ...   \n","1333         0.211726         36.164799         716.0  ISO 3166-2:ZW  Africa   \n","1334         0.235354         26.935232         716.0  ISO 3166-2:ZW  Africa   \n","1335         0.345736         31.598022         716.0  ISO 3166-2:ZW  Africa   \n","1336         0.241682         31.545782         716.0  ISO 3166-2:ZW  Africa   \n","1337         0.191350         32.962196         716.0  ISO 3166-2:ZW  Africa   \n","\n","              sub-region  region-code  sub-region-code  \n","0          Southern Asia        142.0             34.0  \n","1          Southern Asia        142.0             34.0  \n","2          Southern Asia        142.0             34.0  \n","3          Southern Asia        142.0             34.0  \n","4          Southern Asia        142.0             34.0  \n","...                  ...          ...              ...  \n","1333  Sub-Saharan Africa          2.0            202.0  \n","1334  Sub-Saharan Africa          2.0            202.0  \n","1335  Sub-Saharan Africa          2.0            202.0  \n","1336  Sub-Saharan Africa          2.0            202.0  \n","1337  Sub-Saharan Africa          2.0            202.0  \n","\n","[1338 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-0c819ac2-759f-42d4-8e49-9d898cb26d70\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Region</th>\n","      <th>C/T</th>\n","      <th>Edition</th>\n","      <th>Status</th>\n","      <th>PR rating</th>\n","      <th>CL rating</th>\n","      <th>A1</th>\n","      <th>A2</th>\n","      <th>A3</th>\n","      <th>...</th>\n","      <th>Perceptions of corruption % change</th>\n","      <th>Positive affect</th>\n","      <th>Negative affect</th>\n","      <th>Happiness scaled</th>\n","      <th>country-code</th>\n","      <th>iso_3166-2</th>\n","      <th>region</th>\n","      <th>sub-region</th>\n","      <th>region-code</th>\n","      <th>sub-region-code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>Asia</td>\n","      <td>c</td>\n","      <td>2013</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.547417</td>\n","      <td>0.273328</td>\n","      <td>35.721004</td>\n","      <td>4.0</td>\n","      <td>ISO 3166-2:AF</td>\n","      <td>Asia</td>\n","      <td>Southern Asia</td>\n","      <td>142.0</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Afghanistan</td>\n","      <td>Asia</td>\n","      <td>c</td>\n","      <td>2014</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.003405</td>\n","      <td>0.491641</td>\n","      <td>0.374861</td>\n","      <td>31.308956</td>\n","      <td>4.0</td>\n","      <td>ISO 3166-2:AF</td>\n","      <td>Asia</td>\n","      <td>Southern Asia</td>\n","      <td>142.0</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Afghanistan</td>\n","      <td>Asia</td>\n","      <td>c</td>\n","      <td>2015</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.000116</td>\n","      <td>0.491410</td>\n","      <td>0.339276</td>\n","      <td>39.828546</td>\n","      <td>4.0</td>\n","      <td>ISO 3166-2:AF</td>\n","      <td>Asia</td>\n","      <td>Southern Asia</td>\n","      <td>142.0</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Afghanistan</td>\n","      <td>Asia</td>\n","      <td>c</td>\n","      <td>2016</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.009848</td>\n","      <td>0.501409</td>\n","      <td>0.348332</td>\n","      <td>42.201686</td>\n","      <td>4.0</td>\n","      <td>ISO 3166-2:AF</td>\n","      <td>Asia</td>\n","      <td>Southern Asia</td>\n","      <td>142.0</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Afghanistan</td>\n","      <td>Asia</td>\n","      <td>c</td>\n","      <td>2017</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.041269</td>\n","      <td>0.435270</td>\n","      <td>0.371326</td>\n","      <td>26.617181</td>\n","      <td>4.0</td>\n","      <td>ISO 3166-2:AF</td>\n","      <td>Asia</td>\n","      <td>Southern Asia</td>\n","      <td>142.0</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1333</th>\n","      <td>Zimbabwe</td>\n","      <td>Africa</td>\n","      <td>c</td>\n","      <td>2018</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.015327</td>\n","      <td>0.657524</td>\n","      <td>0.211726</td>\n","      <td>36.164799</td>\n","      <td>716.0</td>\n","      <td>ISO 3166-2:ZW</td>\n","      <td>Africa</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>2.0</td>\n","      <td>202.0</td>\n","    </tr>\n","    <tr>\n","      <th>1334</th>\n","      <td>Zimbabwe</td>\n","      <td>Africa</td>\n","      <td>c</td>\n","      <td>2019</td>\n","      <td>PF</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.000258</td>\n","      <td>0.658434</td>\n","      <td>0.235354</td>\n","      <td>26.935232</td>\n","      <td>716.0</td>\n","      <td>ISO 3166-2:ZW</td>\n","      <td>Africa</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>2.0</td>\n","      <td>202.0</td>\n","    </tr>\n","    <tr>\n","      <th>1335</th>\n","      <td>Zimbabwe</td>\n","      <td>Africa</td>\n","      <td>c</td>\n","      <td>2020</td>\n","      <td>PF</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.002572</td>\n","      <td>0.660658</td>\n","      <td>0.345736</td>\n","      <td>31.598022</td>\n","      <td>716.0</td>\n","      <td>ISO 3166-2:ZW</td>\n","      <td>Africa</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>2.0</td>\n","      <td>202.0</td>\n","    </tr>\n","    <tr>\n","      <th>1336</th>\n","      <td>Zimbabwe</td>\n","      <td>Africa</td>\n","      <td>c</td>\n","      <td>2021</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.001604</td>\n","      <td>0.609917</td>\n","      <td>0.241682</td>\n","      <td>31.545782</td>\n","      <td>716.0</td>\n","      <td>ISO 3166-2:ZW</td>\n","      <td>Africa</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>2.0</td>\n","      <td>202.0</td>\n","    </tr>\n","    <tr>\n","      <th>1337</th>\n","      <td>Zimbabwe</td>\n","      <td>Africa</td>\n","      <td>c</td>\n","      <td>2022</td>\n","      <td>NF</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.000032</td>\n","      <td>0.640609</td>\n","      <td>0.191350</td>\n","      <td>32.962196</td>\n","      <td>716.0</td>\n","      <td>ISO 3166-2:ZW</td>\n","      <td>Africa</td>\n","      <td>Sub-Saharan Africa</td>\n","      <td>2.0</td>\n","      <td>202.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1338 rows × 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c819ac2-759f-42d4-8e49-9d898cb26d70')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c819ac2-759f-42d4-8e49-9d898cb26d70 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c819ac2-759f-42d4-8e49-9d898cb26d70');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b2d7562-ceef-4b7c-9688-86a795ae4922\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b2d7562-ceef-4b7c-9688-86a795ae4922')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b2d7562-ceef-4b7c-9688-86a795ae4922 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["## 2013"],"metadata":{"id":"64AMC1wJqbY3"}},{"cell_type":"code","source":["data_2013=data[data['Edition']==2013]\n","data_2013.reset_index(inplace=True)\n","data_2013.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FGoX3nGRLi7U","executionInfo":{"status":"ok","timestamp":1694073678010,"user_tz":-120,"elapsed":105,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"c282e3b7-d4b9-461a-ee9b-16097fcf0407"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 135 entries, 0 to 134\n","Data columns (total 77 columns):\n"," #   Column                                     Non-Null Count  Dtype  \n","---  ------                                     --------------  -----  \n"," 0   index                                      135 non-null    int64  \n"," 1   Country name                               135 non-null    object \n"," 2   Region                                     135 non-null    object \n"," 3   C/T                                        135 non-null    object \n"," 4   Edition                                    135 non-null    int64  \n"," 5   Status                                     135 non-null    object \n"," 6   PR rating                                  135 non-null    int64  \n"," 7   CL rating                                  135 non-null    int64  \n"," 8   A1                                         135 non-null    int64  \n"," 9   A2                                         135 non-null    int64  \n"," 10  A3                                         135 non-null    int64  \n"," 11  A                                          135 non-null    int64  \n"," 12  A % change                                 135 non-null    float64\n"," 13  B1                                         135 non-null    int64  \n"," 14  B2                                         135 non-null    int64  \n"," 15  B3                                         135 non-null    int64  \n"," 16  B4                                         135 non-null    int64  \n"," 17  B                                          135 non-null    int64  \n"," 18  B % change                                 135 non-null    float64\n"," 19  C1                                         135 non-null    int64  \n"," 20  C2                                         135 non-null    int64  \n"," 21  C3                                         135 non-null    int64  \n"," 22  C                                          135 non-null    int64  \n"," 23  C % change                                 135 non-null    float64\n"," 24  Add Q                                      135 non-null    int64  \n"," 25  PR                                         135 non-null    int64  \n"," 26  PR % change                                135 non-null    float64\n"," 27  D1                                         135 non-null    int64  \n"," 28  D2                                         135 non-null    int64  \n"," 29  D3                                         135 non-null    int64  \n"," 30  D4                                         135 non-null    int64  \n"," 31  D                                          135 non-null    int64  \n"," 32  D % change                                 135 non-null    float64\n"," 33  E1                                         135 non-null    int64  \n"," 34  E2                                         135 non-null    int64  \n"," 35  E3                                         135 non-null    int64  \n"," 36  E                                          135 non-null    int64  \n"," 37  E % change                                 135 non-null    float64\n"," 38  F1                                         135 non-null    int64  \n"," 39  F2                                         135 non-null    int64  \n"," 40  F3                                         135 non-null    int64  \n"," 41  F4                                         135 non-null    int64  \n"," 42  F                                          135 non-null    int64  \n"," 43  F % change                                 135 non-null    float64\n"," 44  G1                                         135 non-null    int64  \n"," 45  G2                                         135 non-null    int64  \n"," 46  G3                                         135 non-null    int64  \n"," 47  G4                                         135 non-null    int64  \n"," 48  G                                          135 non-null    int64  \n"," 49  G % change                                 135 non-null    float64\n"," 50  CL                                         135 non-null    int64  \n"," 51  CL % change                                135 non-null    float64\n"," 52  Total                                      135 non-null    int64  \n"," 53  Total % change                             135 non-null    float64\n"," 54  Happiness                                  135 non-null    float64\n"," 55  Happiness % change                         135 non-null    float64\n"," 56  Log GDP per capita                         135 non-null    float64\n"," 57  Log GDP per capita % change                135 non-null    float64\n"," 58  Social support                             135 non-null    float64\n"," 59  Social support % change                    135 non-null    float64\n"," 60  Healthy life expectancy at birth           133 non-null    float64\n"," 61  Healthy life expectancy at birth % change  135 non-null    float64\n"," 62  Freedom to make life choices               135 non-null    float64\n"," 63  Freedom to make life choices % change      135 non-null    float64\n"," 64  Generosity                                 135 non-null    float64\n"," 65  Generosity % change                        135 non-null    float64\n"," 66  Perceptions of corruption                  130 non-null    float64\n"," 67  Perceptions of corruption % change         135 non-null    float64\n"," 68  Positive affect                            135 non-null    float64\n"," 69  Negative affect                            135 non-null    float64\n"," 70  Happiness scaled                           135 non-null    float64\n"," 71  country-code                               134 non-null    float64\n"," 72  iso_3166-2                                 134 non-null    object \n"," 73  region                                     134 non-null    object \n"," 74  sub-region                                 134 non-null    object \n"," 75  region-code                                134 non-null    float64\n"," 76  sub-region-code                            134 non-null    float64\n","dtypes: float64(30), int64(40), object(7)\n","memory usage: 81.3+ KB\n"]}]},{"cell_type":"code","source":["df_2013=data_2013[['Country name', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'PR', 'CL', 'Total']]\n","\n","df_2013.reset_index(inplace=True)\n","\n","df_2013.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L0oelYhAIqW7","executionInfo":{"status":"ok","timestamp":1694073678014,"user_tz":-120,"elapsed":92,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"11063912-fc77-4ef9-c979-4daaa2fcdf60"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 135 entries, 0 to 134\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   index         135 non-null    int64 \n"," 1   Country name  135 non-null    object\n"," 2   A             135 non-null    int64 \n"," 3   B             135 non-null    int64 \n"," 4   C             135 non-null    int64 \n"," 5   D             135 non-null    int64 \n"," 6   E             135 non-null    int64 \n"," 7   F             135 non-null    int64 \n"," 8   G             135 non-null    int64 \n"," 9   PR            135 non-null    int64 \n"," 10  CL            135 non-null    int64 \n"," 11  Total         135 non-null    int64 \n","dtypes: int64(11), object(1)\n","memory usage: 12.8+ KB\n"]}]},{"cell_type":"code","source":["df_2013.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"UXO8g5Ra-HBX","executionInfo":{"status":"ok","timestamp":1694073678017,"user_tz":-120,"elapsed":82,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"8a9b112c-ba98-4f0c-e064-6878121d344d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       count       mean        std  min   25%   50%    75%    max\n","index  135.0  67.000000  39.115214  0.0  33.5  67.0  100.5  134.0\n","A      135.0   7.703704   4.128666  0.0   4.0   9.0   12.0   12.0\n","B      135.0  10.170370   4.979871  0.0   6.0  11.0   15.0   16.0\n","C      135.0   6.451852   3.548635  0.0   3.0   7.0    9.0   12.0\n","D      135.0  11.162963   4.191689  1.0   8.0  12.0   15.0   16.0\n","E      135.0   7.629630   3.654359  0.0   4.5   8.0   11.0   12.0\n","F      135.0   8.074074   4.697776  0.0   4.0   7.0   12.0   16.0\n","G      135.0   9.622222   3.888112  1.0   7.0  10.0   13.0   16.0\n","PR     135.0  24.259259  12.393404 -1.0  13.0  26.0   36.0   40.0\n","CL     135.0  36.488889  15.792907  4.0  24.0  36.0   50.5   60.0\n","Total  135.0  60.748148  27.922258  4.0  39.0  62.0   86.0  100.0"],"text/html":["\n","  <div id=\"df-9666941f-ccaa-4dea-b2d5-fbdcad51256a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>index</th>\n","      <td>135.0</td>\n","      <td>67.000000</td>\n","      <td>39.115214</td>\n","      <td>0.0</td>\n","      <td>33.5</td>\n","      <td>67.0</td>\n","      <td>100.5</td>\n","      <td>134.0</td>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <td>135.0</td>\n","      <td>7.703704</td>\n","      <td>4.128666</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>135.0</td>\n","      <td>10.170370</td>\n","      <td>4.979871</td>\n","      <td>0.0</td>\n","      <td>6.0</td>\n","      <td>11.0</td>\n","      <td>15.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>135.0</td>\n","      <td>6.451852</td>\n","      <td>3.548635</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td>135.0</td>\n","      <td>11.162963</td>\n","      <td>4.191689</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>12.0</td>\n","      <td>15.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>E</th>\n","      <td>135.0</td>\n","      <td>7.629630</td>\n","      <td>3.654359</td>\n","      <td>0.0</td>\n","      <td>4.5</td>\n","      <td>8.0</td>\n","      <td>11.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>135.0</td>\n","      <td>8.074074</td>\n","      <td>4.697776</td>\n","      <td>0.0</td>\n","      <td>4.0</td>\n","      <td>7.0</td>\n","      <td>12.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>135.0</td>\n","      <td>9.622222</td>\n","      <td>3.888112</td>\n","      <td>1.0</td>\n","      <td>7.0</td>\n","      <td>10.0</td>\n","      <td>13.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>PR</th>\n","      <td>135.0</td>\n","      <td>24.259259</td>\n","      <td>12.393404</td>\n","      <td>-1.0</td>\n","      <td>13.0</td>\n","      <td>26.0</td>\n","      <td>36.0</td>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th>CL</th>\n","      <td>135.0</td>\n","      <td>36.488889</td>\n","      <td>15.792907</td>\n","      <td>4.0</td>\n","      <td>24.0</td>\n","      <td>36.0</td>\n","      <td>50.5</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total</th>\n","      <td>135.0</td>\n","      <td>60.748148</td>\n","      <td>27.922258</td>\n","      <td>4.0</td>\n","      <td>39.0</td>\n","      <td>62.0</td>\n","      <td>86.0</td>\n","      <td>100.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9666941f-ccaa-4dea-b2d5-fbdcad51256a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9666941f-ccaa-4dea-b2d5-fbdcad51256a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9666941f-ccaa-4dea-b2d5-fbdcad51256a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-635bbddf-ce5d-4dd7-a7d7-5c2fbcc50c90\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-635bbddf-ce5d-4dd7-a7d7-5c2fbcc50c90')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-635bbddf-ce5d-4dd7-a7d7-5c2fbcc50c90 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["What we notice is that:\n","- columns from A to G have quite same magnitude\n","- columns PR an CL are macro columns that contains respectevely the sum of values in A-C columns and D-G, their means and standard deviations, in fact, are quite different\n","- column Total is the mcro column of the sum between PR and CL"],"metadata":{"id":"bO1sWrJ6-gbp"}},{"cell_type":"markdown","source":["In order to perform K-Means clustering, it is important to have features in the same scale and magnitude in order to avoid predominance of some variables (for example the ones with lower variances).\n","In order to prepare the data we can normalize them with MinMax scaler from sklearn library: this technique brings data in the range of 0-1 (where 0 is the smallest value found in data and 1 is the greatest) and eliminates the differences in magnitude."],"metadata":{"id":"74JQ16uI_IQ9"}},{"cell_type":"markdown","source":["- Data normalization"],"metadata":{"id":"5U3UP_2yIxfr"}},{"cell_type":"code","source":["num_col = ['A', 'B', 'C', 'D', 'E', 'F', 'G']\n","scaler = MinMaxScaler()\n","\n","for i in num_col:\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","\n","df_2013.describe().transpose()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"B5VbYSmS_-kw","executionInfo":{"status":"ok","timestamp":1694073678021,"user_tz":-120,"elapsed":82,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"796abc32-de52-42c6-f4bb-53fb3507b3c1"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-7-9bf8d452796a>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n"]},{"output_type":"execute_result","data":{"text/plain":["       count       mean        std  min        25%        50%         75%  \\\n","index  135.0  67.000000  39.115214  0.0  33.500000  67.000000  100.500000   \n","A      135.0   0.641975   0.344055  0.0   0.333333   0.750000    1.000000   \n","B      135.0   0.635648   0.311242  0.0   0.375000   0.687500    0.937500   \n","C      135.0   0.537654   0.295720  0.0   0.250000   0.583333    0.750000   \n","D      135.0   0.677531   0.279446  0.0   0.466667   0.733333    0.933333   \n","E      135.0   0.635802   0.304530  0.0   0.375000   0.666667    0.916667   \n","F      135.0   0.504630   0.293611  0.0   0.250000   0.437500    0.750000   \n","G      135.0   0.574815   0.259207  0.0   0.400000   0.600000    0.800000   \n","PR     135.0  24.259259  12.393404 -1.0  13.000000  26.000000   36.000000   \n","CL     135.0  36.488889  15.792907  4.0  24.000000  36.000000   50.500000   \n","Total  135.0  60.748148  27.922258  4.0  39.000000  62.000000   86.000000   \n","\n","         max  \n","index  134.0  \n","A        1.0  \n","B        1.0  \n","C        1.0  \n","D        1.0  \n","E        1.0  \n","F        1.0  \n","G        1.0  \n","PR      40.0  \n","CL      60.0  \n","Total  100.0  "],"text/html":["\n","  <div id=\"df-730d90da-16bf-4d89-a135-4d9f056a5b09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>index</th>\n","      <td>135.0</td>\n","      <td>67.000000</td>\n","      <td>39.115214</td>\n","      <td>0.0</td>\n","      <td>33.500000</td>\n","      <td>67.000000</td>\n","      <td>100.500000</td>\n","      <td>134.0</td>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <td>135.0</td>\n","      <td>0.641975</td>\n","      <td>0.344055</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.750000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>135.0</td>\n","      <td>0.635648</td>\n","      <td>0.311242</td>\n","      <td>0.0</td>\n","      <td>0.375000</td>\n","      <td>0.687500</td>\n","      <td>0.937500</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>135.0</td>\n","      <td>0.537654</td>\n","      <td>0.295720</td>\n","      <td>0.0</td>\n","      <td>0.250000</td>\n","      <td>0.583333</td>\n","      <td>0.750000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td>135.0</td>\n","      <td>0.677531</td>\n","      <td>0.279446</td>\n","      <td>0.0</td>\n","      <td>0.466667</td>\n","      <td>0.733333</td>\n","      <td>0.933333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>E</th>\n","      <td>135.0</td>\n","      <td>0.635802</td>\n","      <td>0.304530</td>\n","      <td>0.0</td>\n","      <td>0.375000</td>\n","      <td>0.666667</td>\n","      <td>0.916667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>135.0</td>\n","      <td>0.504630</td>\n","      <td>0.293611</td>\n","      <td>0.0</td>\n","      <td>0.250000</td>\n","      <td>0.437500</td>\n","      <td>0.750000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>135.0</td>\n","      <td>0.574815</td>\n","      <td>0.259207</td>\n","      <td>0.0</td>\n","      <td>0.400000</td>\n","      <td>0.600000</td>\n","      <td>0.800000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>PR</th>\n","      <td>135.0</td>\n","      <td>24.259259</td>\n","      <td>12.393404</td>\n","      <td>-1.0</td>\n","      <td>13.000000</td>\n","      <td>26.000000</td>\n","      <td>36.000000</td>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th>CL</th>\n","      <td>135.0</td>\n","      <td>36.488889</td>\n","      <td>15.792907</td>\n","      <td>4.0</td>\n","      <td>24.000000</td>\n","      <td>36.000000</td>\n","      <td>50.500000</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total</th>\n","      <td>135.0</td>\n","      <td>60.748148</td>\n","      <td>27.922258</td>\n","      <td>4.0</td>\n","      <td>39.000000</td>\n","      <td>62.000000</td>\n","      <td>86.000000</td>\n","      <td>100.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-730d90da-16bf-4d89-a135-4d9f056a5b09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-730d90da-16bf-4d89-a135-4d9f056a5b09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-730d90da-16bf-4d89-a135-4d9f056a5b09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9fa19cbc-189d-4c02-83d3-f310fd405d72\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9fa19cbc-189d-4c02-83d3-f310fd405d72')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9fa19cbc-189d-4c02-83d3-f310fd405d72 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["The first step in K-means clustering is the delicate step of choosing the number of clusters.\n","There are many techiniques useful to choose the proper number of clusters, in this context we compare elbow method (that tries to minimize sum of squares error) and silhouette analysis (silhouette score is one of the most used coefficient to internally validate the cohesion of clusters)."],"metadata":{"id":"AuhhGepEBgNs"}},{"cell_type":"code","source":["X_scaled = df_2013[['A', 'B', 'C', 'D', 'E', 'F', 'G']]\n","\n","wcss = []\n","silhouette_scores = []\n","for i in range(2, 9):\n","    km = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=123)\n","    km.fit(X_scaled)\n","    wcss.append(km.inertia_)\n","    silhouette_scores.append(silhouette_score(X_scaled, km.labels_))\n","\n","# Plot\n","fig, ax = plt.subplots(figsize=(6, 4), dpi=150)\n","\n","background_color = \"#fafafa\"\n","fig.patch.set_facecolor(background_color)\n","ax.set_facecolor(background_color)\n","for s in ['top', 'right']:\n","    ax.spines[s].set_visible(False)\n","\n","fig.text(0.13, 0.93, '''The optimal number of clusters is where\n","the W.C.S.S is minimised and Silhouette Score is maximised''', fontsize=8, color='gray', ha='left')\n","\n","fig.text(0.13, 1.02, 'The Elbow Method and Silhouette Score', fontfamily='sans-serif', fontweight='bold', fontsize=12, color='#323232')\n","\n","plt.tick_params(axis='both', which='major', labelsize=8)\n","plt.tick_params(axis=u'both', which=u'both', length=0)\n","\n","'''\n","plt.annotate('We will select\\n3 Clusters', xy=(3, wcss[2]), xytext=(3.7, wcss[2] + 100),\n","             arrowprops=dict(facecolor='steelblue', arrowstyle=\"->\", connectionstyle=\"arc3,rad=.3\"),\n","             fontsize=8, fontfamily='monospace', ha='center', color='#FF0000')\n","'''\n","\n","# Plot of W.C.S.S. (elbow method)\n","ax.plot(range(2, 9), wcss, color='gold', label='W.C.S.S')\n","ax.set_xlabel('No. of Clusters', fontsize=8)\n","ax.set_ylabel('W.C.S.S.', fontsize=8)\n","\n","# Plot of silhouette coefficient\n","ax2 = ax.twinx()\n","ax2.plot(range(2, 9), silhouette_scores, color='steelblue', linestyle='dashed', marker='o', label='Silhouette Score')\n","ax2.set_ylabel('Silhouette Score', fontsize=8)\n","\n","# Labels\n","ax.set_xticks(range(2, 9))\n","ax.set_xticklabels(range(2, 9), fontsize=8)\n","\n","# Legend\n","lines, labels = ax.get_legend_handles_labels()\n","lines2, labels2 = ax2.get_legend_handles_labels()\n","ax2.legend(lines + lines2, labels + labels2, loc='upper right', fontsize=8)\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"Ynvw6GBTBfgM","executionInfo":{"status":"ok","timestamp":1694073679247,"user_tz":-120,"elapsed":1296,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"16111be3-5661-4e62-cd20-66dcaf82c71b"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["According to the graph above, the proper number of cluster should be between 4 and 6 because they are the quantities of clusters that minimize significantly the WCSS (Within Cluster Sum of Squares, but at the same time they casue a significant reduction in silhouette coefficient.  \n","\n","\n"],"metadata":{"id":"Hdtvln1Znvvb"}},{"cell_type":"markdown","source":["**We observe the same graph using PR e CL as clustering variables**\n","\n","This is possible due to the fact that PR (politic rights) and CL (civil rights) are the sum of the values of the variables A-C (for PR) and D-G (for CL). So, in conclusion, they express the same information less fragmented."],"metadata":{"id":"5gdqH7MKDpOi"}},{"cell_type":"code","source":["num_col = ['PR', 'CL']\n","scaler = MinMaxScaler()\n","\n","for i in num_col:\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","\n","df_2013.describe().transpose()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":613},"id":"RR_igKoFDvPR","executionInfo":{"status":"ok","timestamp":1694073679253,"user_tz":-120,"elapsed":71,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"5b999f47-6f64-4a6c-dba1-0d9994ef5ad3"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-95467e449bf5>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n","<ipython-input-9-95467e449bf5>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013[[i]] = scaler.fit_transform(df_2013[[i]])\n"]},{"output_type":"execute_result","data":{"text/plain":["       count       mean        std  min        25%        50%         75%  \\\n","index  135.0  67.000000  39.115214  0.0  33.500000  67.000000  100.500000   \n","A      135.0   0.641975   0.344055  0.0   0.333333   0.750000    1.000000   \n","B      135.0   0.635648   0.311242  0.0   0.375000   0.687500    0.937500   \n","C      135.0   0.537654   0.295720  0.0   0.250000   0.583333    0.750000   \n","D      135.0   0.677531   0.279446  0.0   0.466667   0.733333    0.933333   \n","E      135.0   0.635802   0.304530  0.0   0.375000   0.666667    0.916667   \n","F      135.0   0.504630   0.293611  0.0   0.250000   0.437500    0.750000   \n","G      135.0   0.574815   0.259207  0.0   0.400000   0.600000    0.800000   \n","PR     135.0   0.616079   0.302278  0.0   0.341463   0.658537    0.902439   \n","CL     135.0   0.580159   0.282016  0.0   0.357143   0.571429    0.830357   \n","Total  135.0  60.748148  27.922258  4.0  39.000000  62.000000   86.000000   \n","\n","         max  \n","index  134.0  \n","A        1.0  \n","B        1.0  \n","C        1.0  \n","D        1.0  \n","E        1.0  \n","F        1.0  \n","G        1.0  \n","PR       1.0  \n","CL       1.0  \n","Total  100.0  "],"text/html":["\n","  <div id=\"df-9124063b-bc77-4605-aa47-10ab320d6e13\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>index</th>\n","      <td>135.0</td>\n","      <td>67.000000</td>\n","      <td>39.115214</td>\n","      <td>0.0</td>\n","      <td>33.500000</td>\n","      <td>67.000000</td>\n","      <td>100.500000</td>\n","      <td>134.0</td>\n","    </tr>\n","    <tr>\n","      <th>A</th>\n","      <td>135.0</td>\n","      <td>0.641975</td>\n","      <td>0.344055</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.750000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>135.0</td>\n","      <td>0.635648</td>\n","      <td>0.311242</td>\n","      <td>0.0</td>\n","      <td>0.375000</td>\n","      <td>0.687500</td>\n","      <td>0.937500</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>135.0</td>\n","      <td>0.537654</td>\n","      <td>0.295720</td>\n","      <td>0.0</td>\n","      <td>0.250000</td>\n","      <td>0.583333</td>\n","      <td>0.750000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td>135.0</td>\n","      <td>0.677531</td>\n","      <td>0.279446</td>\n","      <td>0.0</td>\n","      <td>0.466667</td>\n","      <td>0.733333</td>\n","      <td>0.933333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>E</th>\n","      <td>135.0</td>\n","      <td>0.635802</td>\n","      <td>0.304530</td>\n","      <td>0.0</td>\n","      <td>0.375000</td>\n","      <td>0.666667</td>\n","      <td>0.916667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>135.0</td>\n","      <td>0.504630</td>\n","      <td>0.293611</td>\n","      <td>0.0</td>\n","      <td>0.250000</td>\n","      <td>0.437500</td>\n","      <td>0.750000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>135.0</td>\n","      <td>0.574815</td>\n","      <td>0.259207</td>\n","      <td>0.0</td>\n","      <td>0.400000</td>\n","      <td>0.600000</td>\n","      <td>0.800000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>PR</th>\n","      <td>135.0</td>\n","      <td>0.616079</td>\n","      <td>0.302278</td>\n","      <td>0.0</td>\n","      <td>0.341463</td>\n","      <td>0.658537</td>\n","      <td>0.902439</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>CL</th>\n","      <td>135.0</td>\n","      <td>0.580159</td>\n","      <td>0.282016</td>\n","      <td>0.0</td>\n","      <td>0.357143</td>\n","      <td>0.571429</td>\n","      <td>0.830357</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total</th>\n","      <td>135.0</td>\n","      <td>60.748148</td>\n","      <td>27.922258</td>\n","      <td>4.0</td>\n","      <td>39.000000</td>\n","      <td>62.000000</td>\n","      <td>86.000000</td>\n","      <td>100.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9124063b-bc77-4605-aa47-10ab320d6e13')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9124063b-bc77-4605-aa47-10ab320d6e13 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9124063b-bc77-4605-aa47-10ab320d6e13');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b50ff909-5a55-4734-b692-6af025e1a137\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b50ff909-5a55-4734-b692-6af025e1a137')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b50ff909-5a55-4734-b692-6af025e1a137 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X_scaled = df_2013[['PR', 'CL']]\n","\n","wcss = []\n","silhouette_scores = []\n","for i in range(2, 9):\n","    km = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=123)\n","    km.fit(X_scaled)\n","    wcss.append(km.inertia_)\n","    silhouette_scores.append(silhouette_score(X_scaled, km.labels_))\n","\n","# Plot\n","fig, ax = plt.subplots(figsize=(6, 4), dpi=150)\n","\n","background_color = \"#fafafa\"\n","fig.patch.set_facecolor(background_color)\n","ax.set_facecolor(background_color)\n","for s in ['top', 'right']:\n","    ax.spines[s].set_visible(False)\n","\n","fig.text(0.13, 0.93, '''The optimal number of clusters is where\n","the W.C.S.S is minimised and Silhouette Score is maximised''', fontsize=8, color='gray', ha='left')\n","\n","fig.text(0.13, 1.02, 'The Elbow Method and Silhouette Score', fontfamily='sans-serif', fontweight='bold', fontsize=12, color='#323232')\n","\n","plt.tick_params(axis='both', which='major', labelsize=8)\n","plt.tick_params(axis=u'both', which=u'both', length=0)\n","\n","'''\n","plt.annotate('We will select\\n3 Clusters', xy=(3, wcss[2]), xytext=(3.7, wcss[2] + 100),\n","             arrowprops=dict(facecolor='steelblue', arrowstyle=\"->\", connectionstyle=\"arc3,rad=.3\"),\n","             fontsize=8, fontfamily='monospace', ha='center', color='#FF0000')\n","'''\n","\n","# Plot of W.C.S.S. (elbow method)\n","ax.plot(range(2, 9), wcss, color='gold', label='W.C.S.S')\n","ax.set_xlabel('No. of Clusters', fontsize=8)\n","ax.set_ylabel('W.C.S.S.', fontsize=8)\n","\n","# Plot of silhouette coefficient\n","ax2 = ax.twinx()\n","ax2.plot(range(2, 9), silhouette_scores, color='steelblue', linestyle='dashed', marker='o', label='Silhouette Score')\n","ax2.set_ylabel('Silhouette Score', fontsize=8)\n","\n","# Labels\n","ax.set_xticks(range(2, 9))\n","ax.set_xticklabels(range(2, 9), fontsize=8)\n","\n","# Legend\n","lines, labels = ax.get_legend_handles_labels()\n","lines2, labels2 = ax2.get_legend_handles_labels()\n","ax2.legend(lines + lines2, labels + labels2, loc='upper right', fontsize=8)\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"biQL7MiREGRO","executionInfo":{"status":"ok","timestamp":1694073681582,"user_tz":-120,"elapsed":2379,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"1e2e1d17-15c8-490d-c435-d5cc6b860d3d"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Since the fact that PR and CL variables allow us to obtain higher silhouette score and lower WCSS (Within Cluster Sum of Squares), we decide to clusterize data using these variables.\n","\n","Observing the graph above, the proper number of cluster should be 5 according to the trade-off between minimizing WCSS and maximizing silhouette coefficient.\n","\n","In the following code we will clusterize data of 2013 and 2022 using 5 clusters and evaluating them according to internal evaluaton metrix.\n","External evaluation cannot be performed because it requires an a-priori partiotion already known and in our case is the partition provided by 'Status' in Free countries, Partially Free and Not Free (so in 3 clusters).\n","\n","\n","\n","In the end we evaluate differences in clustering in 2013 and 2022, in order to see if some countries have changed their situation and why."],"metadata":{"id":"Y6jspBT1Mc6g"}},{"cell_type":"code","source":["seed = 123\n","selected_columns_2 = ['A', 'B', 'C', 'D', 'E', 'F', 'G']\n","k = 5\n","kmeans = KMeans(n_clusters=k,\n","                random_state=seed,\n","                init='k-means++',\n","                max_iter=300,\n","                n_init=10)\n","\n","kmeans.fit(df_2013[selected_columns_2])\n","\n","labels_2 = kmeans.labels_\n","\n","centroids_2 = kmeans.cluster_centers_\n"],"metadata":{"id":"kbSGZxiJbCsS","executionInfo":{"status":"ok","timestamp":1694073681586,"user_tz":-120,"elapsed":56,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["seed = 123\n","\n","selected_columns = ['PR', 'CL']\n","\n","k = 5\n","kmeans = KMeans(n_clusters=k,\n","                random_state=seed,\n","                init='k-means++',\n","                max_iter=300,\n","                n_init=10)\n","\n","kmeans.fit(df_2013[selected_columns])\n","\n","labels = kmeans.labels_\n","\n","centroids = kmeans.cluster_centers_\n","\n","\n","df_2013['Cluster'] = labels\n","labels"],"metadata":{"id":"tyeGthbB_Z1n","executionInfo":{"status":"ok","timestamp":1694073681973,"user_tz":-120,"elapsed":439,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d6106656-4e5e-41b8-ef0e-c26f9c0c7f47"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-fe490f3bb3a8>:19: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013['Cluster'] = labels\n"]},{"output_type":"execute_result","data":{"text/plain":["array([1, 0, 1, 4, 3, 2, 2, 1, 1, 0, 1, 2, 4, 3, 0, 0, 4, 4, 4, 3, 1, 1,\n","       2, 1, 2, 1, 0, 1, 1, 2, 3, 4, 2, 2, 2, 4, 0, 3, 4, 2, 1, 2, 2, 3,\n","       0, 2, 4, 4, 0, 3, 3, 3, 2, 2, 4, 0, 1, 1, 2, 4, 2, 4, 2, 3, 1, 0,\n","       3, 3, 3, 4, 3, 2, 2, 3, 0, 3, 1, 2, 3, 0, 0, 4, 4, 3, 1, 3, 2, 2,\n","       3, 0, 3, 0, 3, 4, 0, 4, 0, 2, 2, 4, 1, 1, 1, 4, 4, 0, 3, 2, 2, 4,\n","       4, 2, 3, 2, 1, 2, 1, 0, 0, 4, 0, 0, 1, 3, 0, 1, 2, 2, 2, 1, 3, 1,\n","       1, 0, 1], dtype=int32)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["import numpy as np\n","\n","cluster_array = np.array([1, 0, 1, 4, 3, 2, 2, 1, 1, 0, 1, 2, 4, 3, 0, 0, 4, 4, 4, 3, 1, 1,\n","                          2, 1, 2, 1, 0, 1, 1, 2, 3, 4, 2, 2, 2, 4, 0, 3, 4, 2, 1, 2, 2, 3,\n","                          0, 2, 4, 4, 0, 3, 3, 3, 2, 2, 4, 0, 1, 1, 2, 4, 2, 4, 2, 3, 1, 0,\n","                          3, 3, 3, 4, 3, 2, 2, 3, 0, 3, 1, 2, 3, 0, 0, 4, 4, 3, 1, 3, 2, 2,\n","                          3, 0, 3, 0, 3, 4, 0, 4, 0, 2, 2, 4, 1, 1, 1, 4, 4, 0, 3, 2, 2, 4,\n","                          4, 2, 3, 2, 1, 2, 1, 0, 0, 4, 0, 0, 1, 3, 0, 1, 2, 2, 2, 1, 3, 1,\n","                          1, 0, 1])\n","\n","remapped_clusters = np.where(cluster_array == 1, 0,\n","                             np.where(cluster_array == 3, 1,\n","                                      np.where(cluster_array == 0, 2,\n","                                               np.where(cluster_array == 4, 3, 4))))\n","\n","print(remapped_clusters)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UTr87KvtKBX_","executionInfo":{"status":"ok","timestamp":1694073681981,"user_tz":-120,"elapsed":45,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"df011b70-82f0-4653-f25f-3b50ee377c62"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 2 0 3 1 4 4 0 0 2 0 4 3 1 2 2 3 3 3 1 0 0 4 0 4 0 2 0 0 4 1 3 4 4 4 3 2\n"," 1 3 4 0 4 4 1 2 4 3 3 2 1 1 1 4 4 3 2 0 0 4 3 4 3 4 1 0 2 1 1 1 3 1 4 4 1\n"," 2 1 0 4 1 2 2 3 3 1 0 1 4 4 1 2 1 2 1 3 2 3 2 4 4 3 0 0 0 3 3 2 1 4 4 3 3\n"," 4 1 4 0 4 0 2 2 3 2 2 0 1 2 0 4 4 4 0 1 0 0 2 0]\n"]}]},{"cell_type":"code","source":["df_2013['Cluster'] = remapped_clusters\n","\n","df_2013['Political Rights']= data_2013['PR']\n","df_2013['Civil Rights']= data_2013['CL']\n"],"metadata":{"id":"kIVa-6P-N4e0","executionInfo":{"status":"ok","timestamp":1694073681983,"user_tz":-120,"elapsed":35,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2cd7dcff-05d1-48e6-8aa4-f1890fcaacdd"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-14-e9b40762dc3b>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013['Cluster'] = remapped_clusters\n","<ipython-input-14-e9b40762dc3b>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013['Political Rights']= data_2013['PR']\n","<ipython-input-14-e9b40762dc3b>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013['Civil Rights']= data_2013['CL']\n"]}]},{"cell_type":"code","source":["\n","df_2013['Cluster'] = df_2013['Cluster'].astype(int)\n","\n","#interactive plot\n","fig = px.scatter(df_2013,\n","                 x='PR',\n","                 y='CL',\n","                 color='Cluster',\n","                 hover_data=['Country name', 'Political Rights', 'Civil Rights', 'Total'])\n","\n","#centroids\n","fig.add_trace(go.Scatter(x=centroids[:, 0],\n","                         y=centroids[:, 1],\n","                         mode='markers',\n","                         marker=dict(color='black', size=10, symbol='x'),\n","                         name='Centroids'))\n","\n","fig.update_layout(\n","    title_text=\"Scatterplot of Clustering_2013\"\n",")\n","\n","fig.update_traces(showlegend=False, legendgroup=None, name='Cluster')\n","fig.update_layout(legend=dict(title=dict(text='Cluster')))\n","\n","fig.show()\n","\n","fig.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"JGGySUifJfRo","outputId":"f341af00-388f-46b9-9178-9bcd9845840e","executionInfo":{"status":"ok","timestamp":1694073682720,"user_tz":-120,"elapsed":765,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}}},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-6dd851180ec2>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_2013['Cluster'] = df_2013['Cluster'].astype(int)\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"b4f40a2e-8960-4319-8a6b-26f0aae582bd\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"b4f40a2e-8960-4319-8a6b-26f0aae582bd\")) {                    Plotly.newPlot(                        \"b4f40a2e-8960-4319-8a6b-26f0aae582bd\",                        [{\"customdata\":[[\"Afghanistan\",11,16,27],[\"Albania\",24,39,63],[\"Angola\",11,19,30],[\"Argentina\",31,49,80],[\"Armenia\",13,29,42],[\"Australia\",39,58,97],[\"Austria\",38,58,96],[\"Azerbaijan\",6,17,23],[\"Bahrain\",6,12,18],[\"Bangladesh\",25,31,56],[\"Belarus\",4,10,14],[\"Belgium\",40,57,97],[\"Benin\",32,50,82],[\"Bhutan\",22,24,46],[\"Bolivia\",29,40,69],[\"Bosnia and Herzegovina\",25,37,62],[\"Botswana\",28,46,74],[\"Brazil\",33,48,81],[\"Bulgaria\",34,47,81],[\"Burkina Faso\",17,36,53],[\"Cambodia\",9,20,29],[\"Cameroon\",7,16,23],[\"Canada\",40,58,98],[\"Chad\",5,16,21],[\"Chile\",39,57,96],[\"China\",2,15,17],[\"Colombia\",27,34,61],[\"Congo (Brazzaville)\",7,22,29],[\"Congo (Kinshasa)\",9,11,20],[\"Costa Rica\",38,53,91],[\"Cote d'Ivoire\",13,21,34],[\"Croatia\",36,50,86],[\"Cyprus\",38,55,93],[\"Czech Republic\",38,57,95],[\"Denmark\",40,58,98],[\"Dominican Republic\",31,44,75],[\"Ecuador\",24,36,60],[\"Egypt\",16,25,41],[\"El Salvador\",35,42,77],[\"Estonia\",39,56,95],[\"Ethiopia\",7,11,18],[\"Finland\",40,60,100],[\"France\",38,57,95],[\"Gabon\",9,25,34],[\"Georgia\",24,36,60],[\"Germany\",39,57,96],[\"Ghana\",37,47,84],[\"Greece\",35,48,83],[\"Guatemala\",24,33,57],[\"Guinea\",15,24,39],[\"Haiti\",19,24,43],[\"Honduras\",18,33,51],[\"Hungary\",36,52,88],[\"Iceland\",40,60,100],[\"India\",34,42,76],[\"Indonesia\",30,35,65],[\"Iran\",6,10,16],[\"Iraq\",11,13,24],[\"Ireland\",39,58,97],[\"Israel\",36,45,81],[\"Italy\",35,53,88],[\"Jamaica\",33,40,73],[\"Japan\",37,51,88],[\"Jordan\",10,24,34],[\"Kazakhstan\",6,20,26],[\"Kenya\",21,34,55],[\"Kosovo\",16,26,42],[\"Kuwait\",17,24,41],[\"Kyrgyzstan\",14,25,39],[\"Latvia\",33,51,84],[\"Lebanon\",17,32,49],[\"Lithuania\",37,53,90],[\"Luxembourg\",40,60,100],[\"Madagascar\",7,28,35],[\"Malawi\",26,34,60],[\"Malaysia\",20,28,48],[\"Mali\",5,19,24],[\"Malta\",39,58,97],[\"Mauritania\",11,23,34],[\"Mexico\",28,37,65],[\"Moldova\",29,36,65],[\"Mongolia\",36,50,86],[\"Montenegro\",27,45,72],[\"Morocco\",16,27,43],[\"Myanmar\",9,17,26],[\"Nepal\",20,27,47],[\"Netherlands\",40,59,99],[\"New Zealand\",39,58,97],[\"Nicaragua\",17,34,51],[\"Niger\",26,30,56],[\"Nigeria\",20,26,46],[\"North Macedonia\",26,38,64],[\"Pakistan\",20,22,42],[\"Panama\",36,46,82],[\"Paraguay\",27,35,62],[\"Peru\",30,41,71],[\"Philippines\",26,37,63],[\"Poland\",38,55,93],[\"Portugal\",39,58,97],[\"Romania\",32,49,81],[\"Russia\",7,20,27],[\"Rwanda\",8,16,24],[\"Saudi Arabia\",3,7,10],[\"Senegal\",32,43,75],[\"Serbia\",30,48,78],[\"Sierra Leone\",30,40,70],[\"Singapore\",19,33,52],[\"Slovakia\",37,55,92],[\"Slovenia\",38,53,91],[\"South Africa\",34,47,81],[\"South Korea\",36,50,86],[\"Spain\",39,57,96],[\"Sri Lanka\",16,27,43],[\"Sweden\",40,60,100],[\"Syria\",-1,6,5],[\"Taiwan\",36,52,88],[\"Tajikistan\",8,16,24],[\"Tanzania\",28,38,66],[\"Thailand\",22,31,53],[\"Trinidad and Tobago\",33,48,81],[\"Tunisia\",26,33,59],[\"Turkey\",28,33,61],[\"Turkmenistan\",1,6,7],[\"Uganda\",12,28,40],[\"Ukraine\",21,36,57],[\"United Arab Emirates\",8,14,22],[\"United Kingdom\",40,57,97],[\"United States\",37,56,93],[\"Uruguay\",39,58,97],[\"Uzbekistan\",0,4,4],[\"Venezuela\",15,24,39],[\"Vietnam\",2,17,19],[\"Yemen\",9,16,25],[\"Zambia\",28,34,62],[\"Zimbabwe\",11,14,25]],\"hovertemplate\":\"PR=%{x}\\u003cbr\\u003eCL=%{y}\\u003cbr\\u003eCountry name=%{customdata[0]}\\u003cbr\\u003ePolitical Rights=%{customdata[1]}\\u003cbr\\u003eCivil Rights=%{customdata[2]}\\u003cbr\\u003eTotal=%{customdata[3]}\\u003cbr\\u003eCluster=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"marker\":{\"color\":[0,2,0,3,1,4,4,0,0,2,0,4,3,1,2,2,3,3,3,1,0,0,4,0,4,0,2,0,0,4,1,3,4,4,4,3,2,1,3,4,0,4,4,1,2,4,3,3,2,1,1,1,4,4,3,2,0,0,4,3,4,3,4,1,0,2,1,1,1,3,1,4,4,1,2,1,0,4,1,2,2,3,3,1,0,1,4,4,1,2,1,2,1,3,2,3,2,4,4,3,0,0,0,3,3,2,1,4,4,3,3,4,1,4,0,4,0,2,2,3,2,2,0,1,2,0,4,4,4,0,1,0,0,2,0],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"Cluster\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[0.29268292682926833,0.6097560975609757,0.29268292682926833,0.7804878048780488,0.34146341463414637,0.9756097560975611,0.951219512195122,0.17073170731707318,0.17073170731707318,0.6341463414634146,0.12195121951219512,1.0,0.8048780487804879,0.5609756097560976,0.7317073170731708,0.6341463414634146,0.7073170731707318,0.8292682926829269,0.853658536585366,0.4390243902439025,0.24390243902439024,0.1951219512195122,1.0,0.14634146341463414,0.9756097560975611,0.07317073170731708,0.6829268292682927,0.1951219512195122,0.24390243902439024,0.951219512195122,0.34146341463414637,0.9024390243902439,0.951219512195122,0.951219512195122,1.0,0.7804878048780488,0.6097560975609757,0.41463414634146345,0.8780487804878049,0.9756097560975611,0.1951219512195122,1.0,0.951219512195122,0.24390243902439024,0.6097560975609757,0.9756097560975611,0.926829268292683,0.8780487804878049,0.6097560975609757,0.3902439024390244,0.48780487804878053,0.4634146341463415,0.9024390243902439,1.0,0.853658536585366,0.7560975609756098,0.17073170731707318,0.29268292682926833,0.9756097560975611,0.9024390243902439,0.8780487804878049,0.8292682926829269,0.926829268292683,0.2682926829268293,0.17073170731707318,0.5365853658536586,0.41463414634146345,0.4390243902439025,0.3658536585365854,0.8292682926829269,0.4390243902439025,0.926829268292683,1.0,0.1951219512195122,0.6585365853658537,0.5121951219512195,0.14634146341463414,0.9756097560975611,0.29268292682926833,0.7073170731707318,0.7317073170731708,0.9024390243902439,0.6829268292682927,0.41463414634146345,0.24390243902439024,0.5121951219512195,1.0,0.9756097560975611,0.4390243902439025,0.6585365853658537,0.5121951219512195,0.6585365853658537,0.5121951219512195,0.9024390243902439,0.6829268292682927,0.7560975609756098,0.6585365853658537,0.951219512195122,0.9756097560975611,0.8048780487804879,0.1951219512195122,0.21951219512195122,0.0975609756097561,0.8048780487804879,0.7560975609756098,0.7560975609756098,0.48780487804878053,0.926829268292683,0.951219512195122,0.853658536585366,0.9024390243902439,0.9756097560975611,0.41463414634146345,1.0,0.0,0.9024390243902439,0.21951219512195122,0.7073170731707318,0.5609756097560976,0.8292682926829269,0.6585365853658537,0.7073170731707318,0.04878048780487805,0.3170731707317074,0.5365853658536586,0.21951219512195122,1.0,0.926829268292683,0.9756097560975611,0.024390243902439025,0.3902439024390244,0.07317073170731708,0.24390243902439024,0.7073170731707318,0.29268292682926833],\"xaxis\":\"x\",\"y\":[0.21428571428571427,0.625,0.2678571428571428,0.8035714285714286,0.4464285714285714,0.9642857142857142,0.9642857142857142,0.23214285714285712,0.14285714285714285,0.4821428571428571,0.10714285714285712,0.9464285714285714,0.8214285714285714,0.3571428571428571,0.6428571428571428,0.5892857142857143,0.75,0.7857142857142857,0.7678571428571428,0.5714285714285714,0.2857142857142857,0.21428571428571427,0.9642857142857142,0.21428571428571427,0.9464285714285714,0.19642857142857142,0.5357142857142857,0.3214285714285714,0.125,0.875,0.3035714285714286,0.8214285714285714,0.9107142857142857,0.9464285714285714,0.9642857142857142,0.7142857142857143,0.5714285714285714,0.375,0.6785714285714286,0.9285714285714286,0.125,1.0,0.9464285714285714,0.375,0.5714285714285714,0.9464285714285714,0.7678571428571428,0.7857142857142857,0.5178571428571429,0.3571428571428571,0.3571428571428571,0.5178571428571429,0.8571428571428571,1.0,0.6785714285714286,0.5535714285714286,0.10714285714285712,0.1607142857142857,0.9642857142857142,0.7321428571428571,0.875,0.6428571428571428,0.8392857142857143,0.3571428571428571,0.2857142857142857,0.5357142857142857,0.3928571428571428,0.3571428571428571,0.375,0.8392857142857143,0.5,0.875,1.0,0.4285714285714286,0.5357142857142857,0.4285714285714286,0.2678571428571428,0.9642857142857142,0.3392857142857143,0.5892857142857143,0.5714285714285714,0.8214285714285714,0.7321428571428571,0.4107142857142857,0.23214285714285712,0.4107142857142857,0.9821428571428572,0.9642857142857142,0.5357142857142857,0.4642857142857143,0.3928571428571428,0.6071428571428571,0.3214285714285714,0.75,0.5535714285714286,0.6607142857142857,0.5892857142857143,0.9107142857142857,0.9642857142857142,0.8035714285714286,0.2857142857142857,0.21428571428571427,0.053571428571428575,0.6964285714285714,0.7857142857142857,0.6428571428571428,0.5178571428571429,0.9107142857142857,0.875,0.7678571428571428,0.8214285714285714,0.9464285714285714,0.4107142857142857,1.0,0.03571428571428571,0.8571428571428571,0.21428571428571427,0.6071428571428571,0.4821428571428571,0.7857142857142857,0.5178571428571429,0.5178571428571429,0.03571428571428571,0.4285714285714286,0.5714285714285714,0.17857142857142858,0.9464285714285714,0.9285714285714286,0.9642857142857142,0.0,0.3571428571428571,0.23214285714285712,0.21428571428571427,0.5357142857142857,0.17857142857142858],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\",\"size\":10,\"symbol\":\"x\"},\"mode\":\"markers\",\"name\":\"Cluster\",\"x\":[0.6585365853658537,0.17857142857142855,0.9637841832963785,0.40806754221388364,0.8313008130081302],\"y\":[0.5587797619047619,0.18367346938775514,0.9372294372294372,0.40865384615384615,0.7589285714285714],\"type\":\"scatter\",\"showlegend\":false}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"PR\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"CL\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Cluster\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0,\"title\":{\"text\":\"Cluster\"}},\"margin\":{\"t\":60},\"title\":{\"text\":\"Scatterplot of Clustering_2013\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('b4f40a2e-8960-4319-8a6b-26f0aae582bd');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"a2d3497a-5149-4a14-b14c-34f86fc3dacf\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"a2d3497a-5149-4a14-b14c-34f86fc3dacf\")) {                    Plotly.newPlot(                        \"a2d3497a-5149-4a14-b14c-34f86fc3dacf\",                        [{\"customdata\":[[\"Afghanistan\",11,16,27],[\"Albania\",24,39,63],[\"Angola\",11,19,30],[\"Argentina\",31,49,80],[\"Armenia\",13,29,42],[\"Australia\",39,58,97],[\"Austria\",38,58,96],[\"Azerbaijan\",6,17,23],[\"Bahrain\",6,12,18],[\"Bangladesh\",25,31,56],[\"Belarus\",4,10,14],[\"Belgium\",40,57,97],[\"Benin\",32,50,82],[\"Bhutan\",22,24,46],[\"Bolivia\",29,40,69],[\"Bosnia and Herzegovina\",25,37,62],[\"Botswana\",28,46,74],[\"Brazil\",33,48,81],[\"Bulgaria\",34,47,81],[\"Burkina Faso\",17,36,53],[\"Cambodia\",9,20,29],[\"Cameroon\",7,16,23],[\"Canada\",40,58,98],[\"Chad\",5,16,21],[\"Chile\",39,57,96],[\"China\",2,15,17],[\"Colombia\",27,34,61],[\"Congo (Brazzaville)\",7,22,29],[\"Congo (Kinshasa)\",9,11,20],[\"Costa Rica\",38,53,91],[\"Cote d'Ivoire\",13,21,34],[\"Croatia\",36,50,86],[\"Cyprus\",38,55,93],[\"Czech Republic\",38,57,95],[\"Denmark\",40,58,98],[\"Dominican Republic\",31,44,75],[\"Ecuador\",24,36,60],[\"Egypt\",16,25,41],[\"El Salvador\",35,42,77],[\"Estonia\",39,56,95],[\"Ethiopia\",7,11,18],[\"Finland\",40,60,100],[\"France\",38,57,95],[\"Gabon\",9,25,34],[\"Georgia\",24,36,60],[\"Germany\",39,57,96],[\"Ghana\",37,47,84],[\"Greece\",35,48,83],[\"Guatemala\",24,33,57],[\"Guinea\",15,24,39],[\"Haiti\",19,24,43],[\"Honduras\",18,33,51],[\"Hungary\",36,52,88],[\"Iceland\",40,60,100],[\"India\",34,42,76],[\"Indonesia\",30,35,65],[\"Iran\",6,10,16],[\"Iraq\",11,13,24],[\"Ireland\",39,58,97],[\"Israel\",36,45,81],[\"Italy\",35,53,88],[\"Jamaica\",33,40,73],[\"Japan\",37,51,88],[\"Jordan\",10,24,34],[\"Kazakhstan\",6,20,26],[\"Kenya\",21,34,55],[\"Kosovo\",16,26,42],[\"Kuwait\",17,24,41],[\"Kyrgyzstan\",14,25,39],[\"Latvia\",33,51,84],[\"Lebanon\",17,32,49],[\"Lithuania\",37,53,90],[\"Luxembourg\",40,60,100],[\"Madagascar\",7,28,35],[\"Malawi\",26,34,60],[\"Malaysia\",20,28,48],[\"Mali\",5,19,24],[\"Malta\",39,58,97],[\"Mauritania\",11,23,34],[\"Mexico\",28,37,65],[\"Moldova\",29,36,65],[\"Mongolia\",36,50,86],[\"Montenegro\",27,45,72],[\"Morocco\",16,27,43],[\"Myanmar\",9,17,26],[\"Nepal\",20,27,47],[\"Netherlands\",40,59,99],[\"New Zealand\",39,58,97],[\"Nicaragua\",17,34,51],[\"Niger\",26,30,56],[\"Nigeria\",20,26,46],[\"North Macedonia\",26,38,64],[\"Pakistan\",20,22,42],[\"Panama\",36,46,82],[\"Paraguay\",27,35,62],[\"Peru\",30,41,71],[\"Philippines\",26,37,63],[\"Poland\",38,55,93],[\"Portugal\",39,58,97],[\"Romania\",32,49,81],[\"Russia\",7,20,27],[\"Rwanda\",8,16,24],[\"Saudi Arabia\",3,7,10],[\"Senegal\",32,43,75],[\"Serbia\",30,48,78],[\"Sierra Leone\",30,40,70],[\"Singapore\",19,33,52],[\"Slovakia\",37,55,92],[\"Slovenia\",38,53,91],[\"South Africa\",34,47,81],[\"South Korea\",36,50,86],[\"Spain\",39,57,96],[\"Sri Lanka\",16,27,43],[\"Sweden\",40,60,100],[\"Syria\",-1,6,5],[\"Taiwan\",36,52,88],[\"Tajikistan\",8,16,24],[\"Tanzania\",28,38,66],[\"Thailand\",22,31,53],[\"Trinidad and Tobago\",33,48,81],[\"Tunisia\",26,33,59],[\"Turkey\",28,33,61],[\"Turkmenistan\",1,6,7],[\"Uganda\",12,28,40],[\"Ukraine\",21,36,57],[\"United Arab Emirates\",8,14,22],[\"United Kingdom\",40,57,97],[\"United States\",37,56,93],[\"Uruguay\",39,58,97],[\"Uzbekistan\",0,4,4],[\"Venezuela\",15,24,39],[\"Vietnam\",2,17,19],[\"Yemen\",9,16,25],[\"Zambia\",28,34,62],[\"Zimbabwe\",11,14,25]],\"hovertemplate\":\"PR=%{x}\\u003cbr\\u003eCL=%{y}\\u003cbr\\u003eCountry name=%{customdata[0]}\\u003cbr\\u003ePolitical Rights=%{customdata[1]}\\u003cbr\\u003eCivil Rights=%{customdata[2]}\\u003cbr\\u003eTotal=%{customdata[3]}\\u003cbr\\u003eCluster=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"marker\":{\"color\":[0,2,0,3,1,4,4,0,0,2,0,4,3,1,2,2,3,3,3,1,0,0,4,0,4,0,2,0,0,4,1,3,4,4,4,3,2,1,3,4,0,4,4,1,2,4,3,3,2,1,1,1,4,4,3,2,0,0,4,3,4,3,4,1,0,2,1,1,1,3,1,4,4,1,2,1,0,4,1,2,2,3,3,1,0,1,4,4,1,2,1,2,1,3,2,3,2,4,4,3,0,0,0,3,3,2,1,4,4,3,3,4,1,4,0,4,0,2,2,3,2,2,0,1,2,0,4,4,4,0,1,0,0,2,0],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"Cluster\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[0.29268292682926833,0.6097560975609757,0.29268292682926833,0.7804878048780488,0.34146341463414637,0.9756097560975611,0.951219512195122,0.17073170731707318,0.17073170731707318,0.6341463414634146,0.12195121951219512,1.0,0.8048780487804879,0.5609756097560976,0.7317073170731708,0.6341463414634146,0.7073170731707318,0.8292682926829269,0.853658536585366,0.4390243902439025,0.24390243902439024,0.1951219512195122,1.0,0.14634146341463414,0.9756097560975611,0.07317073170731708,0.6829268292682927,0.1951219512195122,0.24390243902439024,0.951219512195122,0.34146341463414637,0.9024390243902439,0.951219512195122,0.951219512195122,1.0,0.7804878048780488,0.6097560975609757,0.41463414634146345,0.8780487804878049,0.9756097560975611,0.1951219512195122,1.0,0.951219512195122,0.24390243902439024,0.6097560975609757,0.9756097560975611,0.926829268292683,0.8780487804878049,0.6097560975609757,0.3902439024390244,0.48780487804878053,0.4634146341463415,0.9024390243902439,1.0,0.853658536585366,0.7560975609756098,0.17073170731707318,0.29268292682926833,0.9756097560975611,0.9024390243902439,0.8780487804878049,0.8292682926829269,0.926829268292683,0.2682926829268293,0.17073170731707318,0.5365853658536586,0.41463414634146345,0.4390243902439025,0.3658536585365854,0.8292682926829269,0.4390243902439025,0.926829268292683,1.0,0.1951219512195122,0.6585365853658537,0.5121951219512195,0.14634146341463414,0.9756097560975611,0.29268292682926833,0.7073170731707318,0.7317073170731708,0.9024390243902439,0.6829268292682927,0.41463414634146345,0.24390243902439024,0.5121951219512195,1.0,0.9756097560975611,0.4390243902439025,0.6585365853658537,0.5121951219512195,0.6585365853658537,0.5121951219512195,0.9024390243902439,0.6829268292682927,0.7560975609756098,0.6585365853658537,0.951219512195122,0.9756097560975611,0.8048780487804879,0.1951219512195122,0.21951219512195122,0.0975609756097561,0.8048780487804879,0.7560975609756098,0.7560975609756098,0.48780487804878053,0.926829268292683,0.951219512195122,0.853658536585366,0.9024390243902439,0.9756097560975611,0.41463414634146345,1.0,0.0,0.9024390243902439,0.21951219512195122,0.7073170731707318,0.5609756097560976,0.8292682926829269,0.6585365853658537,0.7073170731707318,0.04878048780487805,0.3170731707317074,0.5365853658536586,0.21951219512195122,1.0,0.926829268292683,0.9756097560975611,0.024390243902439025,0.3902439024390244,0.07317073170731708,0.24390243902439024,0.7073170731707318,0.29268292682926833],\"xaxis\":\"x\",\"y\":[0.21428571428571427,0.625,0.2678571428571428,0.8035714285714286,0.4464285714285714,0.9642857142857142,0.9642857142857142,0.23214285714285712,0.14285714285714285,0.4821428571428571,0.10714285714285712,0.9464285714285714,0.8214285714285714,0.3571428571428571,0.6428571428571428,0.5892857142857143,0.75,0.7857142857142857,0.7678571428571428,0.5714285714285714,0.2857142857142857,0.21428571428571427,0.9642857142857142,0.21428571428571427,0.9464285714285714,0.19642857142857142,0.5357142857142857,0.3214285714285714,0.125,0.875,0.3035714285714286,0.8214285714285714,0.9107142857142857,0.9464285714285714,0.9642857142857142,0.7142857142857143,0.5714285714285714,0.375,0.6785714285714286,0.9285714285714286,0.125,1.0,0.9464285714285714,0.375,0.5714285714285714,0.9464285714285714,0.7678571428571428,0.7857142857142857,0.5178571428571429,0.3571428571428571,0.3571428571428571,0.5178571428571429,0.8571428571428571,1.0,0.6785714285714286,0.5535714285714286,0.10714285714285712,0.1607142857142857,0.9642857142857142,0.7321428571428571,0.875,0.6428571428571428,0.8392857142857143,0.3571428571428571,0.2857142857142857,0.5357142857142857,0.3928571428571428,0.3571428571428571,0.375,0.8392857142857143,0.5,0.875,1.0,0.4285714285714286,0.5357142857142857,0.4285714285714286,0.2678571428571428,0.9642857142857142,0.3392857142857143,0.5892857142857143,0.5714285714285714,0.8214285714285714,0.7321428571428571,0.4107142857142857,0.23214285714285712,0.4107142857142857,0.9821428571428572,0.9642857142857142,0.5357142857142857,0.4642857142857143,0.3928571428571428,0.6071428571428571,0.3214285714285714,0.75,0.5535714285714286,0.6607142857142857,0.5892857142857143,0.9107142857142857,0.9642857142857142,0.8035714285714286,0.2857142857142857,0.21428571428571427,0.053571428571428575,0.6964285714285714,0.7857142857142857,0.6428571428571428,0.5178571428571429,0.9107142857142857,0.875,0.7678571428571428,0.8214285714285714,0.9464285714285714,0.4107142857142857,1.0,0.03571428571428571,0.8571428571428571,0.21428571428571427,0.6071428571428571,0.4821428571428571,0.7857142857142857,0.5178571428571429,0.5178571428571429,0.03571428571428571,0.4285714285714286,0.5714285714285714,0.17857142857142858,0.9464285714285714,0.9285714285714286,0.9642857142857142,0.0,0.3571428571428571,0.23214285714285712,0.21428571428571427,0.5357142857142857,0.17857142857142858],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\",\"size\":10,\"symbol\":\"x\"},\"mode\":\"markers\",\"name\":\"Cluster\",\"x\":[0.6585365853658537,0.17857142857142855,0.9637841832963785,0.40806754221388364,0.8313008130081302],\"y\":[0.5587797619047619,0.18367346938775514,0.9372294372294372,0.40865384615384615,0.7589285714285714],\"type\":\"scatter\",\"showlegend\":false}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"PR\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"CL\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Cluster\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0,\"title\":{\"text\":\"Cluster\"}},\"margin\":{\"t\":60},\"title\":{\"text\":\"Scatterplot of Clustering_2013\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('a2d3497a-5149-4a14-b14c-34f86fc3dacf');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["fig = go.Figure(\n","    go.Choropleth(\n","        locations=df_2013[\"Country name\"],\n","        z=df_2013['Cluster'],\n","        locationmode='country names',\n","        colorscale= 'fall',\n","        autocolorscale=False,\n","        marker_line_color=\"white\",\n","        colorbar=dict(\n","            tickvals=[0, 1, 2, 3, 4],\n","            ticktext=[\"0\", \"1\", \"2\", \"3\", \"4\"]\n","        ),\n","        marker_line_width=0.5,\n","        )\n","    )\n","\n","fig.update_layout(\n","    title_text=\"Coropleth of Clustering_2013\",\n","    geo=dict(showcoastlines=True),\n",")\n","\n","fig.update_traces(showlegend=True, legendgroup=None, name='Cluster')\n","fig.update_layout(legend=dict(title=dict(text='Cluster')))\n","\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"_h1k_eGzD7YV","executionInfo":{"status":"ok","timestamp":1694073682724,"user_tz":-120,"elapsed":77,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"e8e13302-edb9-44d9-ebde-254269c42ea4"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"8b2bcd8b-72dd-4730-8001-f8e0b572d8b8\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8b2bcd8b-72dd-4730-8001-f8e0b572d8b8\")) {                    Plotly.newPlot(                        \"8b2bcd8b-72dd-4730-8001-f8e0b572d8b8\",                        [{\"autocolorscale\":false,\"colorbar\":{\"ticktext\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[0,1,2,3,4]},\"colorscale\":[[0.0,\"rgb(61, 89, 65)\"],[0.16666666666666666,\"rgb(119, 136, 104)\"],[0.3333333333333333,\"rgb(181, 185, 145)\"],[0.5,\"rgb(246, 237, 189)\"],[0.6666666666666666,\"rgb(237, 187, 138)\"],[0.8333333333333334,\"rgb(222, 138, 90)\"],[1.0,\"rgb(202, 86, 44)\"]],\"locationmode\":\"country names\",\"locations\":[\"Afghanistan\",\"Albania\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Costa Rica\",\"Cote d'Ivoire\",\"Croatia\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Haiti\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Latvia\",\"Lebanon\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Mali\",\"Malta\",\"Mauritania\",\"Mexico\",\"Moldova\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Myanmar\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Macedonia\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Romania\",\"Russia\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"South Africa\",\"South Korea\",\"Spain\",\"Sri Lanka\",\"Sweden\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Vietnam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],\"marker\":{\"line\":{\"color\":\"white\",\"width\":0.5}},\"z\":[0,2,0,3,1,4,4,0,0,2,0,4,3,1,2,2,3,3,3,1,0,0,4,0,4,0,2,0,0,4,1,3,4,4,4,3,2,1,3,4,0,4,4,1,2,4,3,3,2,1,1,1,4,4,3,2,0,0,4,3,4,3,4,1,0,2,1,1,1,3,1,4,4,1,2,1,0,4,1,2,2,3,3,1,0,1,4,4,1,2,1,2,1,3,2,3,2,4,4,3,0,0,0,3,3,2,1,4,4,3,3,4,1,4,0,4,0,2,2,3,2,2,0,1,2,0,4,4,4,0,1,0,0,2,0],\"type\":\"choropleth\",\"name\":\"Cluster\",\"showlegend\":true}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Coropleth of Clustering_2013\"},\"geo\":{\"showcoastlines\":true},\"legend\":{\"title\":{\"text\":\"Cluster\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('8b2bcd8b-72dd-4730-8001-f8e0b572d8b8');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["**Internal evaluation measures**\n","\n","They are based on the concept of distance and similarity within a cluster\n","and do not require external information such as an a-priori known partition.\n","\n","In the following chunck are presented:\n","- silhouette coefficient: [-1,+1], measures how much similar an object is to its own cluster (cohesion) compared to other clusters (separation); high value indicates that the object is well matched to its own cluster and poorly matched to neighboring clusters.\n","\n","- calinski harabasz coefficient: ratio of the sum of inter-cluster dispersion and the sum of intra-cluster dispersion for all clusters (where the dispersion is the sum of squared distances). Higher values mean good clustering.\n","\n","- davies bouldin: due to the way it is defined, as a function of the ratio of the within cluster scatter, to the between cluster separation,\n","a lower value will mean that the clustering is better. It is a symmetric and non negative index.\n"],"metadata":{"id":"ZeZqUOL7YQfn"}},{"cell_type":"code","source":["silhouette_coefficient_2 = silhouette_score(df_2013[selected_columns_2], labels_2)\n","calinski_harabasz_2= metrics.calinski_harabasz_score(df_2013[selected_columns_2], labels_2)\n","davies_bouldin_2 = davies_bouldin_score(df_2013[selected_columns_2], labels_2)\n","\n","silhouette_coefficient = silhouette_score(df_2013[selected_columns], remapped_clusters)\n","calinski_harabasz= metrics.calinski_harabasz_score(df_2013[selected_columns], remapped_clusters)\n","davies_bouldin = davies_bouldin_score(df_2013[selected_columns], remapped_clusters)\n","\n","print('Internal evaluation measures using Politics Rights (PR) and Civil Rights (CL) as Clustering variables')\n","print('\\n')\n","print(\"Coefficient of Silhouette:\", silhouette_coefficient)\n","print(f'Calinski Harabasz Score: {calinski_harabasz}')\n","print(f'Davies Bouldin Score using: {davies_bouldin}')\n","\n","print('\\n')\n","print('\\n')\n","print('Internal evaluation measures using single components (A-G) as Clustering variables')\n","print('\\n')\n","print(\"Coefficient of Silhouette:\", silhouette_coefficient_2)\n","print(f'Calinski Harabasz Score: {calinski_harabasz_2}')\n","print(f'Davies Bouldin Score: {davies_bouldin_2}')\n","\n"],"metadata":{"id":"Uv1FNdzsDGKC","executionInfo":{"status":"ok","timestamp":1694073683089,"user_tz":-120,"elapsed":437,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8b670b5a-be00-4cc3-ae04-b35e65882de6"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Internal evaluation measures using Politics Rights (PR) and Civil Rights (CL) as Clustering variables\n","\n","\n","Coefficient of Silhouette: 0.5273678155672247\n","Calinski Harabasz Score: 631.8716638507738\n","Davies Bouldin Score using: 0.5942538140434029\n","\n","\n","\n","\n","Internal evaluation measures using single components (A-G) as Clustering variables\n","\n","\n","Coefficient of Silhouette: 0.3925444136080149\n","Calinski Harabasz Score: 299.06644065461643\n","Davies Bouldin Score: 0.8948856852907557\n"]}]},{"cell_type":"markdown","source":["From the print above we notice that the clustering using PR and CL as variables allow us to obtain better labeling of the data, since the fact all the internal indices have better values: Silhouette and Calinski-Harabatz are higher, Davies Bouldin is lower."],"metadata":{"id":"rSVlPHeBa5un"}},{"cell_type":"markdown","source":["**Now let's better inspect clusters structure**"],"metadata":{"id":"7zJepwEWzGiH"}},{"cell_type":"code","source":["df_2013[df_2013['Cluster']==0][['Country name', 'Total', 'Political Rights', 'Civil Rights']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":927},"id":"Afc_au7DzMhE","executionInfo":{"status":"ok","timestamp":1694073683090,"user_tz":-120,"elapsed":110,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"c482bd8e-ef69-4b1e-ab1a-e631a07a1210"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Country name  Total  Political Rights  Civil Rights\n","0             Afghanistan     27                11            16\n","2                  Angola     30                11            19\n","7              Azerbaijan     23                 6            17\n","8                 Bahrain     18                 6            12\n","10                Belarus     14                 4            10\n","20               Cambodia     29                 9            20\n","21               Cameroon     23                 7            16\n","23                   Chad     21                 5            16\n","25                  China     17                 2            15\n","27    Congo (Brazzaville)     29                 7            22\n","28       Congo (Kinshasa)     20                 9            11\n","40               Ethiopia     18                 7            11\n","56                   Iran     16                 6            10\n","57                   Iraq     24                11            13\n","64             Kazakhstan     26                 6            20\n","76                   Mali     24                 5            19\n","84                Myanmar     26                 9            17\n","100                Russia     27                 7            20\n","101                Rwanda     24                 8            16\n","102          Saudi Arabia     10                 3             7\n","114                 Syria      5                -1             6\n","116            Tajikistan     24                 8            16\n","122          Turkmenistan      7                 1             6\n","125  United Arab Emirates     22                 8            14\n","129            Uzbekistan      4                 0             4\n","131               Vietnam     19                 2            17\n","132                 Yemen     25                 9            16\n","134              Zimbabwe     25                11            14"],"text/html":["\n","  <div id=\"df-a2431dd3-830f-4e1d-a0f1-c9cc7712acf3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Total</th>\n","      <th>Political Rights</th>\n","      <th>Civil Rights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>27</td>\n","      <td>11</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Angola</td>\n","      <td>30</td>\n","      <td>11</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Azerbaijan</td>\n","      <td>23</td>\n","      <td>6</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Bahrain</td>\n","      <td>18</td>\n","      <td>6</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Belarus</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Cambodia</td>\n","      <td>29</td>\n","      <td>9</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Cameroon</td>\n","      <td>23</td>\n","      <td>7</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Chad</td>\n","      <td>21</td>\n","      <td>5</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>China</td>\n","      <td>17</td>\n","      <td>2</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Congo (Brazzaville)</td>\n","      <td>29</td>\n","      <td>7</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Congo (Kinshasa)</td>\n","      <td>20</td>\n","      <td>9</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Ethiopia</td>\n","      <td>18</td>\n","      <td>7</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Iran</td>\n","      <td>16</td>\n","      <td>6</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Iraq</td>\n","      <td>24</td>\n","      <td>11</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>Kazakhstan</td>\n","      <td>26</td>\n","      <td>6</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>Mali</td>\n","      <td>24</td>\n","      <td>5</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>Myanmar</td>\n","      <td>26</td>\n","      <td>9</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>Russia</td>\n","      <td>27</td>\n","      <td>7</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>Rwanda</td>\n","      <td>24</td>\n","      <td>8</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>Saudi Arabia</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>114</th>\n","      <td>Syria</td>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>Tajikistan</td>\n","      <td>24</td>\n","      <td>8</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>122</th>\n","      <td>Turkmenistan</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>United Arab Emirates</td>\n","      <td>22</td>\n","      <td>8</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>129</th>\n","      <td>Uzbekistan</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>Vietnam</td>\n","      <td>19</td>\n","      <td>2</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>132</th>\n","      <td>Yemen</td>\n","      <td>25</td>\n","      <td>9</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>134</th>\n","      <td>Zimbabwe</td>\n","      <td>25</td>\n","      <td>11</td>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2431dd3-830f-4e1d-a0f1-c9cc7712acf3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a2431dd3-830f-4e1d-a0f1-c9cc7712acf3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a2431dd3-830f-4e1d-a0f1-c9cc7712acf3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e07afb53-ca5d-4c16-b103-f219416d2923\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e07afb53-ca5d-4c16-b103-f219416d2923')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e07afb53-ca5d-4c16-b103-f219416d2923 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["Cluster 0 includes the countries with the worst political and civil conditions. In particular, the scores for all variables fall within the first quarter."],"metadata":{"id":"JDwJ_tBYzwgP"}},{"cell_type":"code","source":["df_2013[df_2013['Cluster']==1][['Country name', 'Total', 'Political Rights', 'Civil Rights']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":864},"id":"y0yC5sYozyIK","executionInfo":{"status":"ok","timestamp":1694073683092,"user_tz":-120,"elapsed":109,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"b9937cc6-f245-442e-fbb7-d24125bcd431"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Country name  Total  Political Rights  Civil Rights\n","4          Armenia     42                13            29\n","13          Bhutan     46                22            24\n","19    Burkina Faso     53                17            36\n","30   Cote d'Ivoire     34                13            21\n","37           Egypt     41                16            25\n","43           Gabon     34                 9            25\n","49          Guinea     39                15            24\n","50           Haiti     43                19            24\n","51        Honduras     51                18            33\n","63          Jordan     34                10            24\n","66          Kosovo     42                16            26\n","67          Kuwait     41                17            24\n","68      Kyrgyzstan     39                14            25\n","70         Lebanon     49                17            32\n","73      Madagascar     35                 7            28\n","75        Malaysia     48                20            28\n","78      Mauritania     34                11            23\n","83         Morocco     43                16            27\n","85           Nepal     47                20            27\n","88       Nicaragua     51                17            34\n","90         Nigeria     46                20            26\n","92        Pakistan     42                20            22\n","106      Singapore     52                19            33\n","112      Sri Lanka     43                16            27\n","123         Uganda     40                12            28\n","130      Venezuela     39                15            24"],"text/html":["\n","  <div id=\"df-d0fb88e4-3322-44f7-9266-cb4b14e4e5d9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Total</th>\n","      <th>Political Rights</th>\n","      <th>Civil Rights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>Armenia</td>\n","      <td>42</td>\n","      <td>13</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Bhutan</td>\n","      <td>46</td>\n","      <td>22</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Burkina Faso</td>\n","      <td>53</td>\n","      <td>17</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Cote d'Ivoire</td>\n","      <td>34</td>\n","      <td>13</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Egypt</td>\n","      <td>41</td>\n","      <td>16</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Gabon</td>\n","      <td>34</td>\n","      <td>9</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Guinea</td>\n","      <td>39</td>\n","      <td>15</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Haiti</td>\n","      <td>43</td>\n","      <td>19</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Honduras</td>\n","      <td>51</td>\n","      <td>18</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>Jordan</td>\n","      <td>34</td>\n","      <td>10</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>Kosovo</td>\n","      <td>42</td>\n","      <td>16</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>Kuwait</td>\n","      <td>41</td>\n","      <td>17</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>Kyrgyzstan</td>\n","      <td>39</td>\n","      <td>14</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>Lebanon</td>\n","      <td>49</td>\n","      <td>17</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>Madagascar</td>\n","      <td>35</td>\n","      <td>7</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>Malaysia</td>\n","      <td>48</td>\n","      <td>20</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>Mauritania</td>\n","      <td>34</td>\n","      <td>11</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>Morocco</td>\n","      <td>43</td>\n","      <td>16</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>Nepal</td>\n","      <td>47</td>\n","      <td>20</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>Nicaragua</td>\n","      <td>51</td>\n","      <td>17</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>Nigeria</td>\n","      <td>46</td>\n","      <td>20</td>\n","      <td>26</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>Pakistan</td>\n","      <td>42</td>\n","      <td>20</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>Singapore</td>\n","      <td>52</td>\n","      <td>19</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>112</th>\n","      <td>Sri Lanka</td>\n","      <td>43</td>\n","      <td>16</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>Uganda</td>\n","      <td>40</td>\n","      <td>12</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>130</th>\n","      <td>Venezuela</td>\n","      <td>39</td>\n","      <td>15</td>\n","      <td>24</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0fb88e4-3322-44f7-9266-cb4b14e4e5d9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d0fb88e4-3322-44f7-9266-cb4b14e4e5d9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d0fb88e4-3322-44f7-9266-cb4b14e4e5d9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1ccefa06-a92a-4e65-ae22-349709ff2979\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ccefa06-a92a-4e65-ae22-349709ff2979')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1ccefa06-a92a-4e65-ae22-349709ff2979 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["In cluster 1 instead we find the countries whose total score is around 40 to indicate medium-low civil and political conditions. Most of these countries belong to Asia and North Africa."],"metadata":{"id":"o2V1hy550Z_F"}},{"cell_type":"code","source":["df_2013[df_2013['Cluster']==2][['Country name', 'Total', 'Political Rights', 'Civil Rights']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"tHASaYBc0ZeN","executionInfo":{"status":"ok","timestamp":1694073683094,"user_tz":-120,"elapsed":108,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"604a0bda-2e3d-4d19-e4d6-daf7b99b031e"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Country name  Total  Political Rights  Civil Rights\n","1                   Albania     63                24            39\n","9                Bangladesh     56                25            31\n","14                  Bolivia     69                29            40\n","15   Bosnia and Herzegovina     62                25            37\n","26                 Colombia     61                27            34\n","36                  Ecuador     60                24            36\n","44                  Georgia     60                24            36\n","48                Guatemala     57                24            33\n","55                Indonesia     65                30            35\n","65                    Kenya     55                21            34\n","74                   Malawi     60                26            34\n","79                   Mexico     65                28            37\n","80                  Moldova     65                29            36\n","89                    Niger     56                26            30\n","91          North Macedonia     64                26            38\n","94                 Paraguay     62                27            35\n","96              Philippines     63                26            37\n","105            Sierra Leone     70                30            40\n","117                Tanzania     66                28            38\n","118                Thailand     53                22            31\n","120                 Tunisia     59                26            33\n","121                  Turkey     61                28            33\n","124                 Ukraine     57                21            36\n","133                  Zambia     62                28            34"],"text/html":["\n","  <div id=\"df-7fe210f8-e4a6-41cc-b90a-c8891f409c3e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Total</th>\n","      <th>Political Rights</th>\n","      <th>Civil Rights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>63</td>\n","      <td>24</td>\n","      <td>39</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Bangladesh</td>\n","      <td>56</td>\n","      <td>25</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Bolivia</td>\n","      <td>69</td>\n","      <td>29</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Bosnia and Herzegovina</td>\n","      <td>62</td>\n","      <td>25</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Colombia</td>\n","      <td>61</td>\n","      <td>27</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Ecuador</td>\n","      <td>60</td>\n","      <td>24</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Georgia</td>\n","      <td>60</td>\n","      <td>24</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Guatemala</td>\n","      <td>57</td>\n","      <td>24</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Indonesia</td>\n","      <td>65</td>\n","      <td>30</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>Kenya</td>\n","      <td>55</td>\n","      <td>21</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>Malawi</td>\n","      <td>60</td>\n","      <td>26</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>Mexico</td>\n","      <td>65</td>\n","      <td>28</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>Moldova</td>\n","      <td>65</td>\n","      <td>29</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>Niger</td>\n","      <td>56</td>\n","      <td>26</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>North Macedonia</td>\n","      <td>64</td>\n","      <td>26</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>Paraguay</td>\n","      <td>62</td>\n","      <td>27</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>Philippines</td>\n","      <td>63</td>\n","      <td>26</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>Sierra Leone</td>\n","      <td>70</td>\n","      <td>30</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>117</th>\n","      <td>Tanzania</td>\n","      <td>66</td>\n","      <td>28</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>118</th>\n","      <td>Thailand</td>\n","      <td>53</td>\n","      <td>22</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>120</th>\n","      <td>Tunisia</td>\n","      <td>59</td>\n","      <td>26</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>121</th>\n","      <td>Turkey</td>\n","      <td>61</td>\n","      <td>28</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>Ukraine</td>\n","      <td>57</td>\n","      <td>21</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>133</th>\n","      <td>Zambia</td>\n","      <td>62</td>\n","      <td>28</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fe210f8-e4a6-41cc-b90a-c8891f409c3e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7fe210f8-e4a6-41cc-b90a-c8891f409c3e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7fe210f8-e4a6-41cc-b90a-c8891f409c3e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bcf6200a-fd4d-412c-a95c-db79e8ae8194\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bcf6200a-fd4d-412c-a95c-db79e8ae8194')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bcf6200a-fd4d-412c-a95c-db79e8ae8194 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["Moving towards higher clusters improves the overall score: in cluster 2 there are the countries that have average size. These are mostly South American or East Asian countries."],"metadata":{"id":"boYa6ewK04gy"}},{"cell_type":"code","source":["df_2013[df_2013['Cluster']==3][['Country name', 'Total', 'Political Rights', 'Civil Rights']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":801},"id":"MXWY7EOn04KG","executionInfo":{"status":"ok","timestamp":1694073683095,"user_tz":-120,"elapsed":107,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"2cd84889-b265-4e16-c5b8-2aaffb6b7c03"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Country name  Total  Political Rights  Civil Rights\n","3              Argentina     80                31            49\n","12                 Benin     82                32            50\n","16              Botswana     74                28            46\n","17                Brazil     81                33            48\n","18              Bulgaria     81                34            47\n","31               Croatia     86                36            50\n","35    Dominican Republic     75                31            44\n","38           El Salvador     77                35            42\n","46                 Ghana     84                37            47\n","47                Greece     83                35            48\n","54                 India     76                34            42\n","59                Israel     81                36            45\n","61               Jamaica     73                33            40\n","69                Latvia     84                33            51\n","81              Mongolia     86                36            50\n","82            Montenegro     72                27            45\n","93                Panama     82                36            46\n","95                  Peru     71                30            41\n","99               Romania     81                32            49\n","103              Senegal     75                32            43\n","104               Serbia     78                30            48\n","109         South Africa     81                34            47\n","110          South Korea     86                36            50\n","119  Trinidad and Tobago     81                33            48"],"text/html":["\n","  <div id=\"df-d584e3cb-9734-4cc6-9646-a62dd8458ae6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Total</th>\n","      <th>Political Rights</th>\n","      <th>Civil Rights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>Argentina</td>\n","      <td>80</td>\n","      <td>31</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Benin</td>\n","      <td>82</td>\n","      <td>32</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Botswana</td>\n","      <td>74</td>\n","      <td>28</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Brazil</td>\n","      <td>81</td>\n","      <td>33</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Bulgaria</td>\n","      <td>81</td>\n","      <td>34</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Croatia</td>\n","      <td>86</td>\n","      <td>36</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Dominican Republic</td>\n","      <td>75</td>\n","      <td>31</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>El Salvador</td>\n","      <td>77</td>\n","      <td>35</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Ghana</td>\n","      <td>84</td>\n","      <td>37</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Greece</td>\n","      <td>83</td>\n","      <td>35</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>India</td>\n","      <td>76</td>\n","      <td>34</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>Israel</td>\n","      <td>81</td>\n","      <td>36</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>Jamaica</td>\n","      <td>73</td>\n","      <td>33</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>Latvia</td>\n","      <td>84</td>\n","      <td>33</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>Mongolia</td>\n","      <td>86</td>\n","      <td>36</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>Montenegro</td>\n","      <td>72</td>\n","      <td>27</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>Panama</td>\n","      <td>82</td>\n","      <td>36</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>Peru</td>\n","      <td>71</td>\n","      <td>30</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>Romania</td>\n","      <td>81</td>\n","      <td>32</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>Senegal</td>\n","      <td>75</td>\n","      <td>32</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>Serbia</td>\n","      <td>78</td>\n","      <td>30</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>109</th>\n","      <td>South Africa</td>\n","      <td>81</td>\n","      <td>34</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>South Korea</td>\n","      <td>86</td>\n","      <td>36</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>119</th>\n","      <td>Trinidad and Tobago</td>\n","      <td>81</td>\n","      <td>33</td>\n","      <td>48</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d584e3cb-9734-4cc6-9646-a62dd8458ae6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d584e3cb-9734-4cc6-9646-a62dd8458ae6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d584e3cb-9734-4cc6-9646-a62dd8458ae6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-87362b76-20ba-4405-a9f9-a9668f4acaf8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87362b76-20ba-4405-a9f9-a9668f4acaf8')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-87362b76-20ba-4405-a9f9-a9668f4acaf8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df_2013[df_2013['Cluster']==4][['Country name', 'Total', 'Political Rights', 'Civil Rights']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"JTybD9QN1EqV","executionInfo":{"status":"ok","timestamp":1694073683097,"user_tz":-120,"elapsed":105,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"9c006ebf-1341-4164-81c9-c43c86e7c8ac"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Country name  Total  Political Rights  Civil Rights\n","5         Australia     97                39            58\n","6           Austria     96                38            58\n","11          Belgium     97                40            57\n","22           Canada     98                40            58\n","24            Chile     96                39            57\n","29       Costa Rica     91                38            53\n","32           Cyprus     93                38            55\n","33   Czech Republic     95                38            57\n","34          Denmark     98                40            58\n","39          Estonia     95                39            56\n","41          Finland    100                40            60\n","42           France     95                38            57\n","45          Germany     96                39            57\n","52          Hungary     88                36            52\n","53          Iceland    100                40            60\n","58          Ireland     97                39            58\n","60            Italy     88                35            53\n","62            Japan     88                37            51\n","71        Lithuania     90                37            53\n","72       Luxembourg    100                40            60\n","77            Malta     97                39            58\n","86      Netherlands     99                40            59\n","87      New Zealand     97                39            58\n","97           Poland     93                38            55\n","98         Portugal     97                39            58\n","107        Slovakia     92                37            55\n","108        Slovenia     91                38            53\n","111           Spain     96                39            57\n","113          Sweden    100                40            60\n","115          Taiwan     88                36            52\n","126  United Kingdom     97                40            57\n","127   United States     93                37            56\n","128         Uruguay     97                39            58"],"text/html":["\n","  <div id=\"df-f4acc02b-dae1-4744-932a-60d762a92479\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Total</th>\n","      <th>Political Rights</th>\n","      <th>Civil Rights</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>Australia</td>\n","      <td>97</td>\n","      <td>39</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Austria</td>\n","      <td>96</td>\n","      <td>38</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Belgium</td>\n","      <td>97</td>\n","      <td>40</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Canada</td>\n","      <td>98</td>\n","      <td>40</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Chile</td>\n","      <td>96</td>\n","      <td>39</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Costa Rica</td>\n","      <td>91</td>\n","      <td>38</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Cyprus</td>\n","      <td>93</td>\n","      <td>38</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Czech Republic</td>\n","      <td>95</td>\n","      <td>38</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Denmark</td>\n","      <td>98</td>\n","      <td>40</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Estonia</td>\n","      <td>95</td>\n","      <td>39</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Finland</td>\n","      <td>100</td>\n","      <td>40</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>France</td>\n","      <td>95</td>\n","      <td>38</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Germany</td>\n","      <td>96</td>\n","      <td>39</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Hungary</td>\n","      <td>88</td>\n","      <td>36</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Iceland</td>\n","      <td>100</td>\n","      <td>40</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>Ireland</td>\n","      <td>97</td>\n","      <td>39</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>Italy</td>\n","      <td>88</td>\n","      <td>35</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>Japan</td>\n","      <td>88</td>\n","      <td>37</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Lithuania</td>\n","      <td>90</td>\n","      <td>37</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>Luxembourg</td>\n","      <td>100</td>\n","      <td>40</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>Malta</td>\n","      <td>97</td>\n","      <td>39</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>Netherlands</td>\n","      <td>99</td>\n","      <td>40</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>New Zealand</td>\n","      <td>97</td>\n","      <td>39</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>Poland</td>\n","      <td>93</td>\n","      <td>38</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>Portugal</td>\n","      <td>97</td>\n","      <td>39</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>Slovakia</td>\n","      <td>92</td>\n","      <td>37</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>108</th>\n","      <td>Slovenia</td>\n","      <td>91</td>\n","      <td>38</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>Spain</td>\n","      <td>96</td>\n","      <td>39</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>113</th>\n","      <td>Sweden</td>\n","      <td>100</td>\n","      <td>40</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>115</th>\n","      <td>Taiwan</td>\n","      <td>88</td>\n","      <td>36</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>United Kingdom</td>\n","      <td>97</td>\n","      <td>40</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>United States</td>\n","      <td>93</td>\n","      <td>37</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>128</th>\n","      <td>Uruguay</td>\n","      <td>97</td>\n","      <td>39</td>\n","      <td>58</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4acc02b-dae1-4744-932a-60d762a92479')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f4acc02b-dae1-4744-932a-60d762a92479 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f4acc02b-dae1-4744-932a-60d762a92479');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-77743cab-25ef-48fd-aa0c-d5b12f33f9b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77743cab-25ef-48fd-aa0c-d5b12f33f9b0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-77743cab-25ef-48fd-aa0c-d5b12f33f9b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["the last cluster includes the block of western countries, i.e. those historically recognized for true political and civil conditions among the best in the world (in 2013 the best conditions were registered in Finland). Exceptions can be seen in Taiwan and Uruguay, clearly better than their neighboring countries."],"metadata":{"id":"-FXobsTB1l_9"}},{"cell_type":"markdown","source":["## 2022"],"metadata":{"id":"c0Aq_djMyLEe"}},{"cell_type":"markdown","source":["Repeating the same coding structure on the 2022 data"],"metadata":{"id":"9q2oIjY7ggs6"}},{"cell_type":"code","source":["data_2022=data[data['Edition']==2022]\n","data_2022.reset_index(inplace=True)"],"metadata":{"id":"VVUXVEKfyNUi","executionInfo":{"status":"ok","timestamp":1694073683098,"user_tz":-120,"elapsed":103,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["df_2022=data_2022[['Country name', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'PR', 'CL', 'Total']]\n","\n","df_2022.dropna(axis=0, how= 'any', inplace=True)\n","df_2022"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"executionInfo":{"status":"ok","timestamp":1694073683100,"user_tz":-120,"elapsed":104,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"954a6b2a-cdef-4daa-975b-551a193dc602","id":"cd9BdxlcyNUk"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-24-4fd7582fe1ca>:3: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["    Country name   A   B   C   D   E   F   G  PR  CL  Total\n","0    Afghanistan   0   0   1   4   3   0   2   1   9     10\n","1        Albania   9  12   7  13   8   9   9  28  39     67\n","2      Argentina  11  16   8  15  11  10  13  35  49     84\n","3        Armenia   7  10   6   9   8   6   9  23  32     55\n","4      Australia  12  15  12  15  12  15  14  39  56     95\n","..           ...  ..  ..  ..  ..  ..  ..  ..  ..  ..    ...\n","108      Uruguay  12  16  12  16  12  14  15  40  57     97\n","109   Uzbekistan   1   0   1   3   1   1   4   2   9     11\n","110    Venezuela   0   1   0   6   2   1   4   1  13     14\n","111      Vietnam   0   1   2   3   1   4   8   3  16     19\n","112     Zimbabwe   3   5   3   7   3   2   5  11  17     28\n","\n","[113 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-35fb438e-8e8c-4641-997c-746cd647b799\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>A</th>\n","      <th>B</th>\n","      <th>C</th>\n","      <th>D</th>\n","      <th>E</th>\n","      <th>F</th>\n","      <th>G</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>7</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>28</td>\n","      <td>39</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Argentina</td>\n","      <td>11</td>\n","      <td>16</td>\n","      <td>8</td>\n","      <td>15</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>35</td>\n","      <td>49</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Armenia</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>23</td>\n","      <td>32</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Australia</td>\n","      <td>12</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>39</td>\n","      <td>56</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>108</th>\n","      <td>Uruguay</td>\n","      <td>12</td>\n","      <td>16</td>\n","      <td>12</td>\n","      <td>16</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>15</td>\n","      <td>40</td>\n","      <td>57</td>\n","      <td>97</td>\n","    </tr>\n","    <tr>\n","      <th>109</th>\n","      <td>Uzbekistan</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>Venezuela</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>Vietnam</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>16</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>112</th>\n","      <td>Zimbabwe</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>17</td>\n","      <td>28</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>113 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35fb438e-8e8c-4641-997c-746cd647b799')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-35fb438e-8e8c-4641-997c-746cd647b799 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-35fb438e-8e8c-4641-997c-746cd647b799');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f6ee7d98-cf89-43cd-a0cb-3aa5a74418bd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f6ee7d98-cf89-43cd-a0cb-3aa5a74418bd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f6ee7d98-cf89-43cd-a0cb-3aa5a74418bd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["num_col = ['A', 'B', 'C', 'D', 'E', 'F', 'G']\n","scaler = MinMaxScaler()\n","\n","for i in num_col:\n","  df_2022[[i]] = scaler.fit_transform(df_2022[[i]])\n","\n","df_2022.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1694073683101,"user_tz":-120,"elapsed":95,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"b0a45126-cce3-4eed-c64d-3555c379b6cb","id":"jJWzF2h1yNUn"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-25-05784e903ab0>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["       count       mean        std  min        25%        50%        75%  \\\n","A      113.0   0.674041   0.362653  0.0   0.333333   0.833333   1.000000   \n","B      113.0   0.659292   0.317152  0.0   0.437500   0.750000   0.937500   \n","C      113.0   0.557522   0.307818  0.0   0.333333   0.583333   0.833333   \n","D      113.0   0.660556   0.284841  0.0   0.500000   0.714286   0.857143   \n","E      113.0   0.657817   0.303412  0.0   0.416667   0.666667   0.916667   \n","F      113.0   0.531527   0.287641  0.0   0.312500   0.500000   0.812500   \n","G      113.0   0.584703   0.280005  0.0   0.357143   0.571429   0.857143   \n","PR     113.0  25.318584  12.850977  1.0  14.000000  28.000000  37.000000   \n","CL     113.0  37.831858  15.559163  6.0  26.000000  39.000000  52.000000   \n","Total  113.0  63.150442  28.088896  7.0  42.000000  66.000000  89.000000   \n","\n","         max  \n","A        1.0  \n","B        1.0  \n","C        1.0  \n","D        1.0  \n","E        1.0  \n","F        1.0  \n","G        1.0  \n","PR      40.0  \n","CL      60.0  \n","Total  100.0  "],"text/html":["\n","  <div id=\"df-51035c24-982e-4783-82cf-35299bb00c72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>A</th>\n","      <td>113.0</td>\n","      <td>0.674041</td>\n","      <td>0.362653</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.833333</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>113.0</td>\n","      <td>0.659292</td>\n","      <td>0.317152</td>\n","      <td>0.0</td>\n","      <td>0.437500</td>\n","      <td>0.750000</td>\n","      <td>0.937500</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>113.0</td>\n","      <td>0.557522</td>\n","      <td>0.307818</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.583333</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td>113.0</td>\n","      <td>0.660556</td>\n","      <td>0.284841</td>\n","      <td>0.0</td>\n","      <td>0.500000</td>\n","      <td>0.714286</td>\n","      <td>0.857143</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>E</th>\n","      <td>113.0</td>\n","      <td>0.657817</td>\n","      <td>0.303412</td>\n","      <td>0.0</td>\n","      <td>0.416667</td>\n","      <td>0.666667</td>\n","      <td>0.916667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>113.0</td>\n","      <td>0.531527</td>\n","      <td>0.287641</td>\n","      <td>0.0</td>\n","      <td>0.312500</td>\n","      <td>0.500000</td>\n","      <td>0.812500</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>113.0</td>\n","      <td>0.584703</td>\n","      <td>0.280005</td>\n","      <td>0.0</td>\n","      <td>0.357143</td>\n","      <td>0.571429</td>\n","      <td>0.857143</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>PR</th>\n","      <td>113.0</td>\n","      <td>25.318584</td>\n","      <td>12.850977</td>\n","      <td>1.0</td>\n","      <td>14.000000</td>\n","      <td>28.000000</td>\n","      <td>37.000000</td>\n","      <td>40.0</td>\n","    </tr>\n","    <tr>\n","      <th>CL</th>\n","      <td>113.0</td>\n","      <td>37.831858</td>\n","      <td>15.559163</td>\n","      <td>6.0</td>\n","      <td>26.000000</td>\n","      <td>39.000000</td>\n","      <td>52.000000</td>\n","      <td>60.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total</th>\n","      <td>113.0</td>\n","      <td>63.150442</td>\n","      <td>28.088896</td>\n","      <td>7.0</td>\n","      <td>42.000000</td>\n","      <td>66.000000</td>\n","      <td>89.000000</td>\n","      <td>100.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51035c24-982e-4783-82cf-35299bb00c72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-51035c24-982e-4783-82cf-35299bb00c72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-51035c24-982e-4783-82cf-35299bb00c72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-379b11e9-c201-4a88-a77f-381417476cc4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-379b11e9-c201-4a88-a77f-381417476cc4')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-379b11e9-c201-4a88-a77f-381417476cc4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["num_col = ['PR', 'CL']\n","scaler = MinMaxScaler()\n","\n","for i in num_col:\n","  df_2022[[i]] = scaler.fit_transform(df_2022[[i]])\n","\n","df_2022.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":655},"executionInfo":{"status":"ok","timestamp":1694073683102,"user_tz":-120,"elapsed":87,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"df4cb943-6fe6-40cd-8307-35d01a36e304","id":"amPV2q1gyNUo"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-0cba0a6e86ee>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-26-0cba0a6e86ee>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["       count       mean        std  min        25%        50%        75%  \\\n","A      113.0   0.674041   0.362653  0.0   0.333333   0.833333   1.000000   \n","B      113.0   0.659292   0.317152  0.0   0.437500   0.750000   0.937500   \n","C      113.0   0.557522   0.307818  0.0   0.333333   0.583333   0.833333   \n","D      113.0   0.660556   0.284841  0.0   0.500000   0.714286   0.857143   \n","E      113.0   0.657817   0.303412  0.0   0.416667   0.666667   0.916667   \n","F      113.0   0.531527   0.287641  0.0   0.312500   0.500000   0.812500   \n","G      113.0   0.584703   0.280005  0.0   0.357143   0.571429   0.857143   \n","PR     113.0   0.623553   0.329512  0.0   0.333333   0.692308   0.923077   \n","CL     113.0   0.589479   0.288133  0.0   0.370370   0.611111   0.851852   \n","Total  113.0  63.150442  28.088896  7.0  42.000000  66.000000  89.000000   \n","\n","         max  \n","A        1.0  \n","B        1.0  \n","C        1.0  \n","D        1.0  \n","E        1.0  \n","F        1.0  \n","G        1.0  \n","PR       1.0  \n","CL       1.0  \n","Total  100.0  "],"text/html":["\n","  <div id=\"df-9700f6a7-fc8d-4e63-9305-24c245e4d448\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>A</th>\n","      <td>113.0</td>\n","      <td>0.674041</td>\n","      <td>0.362653</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.833333</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>B</th>\n","      <td>113.0</td>\n","      <td>0.659292</td>\n","      <td>0.317152</td>\n","      <td>0.0</td>\n","      <td>0.437500</td>\n","      <td>0.750000</td>\n","      <td>0.937500</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>C</th>\n","      <td>113.0</td>\n","      <td>0.557522</td>\n","      <td>0.307818</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.583333</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>D</th>\n","      <td>113.0</td>\n","      <td>0.660556</td>\n","      <td>0.284841</td>\n","      <td>0.0</td>\n","      <td>0.500000</td>\n","      <td>0.714286</td>\n","      <td>0.857143</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>E</th>\n","      <td>113.0</td>\n","      <td>0.657817</td>\n","      <td>0.303412</td>\n","      <td>0.0</td>\n","      <td>0.416667</td>\n","      <td>0.666667</td>\n","      <td>0.916667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>113.0</td>\n","      <td>0.531527</td>\n","      <td>0.287641</td>\n","      <td>0.0</td>\n","      <td>0.312500</td>\n","      <td>0.500000</td>\n","      <td>0.812500</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>G</th>\n","      <td>113.0</td>\n","      <td>0.584703</td>\n","      <td>0.280005</td>\n","      <td>0.0</td>\n","      <td>0.357143</td>\n","      <td>0.571429</td>\n","      <td>0.857143</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>PR</th>\n","      <td>113.0</td>\n","      <td>0.623553</td>\n","      <td>0.329512</td>\n","      <td>0.0</td>\n","      <td>0.333333</td>\n","      <td>0.692308</td>\n","      <td>0.923077</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>CL</th>\n","      <td>113.0</td>\n","      <td>0.589479</td>\n","      <td>0.288133</td>\n","      <td>0.0</td>\n","      <td>0.370370</td>\n","      <td>0.611111</td>\n","      <td>0.851852</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Total</th>\n","      <td>113.0</td>\n","      <td>63.150442</td>\n","      <td>28.088896</td>\n","      <td>7.0</td>\n","      <td>42.000000</td>\n","      <td>66.000000</td>\n","      <td>89.000000</td>\n","      <td>100.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9700f6a7-fc8d-4e63-9305-24c245e4d448')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9700f6a7-fc8d-4e63-9305-24c245e4d448 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9700f6a7-fc8d-4e63-9305-24c245e4d448');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6870b6d8-1123-4c5d-adc3-9ae518841682\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6870b6d8-1123-4c5d-adc3-9ae518841682')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6870b6d8-1123-4c5d-adc3-9ae518841682 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["Checking that the proper number of cluster using PR and CL is still 5"],"metadata":{"id":"ye4Ud1K4hR4X"}},{"cell_type":"code","source":["X_scaled = df_2022[['PR', 'CL']]\n","\n","wcss = []\n","silhouette_scores = []\n","for i in range(2, 9):\n","    km = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=123)\n","    km.fit(X_scaled)\n","    wcss.append(km.inertia_)\n","    silhouette_scores.append(silhouette_score(X_scaled, km.labels_))\n","\n","# Plot\n","fig, ax = plt.subplots(figsize=(6, 4), dpi=150)\n","\n","background_color = \"#fafafa\"\n","fig.patch.set_facecolor(background_color)\n","ax.set_facecolor(background_color)\n","for s in ['top', 'right']:\n","    ax.spines[s].set_visible(False)\n","\n","fig.text(0.13, 0.93, '''The optimal number of clusters is where\n","the W.C.S.S is minimised and Silhouette Score is maximised''', fontsize=8, color='gray', ha='left')\n","\n","fig.text(0.13, 1.02, 'The Elbow Method and Silhouette Score', fontfamily='sans-serif', fontweight='bold', fontsize=12, color='#323232')\n","\n","plt.tick_params(axis='both', which='major', labelsize=8)\n","plt.tick_params(axis=u'both', which=u'both', length=0)\n","\n","'''\n","plt.annotate('We will select\\n3 Clusters', xy=(3, wcss[2]), xytext=(3.7, wcss[2] + 100),\n","             arrowprops=dict(facecolor='steelblue', arrowstyle=\"->\", connectionstyle=\"arc3,rad=.3\"),\n","             fontsize=8, fontfamily='monospace', ha='center', color='#FF0000')\n","'''\n","\n","# Plot of W.C.S.S. (elbow method)\n","ax.plot(range(2, 9), wcss, color='gold', label='W.C.S.S')\n","ax.set_xlabel('No. of Clusters', fontsize=8)\n","ax.set_ylabel('W.C.S.S.', fontsize=8)\n","\n","# Plot of silhouette coefficient\n","ax2 = ax.twinx()\n","ax2.plot(range(2, 9), silhouette_scores, color='steelblue', linestyle='dashed', marker='o', label='Silhouette Score')\n","ax2.set_ylabel('Silhouette Score', fontsize=8)\n","\n","# Labels\n","ax.set_xticks(range(2, 9))\n","ax.set_xticklabels(range(2, 9), fontsize=8)\n","\n","# Legend\n","lines, labels = ax.get_legend_handles_labels()\n","lines2, labels2 = ax2.get_legend_handles_labels()\n","ax2.legend(lines + lines2, labels + labels2, loc='upper right', fontsize=8)\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"c0oO-BzqhXrm","executionInfo":{"status":"ok","timestamp":1694073684011,"user_tz":-120,"elapsed":989,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"88ee90c7-1006-4db1-9e9c-4e0dbd14757a"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["In 2022 data the right number of clusters should be 4 (still according to the trade off between WCSS and silhouette score) but for comparisong purposes with 2013 we use 5 number of clusters."],"metadata":{"id":"QBS-D2oFh471"}},{"cell_type":"markdown","source":["- Clustering"],"metadata":{"id":"gm4x4PoCyNUr"}},{"cell_type":"code","source":["seed = 123\n","\n","selected_columns = ['PR', 'CL']\n","\n","k = 5\n","kmeans = KMeans(n_clusters=k,\n","                random_state=seed,\n","                init='k-means++',\n","                max_iter=300,\n","                n_init=10)\n","\n","kmeans.fit(df_2022[selected_columns])\n","labels = kmeans.labels_\n","\n","centroids = kmeans.cluster_centers_\n","\n","\n","df_2022['Cluster'] = labels\n","labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dmllwCiqiWn8","executionInfo":{"status":"ok","timestamp":1694073684013,"user_tz":-120,"elapsed":32,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"3d8a7270-a244-4cd5-c5b8-2d2462d84152"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-28-10786bf18012>:18: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["array([0, 2, 4, 2, 1, 1, 3, 1, 2, 2, 4, 4, 4, 0, 0, 1, 0, 1, 2, 3, 0, 0,\n","       1, 3, 4, 1, 1, 1, 2, 4, 0, 2, 1, 0, 1, 1, 0, 2, 1, 4, 1, 2, 3, 3,\n","       2, 1, 2, 2, 0, 1, 4, 1, 4, 1, 3, 0, 3, 2, 0, 1, 3, 2, 1, 1, 2, 2,\n","       3, 1, 3, 4, 2, 2, 4, 3, 3, 4, 2, 1, 1, 0, 2, 2, 1, 4, 2, 4, 4, 1,\n","       4, 0, 0, 2, 2, 1, 4, 1, 1, 1, 1, 3, 0, 3, 3, 2, 2, 0, 1, 4, 1, 0,\n","       0, 0, 3], dtype=int32)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["cluster_array = np.array([0, 2, 4, 2, 1, 1, 3, 1, 2, 2, 4, 4, 4, 0, 0, 1, 0, 1, 2, 3, 0, 0,\n","                          1, 3, 4, 1, 1, 1, 2, 4, 0, 2, 1, 0, 1, 1, 0, 2, 1, 4, 1, 2, 3, 3,\n","                          2, 1, 2, 2, 0, 1, 4, 1, 4, 1, 3, 0, 3, 2, 0, 1, 3, 2, 1, 1, 2, 2,\n","                          3, 1, 3, 4, 2, 2, 4, 3, 3, 4, 2, 1, 1, 0, 2, 2, 1, 4, 2, 4, 4, 1,\n","                          4, 0, 0, 2, 2, 1, 4, 1, 1, 1, 1, 3, 0, 3, 3, 2, 2, 0, 1, 4, 1, 0,\n","                          0, 0, 3])\n","\n","remapped_clusters = np.where(cluster_array == 0, 0,\n","                             np.where(cluster_array == 3, 1,\n","                                      np.where(cluster_array == 2, 2,\n","                                               np.where(cluster_array == 4, 3, 4))))\n","\n","\n","df_2022['Cluster'] = remapped_clusters\n","\n","df_2022['Political Rights']= data_2022['PR']\n","df_2022['Civil Rights']= data_2022['CL']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694073684014,"user_tz":-120,"elapsed":24,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"92853aab-9c53-4ce5-a5c6-49df092dce94","id":"WX1solREi3MV"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-29-3a734a412455>:14: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-29-3a734a412455>:16: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-29-3a734a412455>:17: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]}]},{"cell_type":"code","source":["fig = px.scatter(df_2022,\n","                 x='PR',\n","                 y='CL',\n","                 color='Cluster',\n","                 hover_data=['Country name', 'Political Rights', 'Civil Rights', 'Total'])\n","\n","fig.add_trace(go.Scatter(x=centroids[:, 0],\n","                         y=centroids[:, 1],\n","                         mode='markers',\n","                         marker=dict(color='black', size=10, symbol='x'),\n","                         name='Centroids'))\n","\n","fig.update_layout(title_text=\"Scatterplot of Clustering_2022\")\n","\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1694073684589,"user_tz":-120,"elapsed":590,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"90de6e86-cbf5-4e6f-d2ac-24f4f241fee2","id":"7UOBV5TUi3Mb"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"7904d5c6-0593-460f-adb8-a6a7df7ad7d0\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"7904d5c6-0593-460f-adb8-a6a7df7ad7d0\")) {                    Plotly.newPlot(                        \"7904d5c6-0593-460f-adb8-a6a7df7ad7d0\",                        [{\"customdata\":[[\"Afghanistan\",1,9,10],[\"Albania\",28,39,67],[\"Argentina\",35,49,84],[\"Armenia\",23,32,55],[\"Australia\",39,56,95],[\"Austria\",37,56,93],[\"Bangladesh\",15,24,39],[\"Belgium\",39,57,96],[\"Benin\",17,42,59],[\"Bolivia\",27,39,66],[\"Botswana\",28,44,72],[\"Brazil\",31,42,73],[\"Bulgaria\",33,46,79],[\"Cambodia\",5,19,24],[\"Cameroon\",6,9,15],[\"Canada\",40,58,98],[\"Chad\",1,14,15],[\"Chile\",38,56,94],[\"Colombia\",29,35,64],[\"Comoros\",16,26,42],[\"Congo (Brazzaville)\",2,15,17],[\"Congo (Kinshasa)\",4,15,19],[\"Costa Rica\",38,53,91],[\"Cote d'Ivoire\",19,30,49],[\"Croatia\",36,49,85],[\"Cyprus\",38,55,93],[\"Czech Republic\",36,55,91],[\"Denmark\",40,57,97],[\"Dominican Republic\",27,41,68],[\"Ecuador\",31,40,71],[\"Egypt\",6,12,18],[\"El Salvador\",26,33,59],[\"Estonia\",38,56,94],[\"Ethiopia\",12,11,23],[\"Finland\",40,60,100],[\"France\",38,51,89],[\"Gabon\",3,18,21],[\"Georgia\",22,36,58],[\"Germany\",39,55,94],[\"Ghana\",35,45,80],[\"Greece\",37,50,87],[\"Guatemala\",21,30,51],[\"Guinea\",10,24,34],[\"Honduras\",21,26,47],[\"Hungary\",26,43,69],[\"Iceland\",37,57,94],[\"India\",33,33,66],[\"Indonesia\",30,29,59],[\"Iran\",4,10,14],[\"Ireland\",39,58,97],[\"Israel\",34,42,76],[\"Italy\",36,54,90],[\"Jamaica\",34,46,80],[\"Japan\",40,56,96],[\"Jordan\",11,22,33],[\"Kazakhstan\",5,18,23],[\"Kenya\",19,29,48],[\"Kosovo\",25,31,56],[\"Kyrgyzstan\",4,23,27],[\"Latvia\",37,51,88],[\"Lebanon\",13,29,42],[\"Liberia\",27,33,60],[\"Lithuania\",38,51,89],[\"Luxembourg\",38,59,97],[\"Madagascar\",27,34,61],[\"Malawi\",29,37,66],[\"Mali\",8,24,32],[\"Malta\",35,54,89],[\"Mauritania\",14,21,35],[\"Mauritius\",36,50,86],[\"Mexico\",27,33,60],[\"Moldova\",27,35,62],[\"Mongolia\",36,48,84],[\"Morocco\",13,24,37],[\"Mozambique\",14,29,43],[\"Namibia\",31,46,77],[\"Nepal\",25,32,57],[\"Netherlands\",39,58,97],[\"New Zealand\",40,59,99],[\"Nicaragua\",5,18,23],[\"Niger\",23,28,51],[\"North Macedonia\",28,39,67],[\"Norway\",40,60,100],[\"Panama\",35,48,83],[\"Paraguay\",28,37,65],[\"Peru\",30,42,72],[\"Poland\",34,47,81],[\"Portugal\",39,56,95],[\"Romania\",35,48,83],[\"Russia\",5,14,19],[\"Saudi Arabia\",1,6,7],[\"Senegal\",29,39,68],[\"Sierra Leone\",28,37,65],[\"Slovenia\",38,52,90],[\"South Korea\",33,50,83],[\"Spain\",37,53,90],[\"Sweden\",40,60,100],[\"Switzerland\",39,57,96],[\"Taiwan\",38,56,94],[\"Tanzania\",12,22,34],[\"Thailand\",5,24,29],[\"The Gambia\",21,26,47],[\"Togo\",15,27,42],[\"Tunisia\",26,38,64],[\"Ukraine\",26,35,61],[\"United Arab Emirates\",5,12,17],[\"United Kingdom\",39,54,93],[\"United States\",32,51,83],[\"Uruguay\",40,57,97],[\"Uzbekistan\",2,9,11],[\"Venezuela\",1,13,14],[\"Vietnam\",3,16,19],[\"Zimbabwe\",11,17,28]],\"hovertemplate\":\"PR=%{x}\\u003cbr\\u003eCL=%{y}\\u003cbr\\u003eCountry name=%{customdata[0]}\\u003cbr\\u003ePolitical Rights=%{customdata[1]}\\u003cbr\\u003eCivil Rights=%{customdata[2]}\\u003cbr\\u003eTotal=%{customdata[3]}\\u003cbr\\u003eCluster=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[0,2,3,2,4,4,1,4,2,2,3,3,3,0,0,4,0,4,2,1,0,0,4,1,3,4,4,4,2,3,0,2,4,0,4,4,0,2,4,3,4,2,1,1,2,4,2,2,0,4,3,4,3,4,1,0,1,2,0,4,1,2,4,4,2,2,1,4,1,3,2,2,3,1,1,3,2,4,4,0,2,2,4,3,2,3,3,4,3,0,0,2,2,4,3,4,4,4,4,1,0,1,1,2,2,0,4,3,4,0,0,0,1],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[0.0,0.6923076923076923,0.8717948717948717,0.5641025641025641,0.9743589743589743,0.923076923076923,0.3589743589743589,0.9743589743589743,0.41025641025641024,0.6666666666666666,0.6923076923076923,0.7692307692307692,0.8205128205128205,0.10256410256410256,0.12820512820512822,0.9999999999999999,0.0,0.9487179487179487,0.717948717948718,0.3846153846153846,0.02564102564102564,0.07692307692307693,0.9487179487179487,0.4615384615384615,0.8974358974358974,0.9487179487179487,0.8974358974358974,0.9999999999999999,0.6666666666666666,0.7692307692307692,0.12820512820512822,0.641025641025641,0.9487179487179487,0.28205128205128205,0.9999999999999999,0.9487179487179487,0.05128205128205129,0.5384615384615384,0.9743589743589743,0.8717948717948717,0.923076923076923,0.5128205128205128,0.23076923076923075,0.5128205128205128,0.641025641025641,0.923076923076923,0.8205128205128205,0.7435897435897435,0.07692307692307693,0.9743589743589743,0.8461538461538461,0.8974358974358974,0.8461538461538461,0.9999999999999999,0.2564102564102564,0.10256410256410256,0.4615384615384615,0.6153846153846153,0.07692307692307693,0.923076923076923,0.30769230769230765,0.6666666666666666,0.9487179487179487,0.9487179487179487,0.6666666666666666,0.717948717948718,0.1794871794871795,0.8717948717948717,0.3333333333333333,0.8974358974358974,0.6666666666666666,0.6666666666666666,0.8974358974358974,0.30769230769230765,0.3333333333333333,0.7692307692307692,0.6153846153846153,0.9743589743589743,0.9999999999999999,0.10256410256410256,0.5641025641025641,0.6923076923076923,0.9999999999999999,0.8717948717948717,0.6923076923076923,0.7435897435897435,0.8461538461538461,0.9743589743589743,0.8717948717948717,0.10256410256410256,0.0,0.717948717948718,0.6923076923076923,0.9487179487179487,0.8205128205128205,0.923076923076923,0.9999999999999999,0.9743589743589743,0.9487179487179487,0.28205128205128205,0.10256410256410256,0.5128205128205128,0.3589743589743589,0.641025641025641,0.641025641025641,0.10256410256410256,0.9743589743589743,0.7948717948717948,0.9999999999999999,0.02564102564102564,0.0,0.05128205128205129,0.2564102564102564],\"xaxis\":\"x\",\"y\":[0.05555555555555555,0.6111111111111112,0.7962962962962963,0.48148148148148145,0.9259259259259258,0.9259259259259258,0.3333333333333333,0.9444444444444444,0.6666666666666665,0.6111111111111112,0.7037037037037037,0.6666666666666665,0.7407407407407407,0.24074074074074076,0.05555555555555555,0.9629629629629628,0.14814814814814814,0.9259259259259258,0.537037037037037,0.37037037037037035,0.16666666666666669,0.16666666666666669,0.8703703703703702,0.4444444444444445,0.7962962962962963,0.9074074074074072,0.9074074074074072,0.9444444444444444,0.6481481481481481,0.6296296296296295,0.1111111111111111,0.49999999999999994,0.9259259259259258,0.09259259259259259,1.0,0.8333333333333333,0.2222222222222222,0.5555555555555556,0.9074074074074072,0.7222222222222221,0.8148148148148147,0.4444444444444445,0.3333333333333333,0.37037037037037035,0.6851851851851851,0.9444444444444444,0.49999999999999994,0.4259259259259259,0.07407407407407407,0.9629629629629628,0.6666666666666665,0.8888888888888888,0.7407407407407407,0.9259259259259258,0.2962962962962963,0.2222222222222222,0.4259259259259259,0.46296296296296297,0.3148148148148148,0.8333333333333333,0.4259259259259259,0.49999999999999994,0.8333333333333333,0.9814814814814814,0.5185185185185184,0.574074074074074,0.3333333333333333,0.8888888888888888,0.27777777777777773,0.8148148148148147,0.49999999999999994,0.537037037037037,0.7777777777777777,0.3333333333333333,0.4259259259259259,0.7407407407407407,0.48148148148148145,0.9629629629629628,0.9814814814814814,0.2222222222222222,0.4074074074074074,0.6111111111111112,1.0,0.7777777777777777,0.574074074074074,0.6666666666666665,0.7592592592592593,0.9259259259259258,0.7777777777777777,0.14814814814814814,0.0,0.6111111111111112,0.574074074074074,0.8518518518518519,0.8148148148148147,0.8703703703703702,1.0,0.9444444444444444,0.9259259259259258,0.2962962962962963,0.3333333333333333,0.37037037037037035,0.3888888888888889,0.5925925925925926,0.537037037037037,0.1111111111111111,0.8888888888888888,0.8333333333333333,0.9444444444444444,0.05555555555555555,0.12962962962962962,0.18518518518518517,0.20370370370370366],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\",\"size\":10,\"symbol\":\"x\"},\"mode\":\"markers\",\"name\":\"Centroids\",\"x\":[0.07692307692307687,0.9580419580419581,0.6489151873767258,0.34615384615384615,0.8276353276353275],\"y\":[0.15277777777777773,0.919753086419753,0.5441595441595442,0.35185185185185186,0.7458847736625513],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"PR\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"CL\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Cluster\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"title\":{\"text\":\"Scatterplot of Clustering_2022\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('7904d5c6-0593-460f-adb8-a6a7df7ad7d0');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["fig = go.Figure(\n","    go.Choropleth(\n","        locations=df_2022[\"Country name\"],\n","        z=df_2022['Cluster'],\n","        locationmode='country names',\n","        colorscale= 'fall',\n","        autocolorscale=False,\n","        colorbar=dict(\n","            tickvals=[0, 1, 2, 3, 4],\n","            ticktext=[\"0\", \"1\", \"2\", \"3\", \"4\"]\n","        ),\n","        marker_line_color=\"white\",\n","        marker_line_width=0.5,\n","        )\n","    )\n","\n","fig.update_layout(\n","    title_text=\"Coropleth of Clustering_2022\",\n","    geo=dict(showcoastlines=True),\n",")\n","\n","\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1694073684591,"user_tz":-120,"elapsed":60,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"4b38c1b9-3c3f-460b-a8af-9a9f3d8ff97e","id":"2a3yHju5i3Md"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"5211884c-db0a-4677-8db1-50d87593f63d\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5211884c-db0a-4677-8db1-50d87593f63d\")) {                    Plotly.newPlot(                        \"5211884c-db0a-4677-8db1-50d87593f63d\",                        [{\"autocolorscale\":false,\"colorbar\":{\"ticktext\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[0,1,2,3,4]},\"colorscale\":[[0.0,\"rgb(61, 89, 65)\"],[0.16666666666666666,\"rgb(119, 136, 104)\"],[0.3333333333333333,\"rgb(181, 185, 145)\"],[0.5,\"rgb(246, 237, 189)\"],[0.6666666666666666,\"rgb(237, 187, 138)\"],[0.8333333333333334,\"rgb(222, 138, 90)\"],[1.0,\"rgb(202, 86, 44)\"]],\"locationmode\":\"country names\",\"locations\":[\"Afghanistan\",\"Albania\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Bangladesh\",\"Belgium\",\"Benin\",\"Bolivia\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Chad\",\"Chile\",\"Colombia\",\"Comoros\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Costa Rica\",\"Cote d'Ivoire\",\"Croatia\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kyrgyzstan\",\"Latvia\",\"Lebanon\",\"Liberia\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Moldova\",\"Mongolia\",\"Morocco\",\"Mozambique\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"North Macedonia\",\"Norway\",\"Panama\",\"Paraguay\",\"Peru\",\"Poland\",\"Portugal\",\"Romania\",\"Russia\",\"Saudi Arabia\",\"Senegal\",\"Sierra Leone\",\"Slovenia\",\"South Korea\",\"Spain\",\"Sweden\",\"Switzerland\",\"Taiwan\",\"Tanzania\",\"Thailand\",\"The Gambia\",\"Togo\",\"Tunisia\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Vietnam\",\"Zimbabwe\"],\"marker\":{\"line\":{\"color\":\"white\",\"width\":0.5}},\"z\":[0,2,3,2,4,4,1,4,2,2,3,3,3,0,0,4,0,4,2,1,0,0,4,1,3,4,4,4,2,3,0,2,4,0,4,4,0,2,4,3,4,2,1,1,2,4,2,2,0,4,3,4,3,4,1,0,1,2,0,4,1,2,4,4,2,2,1,4,1,3,2,2,3,1,1,3,2,4,4,0,2,2,4,3,2,3,3,4,3,0,0,2,2,4,3,4,4,4,4,1,0,1,1,2,2,0,4,3,4,0,0,0,1],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Coropleth of Clustering_2022\"},\"geo\":{\"showcoastlines\":true}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('5211884c-db0a-4677-8db1-50d87593f63d');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["seed = 123\n","\n","selected_columns_2 = ['A', 'B', 'C', 'D', 'E', 'F', 'G']\n","\n","k = 5\n","kmeans = KMeans(n_clusters=k,\n","                random_state=seed,\n","                init='k-means++',\n","                max_iter=300,\n","                n_init=10)\n","\n","kmeans.fit(df_2022[selected_columns_2])\n","\n","labels_2 = kmeans.labels_\n","\n","centroids_2 = kmeans.cluster_centers_\n","\n"],"metadata":{"id":"AMCPDGnwkTR9","executionInfo":{"status":"ok","timestamp":1694073684593,"user_tz":-120,"elapsed":60,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}}},"execution_count":32,"outputs":[]},{"cell_type":"markdown","source":["**Internal evaluation measures**\n","\n"],"metadata":{"id":"WwsWzRENi3Me"}},{"cell_type":"code","source":["silhouette_coefficient_2 = silhouette_score(df_2022[selected_columns_2], labels_2)\n","calinski_harabasz_2= metrics.calinski_harabasz_score(df_2022[selected_columns_2], labels_2)\n","davies_bouldin_2 = davies_bouldin_score(df_2022[selected_columns_2], labels_2)\n","\n","silhouette_coefficient = silhouette_score(df_2022[selected_columns], remapped_clusters)\n","calinski_harabasz= metrics.calinski_harabasz_score(df_2022[selected_columns], remapped_clusters)\n","davies_bouldin = davies_bouldin_score(df_2022[selected_columns], remapped_clusters)\n","\n","print('Internal evaluation measures using Politics Rights (PR) and Civil Rights (CL) as Clustering variables')\n","print('\\n')\n","print(\"Coefficient of Silhouette:\", silhouette_coefficient)\n","print(f'Calinski Harabasz Score: {calinski_harabasz}')\n","print(f'Davies Bouldin Score using: {davies_bouldin}')\n","\n","print('\\n')\n","print('\\n')\n","print('Internal evaluation measures using single components (A-G) as Clustering variables')\n","print('\\n')\n","print(\"Coefficient of Silhouette:\", silhouette_coefficient_2)\n","print(f'Calinski Harabasz Score: {calinski_harabasz_2}')\n","print(f'Davies Bouldin Score: {davies_bouldin_2}')\n","\n"],"metadata":{"executionInfo":{"status":"ok","timestamp":1694073684596,"user_tz":-120,"elapsed":62,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ae5e9c5a-0c8d-47f8-f4c2-c5d663888aeb","id":"ukgCt5iQi3Mg"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Internal evaluation measures using Politics Rights (PR) and Civil Rights (CL) as Clustering variables\n","\n","\n","Coefficient of Silhouette: 0.5187705412754161\n","Calinski Harabasz Score: 562.9020795340191\n","Davies Bouldin Score using: 0.5966342635632458\n","\n","\n","\n","\n","Internal evaluation measures using single components (A-G) as Clustering variables\n","\n","\n","Coefficient of Silhouette: 0.38445114120523033\n","Calinski Harabasz Score: 273.0969612960951\n","Davies Bouldin Score: 0.8713194698868145\n"]}]},{"cell_type":"markdown","source":["Still in 2022 clustering running clustering algorithm using PR and Cl as clustering variables allow us to obtain a better labeling of data."],"metadata":{"id":"Pzk-Oun8yNUv"}},{"cell_type":"markdown","source":["## Difference in 2013-2022 clustering\n"],"metadata":{"id":"w5TYRb6klYl6"}},{"cell_type":"code","source":["df_2013_final=df_2013[['Country name', 'Political Rights', 'Civil Rights', 'Total', 'Cluster']]\n","df_2022_final=df_2022[['Country name', 'Political Rights', 'Civil Rights', 'Total', 'Cluster']]"],"metadata":{"id":"Q1iY6JlrldYK","executionInfo":{"status":"ok","timestamp":1694073684597,"user_tz":-120,"elapsed":60,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["merged_2013_2022=df_2013_final.merge(df_2022_final, how='inner', on=['Country name'], suffixes= ['_2013', '_2022'])\n","merged_2013_2022.tail(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"T3mF1m6zlq7Y","executionInfo":{"status":"ok","timestamp":1694073684598,"user_tz":-120,"elapsed":60,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"0495f210-51e5-48d6-ffdf-f67bafed376d"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Country name  Political Rights_2013  Civil Rights_2013  \\\n","94                Tunisia                     26                 33   \n","95                Ukraine                     21                 36   \n","96   United Arab Emirates                      8                 14   \n","97         United Kingdom                     40                 57   \n","98          United States                     37                 56   \n","99                Uruguay                     39                 58   \n","100            Uzbekistan                      0                  4   \n","101             Venezuela                     15                 24   \n","102               Vietnam                      2                 17   \n","103              Zimbabwe                     11                 14   \n","\n","     Total_2013  Cluster_2013  Political Rights_2022  Civil Rights_2022  \\\n","94           59             2                     26                 38   \n","95           57             2                     26                 35   \n","96           22             0                      5                 12   \n","97           97             4                     39                 54   \n","98           93             4                     32                 51   \n","99           97             4                     40                 57   \n","100           4             0                      2                  9   \n","101          39             1                      1                 13   \n","102          19             0                      3                 16   \n","103          25             0                     11                 17   \n","\n","     Total_2022  Cluster_2022  \n","94           64             2  \n","95           61             2  \n","96           17             0  \n","97           93             4  \n","98           83             3  \n","99           97             4  \n","100          11             0  \n","101          14             0  \n","102          19             0  \n","103          28             1  "],"text/html":["\n","  <div id=\"df-424bc77f-638a-4882-889b-0ae53e1d8d4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Political Rights_2013</th>\n","      <th>Civil Rights_2013</th>\n","      <th>Total_2013</th>\n","      <th>Cluster_2013</th>\n","      <th>Political Rights_2022</th>\n","      <th>Civil Rights_2022</th>\n","      <th>Total_2022</th>\n","      <th>Cluster_2022</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>94</th>\n","      <td>Tunisia</td>\n","      <td>26</td>\n","      <td>33</td>\n","      <td>59</td>\n","      <td>2</td>\n","      <td>26</td>\n","      <td>38</td>\n","      <td>64</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>Ukraine</td>\n","      <td>21</td>\n","      <td>36</td>\n","      <td>57</td>\n","      <td>2</td>\n","      <td>26</td>\n","      <td>35</td>\n","      <td>61</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>United Arab Emirates</td>\n","      <td>8</td>\n","      <td>14</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>12</td>\n","      <td>17</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>United Kingdom</td>\n","      <td>40</td>\n","      <td>57</td>\n","      <td>97</td>\n","      <td>4</td>\n","      <td>39</td>\n","      <td>54</td>\n","      <td>93</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>United States</td>\n","      <td>37</td>\n","      <td>56</td>\n","      <td>93</td>\n","      <td>4</td>\n","      <td>32</td>\n","      <td>51</td>\n","      <td>83</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>Uruguay</td>\n","      <td>39</td>\n","      <td>58</td>\n","      <td>97</td>\n","      <td>4</td>\n","      <td>40</td>\n","      <td>57</td>\n","      <td>97</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>Uzbekistan</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>Venezuela</td>\n","      <td>15</td>\n","      <td>24</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>Vietnam</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>16</td>\n","      <td>19</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>Zimbabwe</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>17</td>\n","      <td>28</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-424bc77f-638a-4882-889b-0ae53e1d8d4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-424bc77f-638a-4882-889b-0ae53e1d8d4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-424bc77f-638a-4882-889b-0ae53e1d8d4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-689ee131-bf5f-4890-8aac-95892d8776dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-689ee131-bf5f-4890-8aac-95892d8776dd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-689ee131-bf5f-4890-8aac-95892d8776dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["merged_2013_2022['Difference']= merged_2013_2022['Cluster_2022']-merged_2013_2022['Cluster_2013']"],"metadata":{"id":"bFyUOH0Zl0FI","executionInfo":{"status":"ok","timestamp":1694073684599,"user_tz":-120,"elapsed":60,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["fig = go.Figure(\n","    go.Choropleth(\n","        locations=merged_2013_2022[\"Country name\"],\n","        z=merged_2013_2022['Difference'],\n","        locationmode='country names',\n","        colorscale='bluered_r',\n","        zmin=-2,\n","        zmax=2,\n","        autocolorscale=False,\n","       colorbar=dict(\n","            title=\"Difference\",\n","            tickvals=[-2, -1, 0, 1, 2],\n","            ticktext=[\"-2\", \"-1\", \"0\", \"1\", \"2\"]\n","        ),\n","        marker_line_color=\"white\",\n","        marker_line_width=0.5,\n","    )\n",")\n","\n","fig.update_layout(\n","    title_text=\"Choropleth of differences in clustering_2013-2022\",\n","    geo=dict(showcoastlines=True),\n",")\n","\n","fig.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"9sm9hxtll5Jh","executionInfo":{"status":"ok","timestamp":1694073684600,"user_tz":-120,"elapsed":61,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"417888b6-35f8-4af6-8a23-05d848a19d9b"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"9d8c7c8d-c5c3-4f78-8b7f-b3b7fa62d0f6\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9d8c7c8d-c5c3-4f78-8b7f-b3b7fa62d0f6\")) {                    Plotly.newPlot(                        \"9d8c7c8d-c5c3-4f78-8b7f-b3b7fa62d0f6\",                        [{\"autocolorscale\":false,\"colorbar\":{\"ticktext\":[\"-2\",\"-1\",\"0\",\"1\",\"2\"],\"tickvals\":[-2,-1,0,1,2],\"title\":{\"text\":\"Difference\"}},\"colorscale\":[[0.0,\"rgb(255,0,0)\"],[1.0,\"rgb(0,0,255)\"]],\"locationmode\":\"country names\",\"locations\":[\"Afghanistan\",\"Albania\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Bangladesh\",\"Belgium\",\"Benin\",\"Bolivia\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Chad\",\"Chile\",\"Colombia\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Costa Rica\",\"Cote d'Ivoire\",\"Croatia\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kyrgyzstan\",\"Latvia\",\"Lebanon\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Mali\",\"Malta\",\"Mauritania\",\"Mexico\",\"Moldova\",\"Mongolia\",\"Morocco\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"North Macedonia\",\"Panama\",\"Paraguay\",\"Peru\",\"Poland\",\"Portugal\",\"Romania\",\"Russia\",\"Saudi Arabia\",\"Senegal\",\"Sierra Leone\",\"Slovenia\",\"South Korea\",\"Spain\",\"Sweden\",\"Taiwan\",\"Tanzania\",\"Thailand\",\"Tunisia\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Vietnam\",\"Zimbabwe\"],\"marker\":{\"line\":{\"color\":\"white\",\"width\":0.5}},\"z\":[0,0,0,1,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,1,-1,-1,0,0,0,0,-1,0,0,0,1,0,0,0,-2,0,-1,0,0,0,0,0,0,0,0,0,-1,1,-1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,0,-1,-2,0,0,0,0,-1,0,0,-1,0,1],\"zmax\":2,\"zmin\":-2,\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Choropleth of differences in clustering_2013-2022\"},\"geo\":{\"showcoastlines\":true}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('9d8c7c8d-c5c3-4f78-8b7f-b3b7fa62d0f6');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["From the coropleth above we notice that most of the countries haven't changed in happiness situation in the references years.  But some exceptions exist:\n","\n","- USA, Nicaragua, Venezuela, Republica Dominicana, Senegal, Benin, Gabon,Tanzania, Kenya, Egypt, Poland, Kyrgyzstan, India, Bangladesh made their situation worse\n","\n","- Thailand and Hungary made their situation much more worse (they decrease in 2 clusters)\n","\n","Instead\n","- Ecuador, Mali, Zimbabwe, Madagascar, Greece, Latvian Nepal have improved their situation.\n","\n","Let's better inspect these countries"],"metadata":{"id":"KzxCmp2PpBbM"}},{"cell_type":"code","source":["# Countries of interest\n","worse_countries = [\n","    'United States', 'Nicaragua', 'Venezuela', 'Dominican Republic', 'Senegal',\n","    'Benin', 'Gabon', 'Tanzania', 'Kenya', 'Egypt', 'Poland',\n","    'Kyrgyzstan', 'India', 'Bangladesh'\n","]\n","\n","columns = ['Country name', 'Political Rights_2013', 'Civil Rights_2013',\t'Total_2013',\t'Cluster_2013',\t'Political Rights_2022',\t'Civil Rights_2022',\t'Total_2022',\t'Cluster_2022']\n","\n","# subset\n","subset_worse_countries = merged_2013_2022.loc[\n","    merged_2013_2022['Country name'].isin(worse_countries), columns\n","]\n","\n","subset_worse_countries.sort_values('Total_2013', ascending=False, inplace=True)\n","subset_worse_countries\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"DDatJcRjo9b5","executionInfo":{"status":"ok","timestamp":1694073684602,"user_tz":-120,"elapsed":59,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"efb13f43-0238-4324-de3c-787974999e81"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Country name  Political Rights_2013  Civil Rights_2013  Total_2013  \\\n","80               Poland                     38                 55          93   \n","98        United States                     37                 56          93   \n","8                 Benin                     32                 50          82   \n","45                India                     34                 42          76   \n","27   Dominican Republic                     31                 44          75   \n","85              Senegal                     32                 43          75   \n","92             Tanzania                     28                 38          66   \n","6            Bangladesh                     25                 31          56   \n","55                Kenya                     21                 34          55   \n","74            Nicaragua                     17                 34          51   \n","29                Egypt                     16                 25          41   \n","57           Kyrgyzstan                     14                 25          39   \n","101           Venezuela                     15                 24          39   \n","35                Gabon                      9                 25          34   \n","\n","     Cluster_2013  Political Rights_2022  Civil Rights_2022  Total_2022  \\\n","80              4                     34                 47          81   \n","98              4                     32                 51          83   \n","8               3                     17                 42          59   \n","45              3                     33                 33          66   \n","27              3                     27                 41          68   \n","85              3                     29                 39          68   \n","92              2                     12                 22          34   \n","6               2                     15                 24          39   \n","55              2                     19                 29          48   \n","74              1                      5                 18          23   \n","29              1                      6                 12          18   \n","57              1                      4                 23          27   \n","101             1                      1                 13          14   \n","35              1                      3                 18          21   \n","\n","     Cluster_2022  \n","80              3  \n","98              3  \n","8               2  \n","45              2  \n","27              2  \n","85              2  \n","92              1  \n","6               1  \n","55              1  \n","74              0  \n","29              0  \n","57              0  \n","101             0  \n","35              0  "],"text/html":["\n","  <div id=\"df-b7d67044-cf99-495c-87ae-e552dfdfdc5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Political Rights_2013</th>\n","      <th>Civil Rights_2013</th>\n","      <th>Total_2013</th>\n","      <th>Cluster_2013</th>\n","      <th>Political Rights_2022</th>\n","      <th>Civil Rights_2022</th>\n","      <th>Total_2022</th>\n","      <th>Cluster_2022</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>80</th>\n","      <td>Poland</td>\n","      <td>38</td>\n","      <td>55</td>\n","      <td>93</td>\n","      <td>4</td>\n","      <td>34</td>\n","      <td>47</td>\n","      <td>81</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>United States</td>\n","      <td>37</td>\n","      <td>56</td>\n","      <td>93</td>\n","      <td>4</td>\n","      <td>32</td>\n","      <td>51</td>\n","      <td>83</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Benin</td>\n","      <td>32</td>\n","      <td>50</td>\n","      <td>82</td>\n","      <td>3</td>\n","      <td>17</td>\n","      <td>42</td>\n","      <td>59</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>India</td>\n","      <td>34</td>\n","      <td>42</td>\n","      <td>76</td>\n","      <td>3</td>\n","      <td>33</td>\n","      <td>33</td>\n","      <td>66</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Dominican Republic</td>\n","      <td>31</td>\n","      <td>44</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>27</td>\n","      <td>41</td>\n","      <td>68</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>Senegal</td>\n","      <td>32</td>\n","      <td>43</td>\n","      <td>75</td>\n","      <td>3</td>\n","      <td>29</td>\n","      <td>39</td>\n","      <td>68</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>Tanzania</td>\n","      <td>28</td>\n","      <td>38</td>\n","      <td>66</td>\n","      <td>2</td>\n","      <td>12</td>\n","      <td>22</td>\n","      <td>34</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Bangladesh</td>\n","      <td>25</td>\n","      <td>31</td>\n","      <td>56</td>\n","      <td>2</td>\n","      <td>15</td>\n","      <td>24</td>\n","      <td>39</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Kenya</td>\n","      <td>21</td>\n","      <td>34</td>\n","      <td>55</td>\n","      <td>2</td>\n","      <td>19</td>\n","      <td>29</td>\n","      <td>48</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>Nicaragua</td>\n","      <td>17</td>\n","      <td>34</td>\n","      <td>51</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>18</td>\n","      <td>23</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Egypt</td>\n","      <td>16</td>\n","      <td>25</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>12</td>\n","      <td>18</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Kyrgyzstan</td>\n","      <td>14</td>\n","      <td>25</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>23</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>Venezuela</td>\n","      <td>15</td>\n","      <td>24</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Gabon</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>34</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>18</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7d67044-cf99-495c-87ae-e552dfdfdc5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b7d67044-cf99-495c-87ae-e552dfdfdc5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b7d67044-cf99-495c-87ae-e552dfdfdc5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9a670d3d-c99a-42bc-a865-8fabf4a8dead\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a670d3d-c99a-42bc-a865-8fabf4a8dead')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9a670d3d-c99a-42bc-a865-8fabf4a8dead button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["In this subset of countries we notice that:\n","- Poland and United States have dropped significantly in civil rights (from 55 and 56 to 47 and 51 respectevely), also India and Kenya are in the same situation.\n","\n","- Dominican Republic and Kenya slightly worsened both indicators, while Tanzania, Bangladesh, Benin and Nicaragua both components worsened considerably.\n","\n","- Egypt, Kyrgyzstan, Venezuela and Gabon saw a clear and marked worsening in politics rights due to government changes."],"metadata":{"id":"cHUBS0AgstT7"}},{"cell_type":"code","source":["merged_2013_2022[(merged_2013_2022['Country name']=='Thailand')|(merged_2013_2022['Country name']=='Hungary')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":129},"id":"xwcx0uvgue7k","executionInfo":{"status":"ok","timestamp":1694073684604,"user_tz":-120,"elapsed":59,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"683d07ac-33b5-4d15-8405-65a26bf77126"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Country name  Political Rights_2013  Civil Rights_2013  Total_2013  \\\n","43      Hungary                     36                 52          88   \n","93     Thailand                     22                 31          53   \n","\n","    Cluster_2013  Political Rights_2022  Civil Rights_2022  Total_2022  \\\n","43             4                     26                 43          69   \n","93             2                      5                 24          29   \n","\n","    Cluster_2022  Difference  \n","43             2          -2  \n","93             0          -2  "],"text/html":["\n","  <div id=\"df-63f4a5a9-169f-4512-b63e-84075419fabc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Political Rights_2013</th>\n","      <th>Civil Rights_2013</th>\n","      <th>Total_2013</th>\n","      <th>Cluster_2013</th>\n","      <th>Political Rights_2022</th>\n","      <th>Civil Rights_2022</th>\n","      <th>Total_2022</th>\n","      <th>Cluster_2022</th>\n","      <th>Difference</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>43</th>\n","      <td>Hungary</td>\n","      <td>36</td>\n","      <td>52</td>\n","      <td>88</td>\n","      <td>4</td>\n","      <td>26</td>\n","      <td>43</td>\n","      <td>69</td>\n","      <td>2</td>\n","      <td>-2</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>Thailand</td>\n","      <td>22</td>\n","      <td>31</td>\n","      <td>53</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>24</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>-2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63f4a5a9-169f-4512-b63e-84075419fabc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63f4a5a9-169f-4512-b63e-84075419fabc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63f4a5a9-169f-4512-b63e-84075419fabc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7268f7ea-e10b-4928-9709-df47e5f62eaf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7268f7ea-e10b-4928-9709-df47e5f62eaf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7268f7ea-e10b-4928-9709-df47e5f62eaf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["Thailand has deteriorated dramatically in political rights (score in 2022 is more than halved with respect to 2013)\n","\n","Hungary instead is dropped in both indicators menaning a deteriorament of approximately 20 point in total score: this countries changes his situation from Free to Partially free."],"metadata":{"id":"IjuuQCLlu0x1"}},{"cell_type":"code","source":["# Countries of interest\n","improving_countries = ['Ecuador', 'Mali', 'Zimbabwe', 'Madagascar', 'Greece', 'Latvia', 'Nepal']\n","\n","\n","# subset\n","subset_improving_countries = merged_2013_2022.loc[\n","    merged_2013_2022['Country name'].isin(improving_countries), columns\n","]\n","\n","subset_improving_countries.sort_values('Total_2013', ascending=False, inplace=True)\n","subset_improving_countries\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"aOXsv4tKvv-3","executionInfo":{"status":"ok","timestamp":1694073684607,"user_tz":-120,"elapsed":61,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"4de34a8b-783b-484b-b3ac-19d82539069d"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Country name  Political Rights_2013  Civil Rights_2013  Total_2013  \\\n","58        Latvia                     33                 51          84   \n","39        Greece                     35                 48          83   \n","28       Ecuador                     24                 36          60   \n","71         Nepal                     20                 27          47   \n","62    Madagascar                      7                 28          35   \n","103     Zimbabwe                     11                 14          25   \n","64          Mali                      5                 19          24   \n","\n","     Cluster_2013  Political Rights_2022  Civil Rights_2022  Total_2022  \\\n","58              3                     37                 51          88   \n","39              3                     37                 50          87   \n","28              2                     31                 40          71   \n","71              1                     25                 32          57   \n","62              1                     27                 34          61   \n","103             0                     11                 17          28   \n","64              0                      8                 24          32   \n","\n","     Cluster_2022  \n","58              4  \n","39              4  \n","28              3  \n","71              2  \n","62              2  \n","103             1  \n","64              1  "],"text/html":["\n","  <div id=\"df-a6a323aa-760b-421a-bcd8-b6152e5ec110\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Political Rights_2013</th>\n","      <th>Civil Rights_2013</th>\n","      <th>Total_2013</th>\n","      <th>Cluster_2013</th>\n","      <th>Political Rights_2022</th>\n","      <th>Civil Rights_2022</th>\n","      <th>Total_2022</th>\n","      <th>Cluster_2022</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>58</th>\n","      <td>Latvia</td>\n","      <td>33</td>\n","      <td>51</td>\n","      <td>84</td>\n","      <td>3</td>\n","      <td>37</td>\n","      <td>51</td>\n","      <td>88</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Greece</td>\n","      <td>35</td>\n","      <td>48</td>\n","      <td>83</td>\n","      <td>3</td>\n","      <td>37</td>\n","      <td>50</td>\n","      <td>87</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Ecuador</td>\n","      <td>24</td>\n","      <td>36</td>\n","      <td>60</td>\n","      <td>2</td>\n","      <td>31</td>\n","      <td>40</td>\n","      <td>71</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Nepal</td>\n","      <td>20</td>\n","      <td>27</td>\n","      <td>47</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>32</td>\n","      <td>57</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>Madagascar</td>\n","      <td>7</td>\n","      <td>28</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>27</td>\n","      <td>34</td>\n","      <td>61</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>Zimbabwe</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>25</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>17</td>\n","      <td>28</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>Mali</td>\n","      <td>5</td>\n","      <td>19</td>\n","      <td>24</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>24</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6a323aa-760b-421a-bcd8-b6152e5ec110')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a6a323aa-760b-421a-bcd8-b6152e5ec110 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a6a323aa-760b-421a-bcd8-b6152e5ec110');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8fea316f-f8b7-481b-9926-80b784fff782\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8fea316f-f8b7-481b-9926-80b784fff782')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8fea316f-f8b7-481b-9926-80b784fff782 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":40}]},{"cell_type":"markdown","source":["Looking instead in impove countries we obsevre that\n","\n","- Latvia, Nepal and Mali have slight improved political rights\n","- Greece and Ecuador have improved both indices (Ecuador more)\n","- Zimbabwe's civil rights are improved\n","- But Madagascar is the country that has made the greatest improvement by gaining 20 point on politic rights.\n"],"metadata":{"id":"YHzHRKqovrkC"}},{"cell_type":"markdown","source":["# Clustering Freedom and Happiness variances over the time"],"metadata":{"id":"wktu2xWvFNM0"}},{"cell_type":"markdown","source":["Using raw data\n","\n","Now we clusterize percentual differences clculated over years in the dataset in order to inspect which are the most varied countries."],"metadata":{"id":"YUKwahzHzYxa"}},{"cell_type":"code","source":["variance=pd.read_csv(\"/content/drive/MyDrive/DS LAB - Colombaro, Ferretti, Fracchia, Salvatori/PROCESSED DATASETS/Happiness + Freedom/variance_df.csv\")\n","variance"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"CC2HVggf5-Th","executionInfo":{"status":"ok","timestamp":1694073684963,"user_tz":-120,"elapsed":415,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"72c195b3-f9d9-4315-be3d-bb26f9aff5cf"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Country name  PR % change  CL % change  A % change  B % change  \\\n","0    Afghanistan     0.907280     0.155152    1.361111    1.027778   \n","1        Albania     0.019644     0.001282    0.015625    0.095917   \n","2        Algeria     0.008264     0.010281    0.062500    0.000000   \n","3         Angola     0.000000     0.002770    0.000000    0.000000   \n","4      Argentina     0.005946     0.001667    0.000000    0.009546   \n","..           ...          ...          ...         ...         ...   \n","153    Venezuela     0.930443     0.053552    1.360000    0.820755   \n","154      Vietnam     0.250000     0.003460    0.000000    0.000000   \n","155        Yemen     0.830988     0.068851    1.111111    0.562500   \n","156       Zambia     0.036548     0.001783    0.074846    0.082987   \n","157     Zimbabwe     0.082987     0.096488    0.361111    0.067778   \n","\n","     C % change  D % change  E % change  F % change  G % change  \\\n","0      0.694444    0.178889    0.102500    1.000000    0.111111   \n","1      0.027778    0.000000    0.027971    0.000000    0.000000   \n","2      0.000000    0.020408    0.102500    0.040000    0.000000   \n","3      0.000000    0.015625    0.000000    0.000000    0.000000   \n","4      0.111111    0.005102    0.000000    0.008264    0.011019   \n","..          ...         ...         ...         ...         ...   \n","153    1.000000    0.048379    0.173611    0.506944    0.124219   \n","154    1.000000    0.062500    0.000000    0.000000    0.000000   \n","155    1.611111    0.187778    0.000000    0.000000    0.271111   \n","156    0.179705    0.018264    0.000000    0.000000    0.000000   \n","157    0.361111    0.126736    0.173611    1.361111    0.062500   \n","\n","     Total % change  Happiness % change  Log GDP per capita % change  \\\n","0          0.412146            0.468119                     0.001562   \n","1          0.004923            0.018581                     0.000190   \n","2          0.004277            0.028326                     0.000061   \n","3          0.001111            0.001306                     0.000001   \n","4          0.002172            0.014174                     0.000275   \n","..              ...                 ...                          ...   \n","153        0.158117            0.203870                     0.205480   \n","154        0.005270            0.019644                     0.000296   \n","155        0.165392            0.309900                     0.005485   \n","156        0.009094            0.441942                     0.000063   \n","157        0.045177            0.122760                     0.000385   \n","\n","     Social support % change  Healthy life expectancy at birth % change  \\\n","0                   0.304205                                   0.000252   \n","1                   0.039095                                   0.000034   \n","2                   0.013561                                   0.000011   \n","3                   0.002095                                   0.000140   \n","4                   0.003620                                   0.000010   \n","..                       ...                                        ...   \n","153                 0.020543                                   0.000052   \n","154                 0.033856                                   0.000020   \n","155                 0.044941                                   0.000061   \n","156                 0.110158                                   0.000701   \n","157                 0.012649                                   0.001752   \n","\n","     Freedom to make life choices % change  Generosity % change  \\\n","0                                 0.244152            15.358684   \n","1                                 0.054912           322.789864   \n","2                                 0.489014        204582.442977   \n","3                                 0.007309             0.365043   \n","4                                 0.036879            90.451285   \n","..                                     ...                  ...   \n","153                               0.274744             6.828239   \n","154                               0.015693            40.449399   \n","155                               0.123109             0.077956   \n","156                               0.032123            26.915283   \n","157                               0.057058           170.578892   \n","\n","     Perceptions of corruption % change  \n","0                              0.106156  \n","1                              0.006458  \n","2                              0.009847  \n","3                              0.000470  \n","4                              0.003092  \n","..                                  ...  \n","153                            0.015015  \n","154                            0.017392  \n","155                            0.007166  \n","156                            0.042729  \n","157                            0.033038  \n","\n","[158 rows x 18 columns]"],"text/html":["\n","  <div id=\"df-e2033ed9-6717-4251-9fe9-6c64b12bde3f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>PR % change</th>\n","      <th>CL % change</th>\n","      <th>A % change</th>\n","      <th>B % change</th>\n","      <th>C % change</th>\n","      <th>D % change</th>\n","      <th>E % change</th>\n","      <th>F % change</th>\n","      <th>G % change</th>\n","      <th>Total % change</th>\n","      <th>Happiness % change</th>\n","      <th>Log GDP per capita % change</th>\n","      <th>Social support % change</th>\n","      <th>Healthy life expectancy at birth % change</th>\n","      <th>Freedom to make life choices % change</th>\n","      <th>Generosity % change</th>\n","      <th>Perceptions of corruption % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>0.907280</td>\n","      <td>0.155152</td>\n","      <td>1.361111</td>\n","      <td>1.027778</td>\n","      <td>0.694444</td>\n","      <td>0.178889</td>\n","      <td>0.102500</td>\n","      <td>1.000000</td>\n","      <td>0.111111</td>\n","      <td>0.412146</td>\n","      <td>0.468119</td>\n","      <td>0.001562</td>\n","      <td>0.304205</td>\n","      <td>0.000252</td>\n","      <td>0.244152</td>\n","      <td>15.358684</td>\n","      <td>0.106156</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>0.019644</td>\n","      <td>0.001282</td>\n","      <td>0.015625</td>\n","      <td>0.095917</td>\n","      <td>0.027778</td>\n","      <td>0.000000</td>\n","      <td>0.027971</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.004923</td>\n","      <td>0.018581</td>\n","      <td>0.000190</td>\n","      <td>0.039095</td>\n","      <td>0.000034</td>\n","      <td>0.054912</td>\n","      <td>322.789864</td>\n","      <td>0.006458</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Algeria</td>\n","      <td>0.008264</td>\n","      <td>0.010281</td>\n","      <td>0.062500</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.020408</td>\n","      <td>0.102500</td>\n","      <td>0.040000</td>\n","      <td>0.000000</td>\n","      <td>0.004277</td>\n","      <td>0.028326</td>\n","      <td>0.000061</td>\n","      <td>0.013561</td>\n","      <td>0.000011</td>\n","      <td>0.489014</td>\n","      <td>204582.442977</td>\n","      <td>0.009847</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Angola</td>\n","      <td>0.000000</td>\n","      <td>0.002770</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.015625</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.001111</td>\n","      <td>0.001306</td>\n","      <td>0.000001</td>\n","      <td>0.002095</td>\n","      <td>0.000140</td>\n","      <td>0.007309</td>\n","      <td>0.365043</td>\n","      <td>0.000470</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Argentina</td>\n","      <td>0.005946</td>\n","      <td>0.001667</td>\n","      <td>0.000000</td>\n","      <td>0.009546</td>\n","      <td>0.111111</td>\n","      <td>0.005102</td>\n","      <td>0.000000</td>\n","      <td>0.008264</td>\n","      <td>0.011019</td>\n","      <td>0.002172</td>\n","      <td>0.014174</td>\n","      <td>0.000275</td>\n","      <td>0.003620</td>\n","      <td>0.000010</td>\n","      <td>0.036879</td>\n","      <td>90.451285</td>\n","      <td>0.003092</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>Venezuela</td>\n","      <td>0.930443</td>\n","      <td>0.053552</td>\n","      <td>1.360000</td>\n","      <td>0.820755</td>\n","      <td>1.000000</td>\n","      <td>0.048379</td>\n","      <td>0.173611</td>\n","      <td>0.506944</td>\n","      <td>0.124219</td>\n","      <td>0.158117</td>\n","      <td>0.203870</td>\n","      <td>0.205480</td>\n","      <td>0.020543</td>\n","      <td>0.000052</td>\n","      <td>0.274744</td>\n","      <td>6.828239</td>\n","      <td>0.015015</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>Vietnam</td>\n","      <td>0.250000</td>\n","      <td>0.003460</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.062500</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.005270</td>\n","      <td>0.019644</td>\n","      <td>0.000296</td>\n","      <td>0.033856</td>\n","      <td>0.000020</td>\n","      <td>0.015693</td>\n","      <td>40.449399</td>\n","      <td>0.017392</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>Yemen</td>\n","      <td>0.830988</td>\n","      <td>0.068851</td>\n","      <td>1.111111</td>\n","      <td>0.562500</td>\n","      <td>1.611111</td>\n","      <td>0.187778</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.271111</td>\n","      <td>0.165392</td>\n","      <td>0.309900</td>\n","      <td>0.005485</td>\n","      <td>0.044941</td>\n","      <td>0.000061</td>\n","      <td>0.123109</td>\n","      <td>0.077956</td>\n","      <td>0.007166</td>\n","    </tr>\n","    <tr>\n","      <th>156</th>\n","      <td>Zambia</td>\n","      <td>0.036548</td>\n","      <td>0.001783</td>\n","      <td>0.074846</td>\n","      <td>0.082987</td>\n","      <td>0.179705</td>\n","      <td>0.018264</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.009094</td>\n","      <td>0.441942</td>\n","      <td>0.000063</td>\n","      <td>0.110158</td>\n","      <td>0.000701</td>\n","      <td>0.032123</td>\n","      <td>26.915283</td>\n","      <td>0.042729</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>Zimbabwe</td>\n","      <td>0.082987</td>\n","      <td>0.096488</td>\n","      <td>0.361111</td>\n","      <td>0.067778</td>\n","      <td>0.361111</td>\n","      <td>0.126736</td>\n","      <td>0.173611</td>\n","      <td>1.361111</td>\n","      <td>0.062500</td>\n","      <td>0.045177</td>\n","      <td>0.122760</td>\n","      <td>0.000385</td>\n","      <td>0.012649</td>\n","      <td>0.001752</td>\n","      <td>0.057058</td>\n","      <td>170.578892</td>\n","      <td>0.033038</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>158 rows × 18 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2033ed9-6717-4251-9fe9-6c64b12bde3f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e2033ed9-6717-4251-9fe9-6c64b12bde3f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e2033ed9-6717-4251-9fe9-6c64b12bde3f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be665ccb-ad9b-482a-8afe-5bdcb3dfbcd5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be665ccb-ad9b-482a-8afe-5bdcb3dfbcd5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be665ccb-ad9b-482a-8afe-5bdcb3dfbcd5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["variance_df=variance[['Country name','Total % change','Happiness % change']]\n","\n","variance_df.describe().transpose()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"WXkkr4xZ6chH","executionInfo":{"status":"ok","timestamp":1694073684964,"user_tz":-120,"elapsed":25,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"2d415f68-9122-41e4-ca5f-57d5012922da"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    count      mean       std  min       25%       50%  \\\n","Total % change      158.0  0.060633  0.201656  0.0  0.000895  0.005480   \n","Happiness % change  158.0  0.050050  0.073270  0.0  0.009594  0.023348   \n","\n","                         75%       max  \n","Total % change      0.027214  1.944256  \n","Happiness % change  0.058800  0.468119  "],"text/html":["\n","  <div id=\"df-fcc6a91e-fee7-4281-9b77-ecdde68e1f8f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Total % change</th>\n","      <td>158.0</td>\n","      <td>0.060633</td>\n","      <td>0.201656</td>\n","      <td>0.0</td>\n","      <td>0.000895</td>\n","      <td>0.005480</td>\n","      <td>0.027214</td>\n","      <td>1.944256</td>\n","    </tr>\n","    <tr>\n","      <th>Happiness % change</th>\n","      <td>158.0</td>\n","      <td>0.050050</td>\n","      <td>0.073270</td>\n","      <td>0.0</td>\n","      <td>0.009594</td>\n","      <td>0.023348</td>\n","      <td>0.058800</td>\n","      <td>0.468119</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcc6a91e-fee7-4281-9b77-ecdde68e1f8f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcc6a91e-fee7-4281-9b77-ecdde68e1f8f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcc6a91e-fee7-4281-9b77-ecdde68e1f8f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-12c8a008-1c19-4431-8935-7632796cf089\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12c8a008-1c19-4431-8935-7632796cf089')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-12c8a008-1c19-4431-8935-7632796cf089 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["Since the fact that these variables have different magnitude is better to standardize them in order to eliminate potential effect of the differences."],"metadata":{"id":"cTbJxnXZVKGQ"}},{"cell_type":"code","source":["num_col = ['Total % change', 'Happiness % change']\n","scaler = StandardScaler()\n","\n","for i in num_col:\n","  variance_df[[i]] = scaler.fit_transform(variance_df[[i]])\n","\n","variance_df.describe().transpose()"],"metadata":{"executionInfo":{"status":"ok","timestamp":1694073684966,"user_tz":-120,"elapsed":23,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"colab":{"base_uri":"https://localhost:8080/","height":404},"outputId":"57aeb015-7bd0-45b1-aa23-55ae1d735ef3","id":"oTQTdTc17TEn"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-43-fc73ef64bf14>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n","<ipython-input-43-fc73ef64bf14>:5: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["                    count          mean      std       min       25%  \\\n","Total % change      158.0 -1.124276e-17  1.00318 -0.301630 -0.297178   \n","Happiness % change  158.0  5.621382e-18  1.00318 -0.685262 -0.553908   \n","\n","                         50%       75%       max  \n","Total % change     -0.274369 -0.166250  9.370496  \n","Happiness % change -0.365597  0.119802  5.723970  "],"text/html":["\n","  <div id=\"df-89844cef-e8b4-4cba-85f3-efc1ad4c1ce7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Total % change</th>\n","      <td>158.0</td>\n","      <td>-1.124276e-17</td>\n","      <td>1.00318</td>\n","      <td>-0.301630</td>\n","      <td>-0.297178</td>\n","      <td>-0.274369</td>\n","      <td>-0.166250</td>\n","      <td>9.370496</td>\n","    </tr>\n","    <tr>\n","      <th>Happiness % change</th>\n","      <td>158.0</td>\n","      <td>5.621382e-18</td>\n","      <td>1.00318</td>\n","      <td>-0.685262</td>\n","      <td>-0.553908</td>\n","      <td>-0.365597</td>\n","      <td>0.119802</td>\n","      <td>5.723970</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89844cef-e8b4-4cba-85f3-efc1ad4c1ce7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89844cef-e8b4-4cba-85f3-efc1ad4c1ce7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89844cef-e8b4-4cba-85f3-efc1ad4c1ce7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-377475dc-a099-4130-ad79-bf20c94b712e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-377475dc-a099-4130-ad79-bf20c94b712e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-377475dc-a099-4130-ad79-bf20c94b712e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["Let's decide the proper number of clusters"],"metadata":{"id":"YR2WsPMnW4br"}},{"cell_type":"code","source":["X_scaled = variance_df[['Total % change', 'Happiness % change']]\n","\n","wcss = []\n","silhouette_scores = []\n","for i in range(2, 9):\n","    km = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=123)\n","    km.fit(X_scaled)\n","    wcss.append(km.inertia_)\n","    silhouette_scores.append(silhouette_score(X_scaled, km.labels_))\n","\n","# Plot\n","fig, ax = plt.subplots(figsize=(6, 4), dpi=150)\n","\n","background_color = \"#fafafa\"\n","fig.patch.set_facecolor(background_color)\n","ax.set_facecolor(background_color)\n","for s in ['top', 'right']:\n","    ax.spines[s].set_visible(False)\n","\n","fig.text(0.13, 0.93, '''The optimal number of clusters is where\n","the W.C.S.S is minimised and Silhouette Score is maximised''', fontsize=8, color='gray', ha='left')\n","\n","fig.text(0.13, 1.02, 'The Elbow Method and Silhouette Score', fontfamily='sans-serif', fontweight='bold', fontsize=12, color='#323232')\n","\n","plt.tick_params(axis='both', which='major', labelsize=8)\n","plt.tick_params(axis=u'both', which=u'both', length=0)\n","\n","\n","# Plot of W.C.S.S. (elbow method)\n","ax.plot(range(2, 9), wcss, color='gold', label='W.C.S.S')\n","ax.set_xlabel('No. of Clusters', fontsize=8)\n","ax.set_ylabel('W.C.S.S.', fontsize=8)\n","\n","# Plot of silhouette coefficient\n","ax2 = ax.twinx()\n","ax2.plot(range(2, 9), silhouette_scores, color='steelblue', linestyle='dashed', marker='o', label='Silhouette Score')\n","ax2.set_ylabel('Silhouette Score', fontsize=8)\n","\n","# Labels\n","ax.set_xticks(range(2, 9))\n","ax.set_xticklabels(range(2, 9), fontsize=8)\n","\n","# Legend\n","lines, labels = ax.get_legend_handles_labels()\n","lines2, labels2 = ax2.get_legend_handles_labels()\n","ax2.legend(lines + lines2, labels + labels2, loc='upper right', fontsize=8)\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"925pSf6kW8ZX","executionInfo":{"status":"ok","timestamp":1694073687560,"user_tz":-120,"elapsed":2612,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"36e1aba5-d586-4fc3-f7ef-1f0c6beeae61"},"execution_count":44,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 900x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Once gain the proper number of clusters is 5."],"metadata":{"id":"uEDfjINYXKvv"}},{"cell_type":"code","source":["seed = 123\n","\n","selected_columns = ['Total % change', 'Happiness % change']\n","\n","k = 5\n","kmeans = KMeans(n_clusters=k,\n","                random_state=seed,\n","                init='k-means++',\n","                max_iter=300,\n","                n_init=10)\n","\n","kmeans.fit(variance_df[selected_columns])\n","\n","labels = kmeans.labels_\n","\n","centroids = kmeans.cluster_centers_\n","\n","\n","variance_df['Cluster'] = labels\n","labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H1Tc4K-tXtgM","executionInfo":{"status":"ok","timestamp":1694073687563,"user_tz":-120,"elapsed":96,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"bf03c722-a035-4ba1-e8b6-065de9c9bff3"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-45-c456d03a77df>:19: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["array([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4,\n","       0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 4, 0, 4, 0,\n","       0, 0, 3, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 2, 0, 0, 0, 0, 4, 0, 0,\n","       3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 4, 0, 0, 4, 0,\n","       0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 4, 0, 3, 0, 0,\n","       0, 0, 0, 0, 0, 0, 4, 0, 3, 4, 0, 4, 0, 3, 0, 0, 0, 0, 0, 0, 1, 4,\n","       0, 2, 2, 4], dtype=int32)"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["cluster_array = np.array([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4,\n","                          0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 4, 0, 4, 0,\n","                          0, 0, 3, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0,\n","                          0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 2, 0, 0, 0, 0, 4, 0, 0,\n","                          3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 4, 0, 0, 4, 0,\n","                          0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 4, 0, 3, 0, 0,\n","                          0, 0, 0, 0, 0, 0, 4, 0, 3, 4, 0, 4, 0, 3, 0, 0, 0, 0, 0, 0, 1, 4,\n","                          0, 2, 2, 4])\n","\n","remapped_clusters = np.where(cluster_array == 0, 0,\n","                             np.where(cluster_array == 4, 1,\n","                                      np.where(cluster_array == 2, 2,\n","                                               np.where(cluster_array == 3, 3, 4))))\n","\n","variance_df['Cluster'] = remapped_clusters"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b3IKZDf0a5dU","executionInfo":{"status":"ok","timestamp":1694073687564,"user_tz":-120,"elapsed":78,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"08bad13a-91a7-459d-acb2-d6e9ce879899"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-46-61e70193800d>:15: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","\n"]}]},{"cell_type":"code","source":["fig = px.scatter(variance_df, x='Total % change', y='Happiness % change', color='Cluster',\n","                 hover_data=['Country name'], color_continuous_scale='pinkyl')\n","\n","fig.add_trace(go.Scatter(x=centroids[:, 0], y=centroids[:, 0], mode='markers',\n","                         marker=dict(color='black', size=10, symbol='x'),\n","                         name='Centroid'))\n","\n","fig.update_layout(title_text=\"Scatterplot of Changes Clustering\")\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"G7hIQ6u_YFO7","executionInfo":{"status":"ok","timestamp":1694073687566,"user_tz":-120,"elapsed":62,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"82298585-e742-405d-d51c-798120ff9b3d"},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"cc879b38-76b8-42b9-9dc8-d35ceb4dafa6\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"cc879b38-76b8-42b9-9dc8-d35ceb4dafa6\")) {                    Plotly.newPlot(                        \"cc879b38-76b8-42b9-9dc8-d35ceb4dafa6\",                        [{\"customdata\":[[\"Afghanistan\"],[\"Albania\"],[\"Algeria\"],[\"Angola\"],[\"Argentina\"],[\"Armenia\"],[\"Australia\"],[\"Austria\"],[\"Azerbaijan\"],[\"Bahrain\"],[\"Bangladesh\"],[\"Belarus\"],[\"Belgium\"],[\"Belize\"],[\"Benin\"],[\"Bhutan\"],[\"Bolivia\"],[\"Bosnia and Herzegovina\"],[\"Botswana\"],[\"Brazil\"],[\"Bulgaria\"],[\"Burkina Faso\"],[\"Burundi\"],[\"Cambodia\"],[\"Cameroon\"],[\"Canada\"],[\"Central African Republic\"],[\"Chad\"],[\"Chile\"],[\"China\"],[\"Colombia\"],[\"Comoros\"],[\"Congo (Brazzaville)\"],[\"Congo (Kinshasa)\"],[\"Costa Rica\"],[\"Cote d'Ivoire\"],[\"Croatia\"],[\"Cyprus\"],[\"Czech Republic\"],[\"Denmark\"],[\"Dominican Republic\"],[\"Ecuador\"],[\"Egypt\"],[\"El Salvador\"],[\"Estonia\"],[\"Eswatini\"],[\"Ethiopia\"],[\"Finland\"],[\"France\"],[\"Gabon\"],[\"Georgia\"],[\"Germany\"],[\"Ghana\"],[\"Greece\"],[\"Guatemala\"],[\"Guinea\"],[\"Haiti\"],[\"Honduras\"],[\"Hong Kong\"],[\"Hungary\"],[\"Iceland\"],[\"India\"],[\"Indonesia\"],[\"Iran\"],[\"Iraq\"],[\"Ireland\"],[\"Israel\"],[\"Italy\"],[\"Jamaica\"],[\"Japan\"],[\"Jordan\"],[\"Kazakhstan\"],[\"Kenya\"],[\"Kosovo\"],[\"Kuwait\"],[\"Kyrgyzstan\"],[\"Laos\"],[\"Latvia\"],[\"Lebanon\"],[\"Lesotho\"],[\"Liberia\"],[\"Libya\"],[\"Lithuania\"],[\"Luxembourg\"],[\"Madagascar\"],[\"Malawi\"],[\"Malaysia\"],[\"Maldives\"],[\"Mali\"],[\"Malta\"],[\"Mauritania\"],[\"Mauritius\"],[\"Mexico\"],[\"Moldova\"],[\"Mongolia\"],[\"Montenegro\"],[\"Morocco\"],[\"Mozambique\"],[\"Myanmar\"],[\"Namibia\"],[\"Nepal\"],[\"Netherlands\"],[\"New Zealand\"],[\"Nicaragua\"],[\"Niger\"],[\"Nigeria\"],[\"North Macedonia\"],[\"Norway\"],[\"Pakistan\"],[\"Panama\"],[\"Paraguay\"],[\"Peru\"],[\"Philippines\"],[\"Poland\"],[\"Portugal\"],[\"Qatar\"],[\"Romania\"],[\"Russia\"],[\"Rwanda\"],[\"Saudi Arabia\"],[\"Senegal\"],[\"Serbia\"],[\"Sierra Leone\"],[\"Singapore\"],[\"Slovakia\"],[\"Slovenia\"],[\"Somalia\"],[\"South Africa\"],[\"South Korea\"],[\"South Sudan\"],[\"Spain\"],[\"Sri Lanka\"],[\"Sudan\"],[\"Sweden\"],[\"Switzerland\"],[\"Syria\"],[\"Taiwan\"],[\"Tajikistan\"],[\"Tanzania\"],[\"Thailand\"],[\"The Gambia\"],[\"Togo\"],[\"Trinidad and Tobago\"],[\"Tunisia\"],[\"Turkey\"],[\"Turkmenistan\"],[\"Uganda\"],[\"Ukraine\"],[\"United Arab Emirates\"],[\"United Kingdom\"],[\"United States\"],[\"Uruguay\"],[\"Uzbekistan\"],[\"Venezuela\"],[\"Vietnam\"],[\"Yemen\"],[\"Zambia\"],[\"Zimbabwe\"]],\"hovertemplate\":\"Total % change=%{x}\\u003cbr\\u003eHappiness % change=%{y}\\u003cbr\\u003eCountry name=%{customdata[0]}\\u003cbr\\u003eCluster=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"marker\":{\"color\":[2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,3,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,2,0,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,1,0,3,1,0,1,0,3,0,0,0,0,0,0,4,1,0,2,2,1],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[1.7486805025279484,-0.2771415711317802,-0.2803556016009358,-0.29610268853203203,-0.2908233830357784,-0.1838051663388988,-0.29846857351724526,-0.2999761405764106,0.16167742127108098,-0.06260002153899125,-0.20098463171663494,0.1392817430664373,-0.3000104271363369,-0.3016301529752131,-0.11223611688279349,-0.10955454158353128,-0.2662547776928578,-0.2738595223347113,-0.2997881765034021,-0.28864824499806413,-0.28926447683162304,0.3558183348912566,-0.3016301529752131,-0.17121808268912567,-0.05394905163811254,-0.30060459651783045,0.6120935611016756,-0.2252483654088956,-0.28542841285312753,0.0764172344693451,-0.29303421291452664,-0.2605167810837831,0.10161703076343673,0.2958334786882408,-0.3004152514597798,0.44202190233490135,-0.29962765839539673,-0.2993290402765205,-0.29940171107666697,-0.3011121690103172,-0.28344586932801596,-0.24086009098184719,0.36745408576396427,-0.22481280014553287,-0.3010789376844805,-0.3016301529752131,2.0728407204910444,-0.3016301529752131,-0.29159580680805564,0.12877371757264644,-0.2748474658898163,-0.3005391462349513,-0.29724361427848645,-0.2961491797965669,-0.27576717541247453,-0.1788685537451824,-0.2659479120733153,-0.2352457868517395,-0.2589500698440807,-0.24603720380993638,-0.2966453342837496,-0.26470783130751796,-0.2865607300903823,-0.15468650998321035,-0.07741306695220158,-0.30056164242706956,-0.2960268359853437,-0.29781836285482727,-0.2974259458473299,-0.28698194114329284,-0.2524193620830342,-0.24148655814011658,-0.2707544862885921,-0.053527826710488585,-0.27307604292163923,0.11426323557849871,-0.13806232761577003,-0.29630691636348094,-0.2387032097986117,-0.2916563365373058,-0.24777312123484166,0.8633880547199063,-0.2998010887438706,-0.3006251086828401,0.20563945955485258,-0.2857479892524573,-0.17500330965122224,-0.3016301529752131,3.375156113073868,-0.29066211893253396,-0.23561318613316906,-0.2978465745722575,-0.28346251524158533,-0.26046960720282136,-0.3002689879227233,-0.2794590267779951,-0.27388974145589523,-0.2980193978780444,-0.0889657199413015,-0.29473638210778735,-0.2508466905070107,-0.30060459651783045,-0.29846857351724526,0.4703468108896063,-0.2596910755334034,-0.1988141375591254,-0.23146262801795797,-0.3016301529752131,-0.23720885573743633,-0.3001681831061326,-0.2777676672076614,-0.2968036735434601,-0.27114956728132716,-0.2781301097269527,-0.30056164242706956,-0.3016301529752131,-0.28400075836115407,-0.165620499483704,-0.24312823792050342,0.14609446692246258,-0.2615228501936932,-0.24494510500491945,-0.2857406223735441,-0.2960380103737376,-0.29662987381914174,-0.28552309761067307,-0.3016301529752131,-0.29698247571180253,-0.29517741549599885,2.958170851378989,-0.2959361226561472,-0.2928886662114286,-0.3016301529752131,-0.3006251086828401,-0.3016301529752131,-0.3016301529752131,-0.295497456294264,0.8146189105506357,0.03769349941235644,0.5141628620320358,5.230346522854485,-0.2584961113207053,-0.3016301529752131,0.1466634602759581,0.2733630565863047,1.5963206481783252,-0.2309431353118144,-0.19502970613739076,-0.16814011534797532,-0.29726287157094605,-0.28638383104110454,-0.30058344991170277,9.37049571110177,0.4849575579204252,-0.2754129757097371,0.5211476019928775,-0.25638893561345677,-0.07688773619587783],\"xaxis\":\"x\",\"y\":[5.723969831736904,-0.4308640914744554,-0.29744151553539094,-0.6673836852721745,-0.4911949552216551,-0.10613178919416935,-0.6760536557554344,-0.5711981913722066,-0.6316895473402825,-0.3484817090459818,0.7252743716513095,-0.26789361633685915,-0.6605671770185191,-0.6852615333366185,1.2573057625091972,-0.4981965160464576,-0.5575373543983893,-0.2005916831535274,-0.5474272012051219,-0.5192299647441194,-0.20833258980166383,0.5959724581479902,-0.6852615333366185,0.001510490631481725,0.05654723439490518,-0.6282494637943837,0.47154291474706783,0.5086836626080169,-0.5001028888111159,-0.44596175321054377,-0.21331992974223932,-0.33459954260241026,1.0442824349585995,-0.1222855363470631,-0.3382014809218283,0.421517274957379,0.002788570575794203,-0.4795496792390291,-0.6245265587781812,-0.6607028808392607,0.4328143841905228,-0.39415086839187347,1.7567868840960768,0.19624727025258457,-0.5384156093261064,-0.6589715749132696,-0.3681854005812058,-0.6603535555051019,-0.653734822191046,-0.12661810269373439,-0.3754418597344817,-0.5558314099915723,1.5034412645514457,0.06544284230001295,-0.4908209516593632,1.5569663310969446,0.11401483446445349,-0.1372409525791208,-0.6199239722530069,-0.3822318717016743,-0.6812648659574697,1.4232202272327565,-0.114703569610789,-0.014991902635033283,-0.4763747155892503,-0.5905166527625966,-0.5147435393037005,-0.5929141429260645,-0.2780729199543126,-0.6500126983480174,-0.22113743821955023,-0.4943772830826372,0.6909602374470597,0.23442029204372025,-0.6328579810059859,0.1589263778845736,-0.5168018345331361,-0.37661880923162366,2.162726929056448,-0.685104327353883,4.636040309482921,-0.62761606156964,-0.27906888991604095,-0.6195878274001626,-0.4187423401741839,0.45198865633650126,-0.4567727587913463,-0.6852615333366185,0.9857242010214121,-0.5098726403336098,-0.009032414519926722,-0.4285668527711684,0.1931677745566199,-0.46438603740414214,-0.486678603046668,-0.502438274290752,-0.10403735919777016,-0.4334775510668013,0.12173164729100597,-0.34173127873945797,1.0232119641203592,-0.6576939771793383,-0.6510651262656415,-0.2216990728918576,0.3715173976499184,1.4746267021024373,-0.3665242139581226,-0.666450177393138,0.4504714756058742,-0.3760917059772551,-0.14339002589637292,0.07088224221154733,0.4264968370759452,-0.444551169085587,-0.42052057717334634,-0.6852615333366185,-0.26418854032513633,-0.3646700779767766,-0.18218840414958465,-0.6312507641803637,0.5026059083160416,0.0049411998107644255,1.6019408992134945,-0.38953117076740923,-0.5703112288730194,-0.5077855293288855,-0.4469928684290781,1.104459337141304,-0.5987935273055983,0.5319091230928755,-0.6093413783790952,-0.028022373517388358,-0.6852615333366185,-0.6639735647427838,-0.6057734020122777,-0.6852615333366185,-0.5314786482031403,-0.32374186119678133,0.4759663212093755,-0.2077273256097163,-0.1301686049614301,1.1426816448211854,-0.6852615333366185,0.42585997961568645,-0.085800219518655,0.21597881020885487,0.1093493156306262,0.08588007649848046,-0.5481392743415053,-0.558557507826407,-0.6213433211500388,-0.5380746066948504,-0.45648908954424633,2.1060129169517854,-0.4162996754267661,3.5577249444270675,5.365567241561238,0.9954974146090986],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\",\"size\":10,\"symbol\":\"x\"},\"mode\":\"markers\",\"name\":\"Centroid\",\"x\":[-0.20135029380661573,9.37049571110177,0.44141651191813186,3.046566971195343,-0.07882004849846927],\"y\":[-0.20135029380661573,9.37049571110177,0.44141651191813186,3.046566971195343,-0.07882004849846927],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Total % change\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Happiness % change\"}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Cluster\"}},\"colorscale\":[[0.0,\"rgb(254, 246, 181)\"],[0.16666666666666666,\"rgb(255, 221, 154)\"],[0.3333333333333333,\"rgb(255, 194, 133)\"],[0.5,\"rgb(255, 166, 121)\"],[0.6666666666666666,\"rgb(250, 138, 118)\"],[0.8333333333333334,\"rgb(241, 109, 122)\"],[1.0,\"rgb(225, 83, 131)\"]]},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60},\"title\":{\"text\":\"Scatterplot of Changes Clustering\"}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('cc879b38-76b8-42b9-9dc8-d35ceb4dafa6');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["# coropleth\n","fig = go.Figure(\n","    go.Choropleth(\n","        locations=variance_df[\"Country name\"],\n","        z=variance_df['Cluster'],\n","        locationmode='country names',\n","        colorscale='pinkyl',\n","        autocolorscale=False,\n","        colorbar=dict(\n","            tickvals=[0, 1, 2, 3, 4],\n","            ticktext=[\"0\", \"1\", \"2\", \"3\", \"4\"]\n","        ),\n","        marker_line_color=\"white\",\n","        marker_line_width=0.5,\n","        text=variance_df[['Country name', 'Total % change', 'Happiness % change']].apply(\n","            lambda row: f\"{row['Country name']}, Total % change: {row['Total % change']:.2f}, Happiness % change: {row['Happiness % change']:.3f}\",\n","            axis=1\n","        )\n","    )\n",")\n","\n","fig.update_layout(title_text='Coropleth of percentage change clustering',\n","                  geo=dict(showframe=False,\n","                           showcoastlines=False,\n","                           projection_type='equirectangular'\n","                           )\n","                  )\n","\n","fig.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"EwJU_hlvKouO","executionInfo":{"status":"ok","timestamp":1694073688011,"user_tz":-120,"elapsed":497,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"657acb51-0723-44ae-ec69-a1cb1ae0f37a"},"execution_count":48,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"884999a2-dfea-48c8-86bc-e3e7df24baad\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"884999a2-dfea-48c8-86bc-e3e7df24baad\")) {                    Plotly.newPlot(                        \"884999a2-dfea-48c8-86bc-e3e7df24baad\",                        [{\"autocolorscale\":false,\"colorbar\":{\"ticktext\":[\"0\",\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[0,1,2,3,4]},\"colorscale\":[[0.0,\"rgb(254, 246, 181)\"],[0.16666666666666666,\"rgb(255, 221, 154)\"],[0.3333333333333333,\"rgb(255, 194, 133)\"],[0.5,\"rgb(255, 166, 121)\"],[0.6666666666666666,\"rgb(250, 138, 118)\"],[0.8333333333333334,\"rgb(241, 109, 122)\"],[1.0,\"rgb(225, 83, 131)\"]],\"locationmode\":\"country names\",\"locations\":[\"Afghanistan\",\"Albania\",\"Algeria\",\"Angola\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahrain\",\"Bangladesh\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Costa Rica\",\"Cote d'Ivoire\",\"Croatia\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Finland\",\"France\",\"Gabon\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Guatemala\",\"Guinea\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Moldova\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Macedonia\",\"Norway\",\"Pakistan\",\"Panama\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Qatar\",\"Romania\",\"Russia\",\"Rwanda\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"Sudan\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"The Gambia\",\"Togo\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States\",\"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Vietnam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],\"marker\":{\"line\":{\"color\":\"white\",\"width\":0.5}},\"text\":[\"Afghanistan, Total % change: 1.75, Happiness % change: 5.724\",\"Albania, Total % change: -0.28, Happiness % change: -0.431\",\"Algeria, Total % change: -0.28, Happiness % change: -0.297\",\"Angola, Total % change: -0.30, Happiness % change: -0.667\",\"Argentina, Total % change: -0.29, Happiness % change: -0.491\",\"Armenia, Total % change: -0.18, Happiness % change: -0.106\",\"Australia, Total % change: -0.30, Happiness % change: -0.676\",\"Austria, Total % change: -0.30, Happiness % change: -0.571\",\"Azerbaijan, Total % change: 0.16, Happiness % change: -0.632\",\"Bahrain, Total % change: -0.06, Happiness % change: -0.348\",\"Bangladesh, Total % change: -0.20, Happiness % change: 0.725\",\"Belarus, Total % change: 0.14, Happiness % change: -0.268\",\"Belgium, Total % change: -0.30, Happiness % change: -0.661\",\"Belize, Total % change: -0.30, Happiness % change: -0.685\",\"Benin, Total % change: -0.11, Happiness % change: 1.257\",\"Bhutan, Total % change: -0.11, Happiness % change: -0.498\",\"Bolivia, Total % change: -0.27, Happiness % change: -0.558\",\"Bosnia and Herzegovina, Total % change: -0.27, Happiness % change: -0.201\",\"Botswana, Total % change: -0.30, Happiness % change: -0.547\",\"Brazil, Total % change: -0.29, Happiness % change: -0.519\",\"Bulgaria, Total % change: -0.29, Happiness % change: -0.208\",\"Burkina Faso, Total % change: 0.36, Happiness % change: 0.596\",\"Burundi, Total % change: -0.30, Happiness % change: -0.685\",\"Cambodia, Total % change: -0.17, Happiness % change: 0.002\",\"Cameroon, Total % change: -0.05, Happiness % change: 0.057\",\"Canada, Total % change: -0.30, Happiness % change: -0.628\",\"Central African Republic, Total % change: 0.61, Happiness % change: 0.472\",\"Chad, Total % change: -0.23, Happiness % change: 0.509\",\"Chile, Total % change: -0.29, Happiness % change: -0.500\",\"China, Total % change: 0.08, Happiness % change: -0.446\",\"Colombia, Total % change: -0.29, Happiness % change: -0.213\",\"Comoros, Total % change: -0.26, Happiness % change: -0.335\",\"Congo (Brazzaville), Total % change: 0.10, Happiness % change: 1.044\",\"Congo (Kinshasa), Total % change: 0.30, Happiness % change: -0.122\",\"Costa Rica, Total % change: -0.30, Happiness % change: -0.338\",\"Cote d'Ivoire, Total % change: 0.44, Happiness % change: 0.422\",\"Croatia, Total % change: -0.30, Happiness % change: 0.003\",\"Cyprus, Total % change: -0.30, Happiness % change: -0.480\",\"Czech Republic, Total % change: -0.30, Happiness % change: -0.625\",\"Denmark, Total % change: -0.30, Happiness % change: -0.661\",\"Dominican Republic, Total % change: -0.28, Happiness % change: 0.433\",\"Ecuador, Total % change: -0.24, Happiness % change: -0.394\",\"Egypt, Total % change: 0.37, Happiness % change: 1.757\",\"El Salvador, Total % change: -0.22, Happiness % change: 0.196\",\"Estonia, Total % change: -0.30, Happiness % change: -0.538\",\"Eswatini, Total % change: -0.30, Happiness % change: -0.659\",\"Ethiopia, Total % change: 2.07, Happiness % change: -0.368\",\"Finland, Total % change: -0.30, Happiness % change: -0.660\",\"France, Total % change: -0.29, Happiness % change: -0.654\",\"Gabon, Total % change: 0.13, Happiness % change: -0.127\",\"Georgia, Total % change: -0.27, Happiness % change: -0.375\",\"Germany, Total % change: -0.30, Happiness % change: -0.556\",\"Ghana, Total % change: -0.30, Happiness % change: 1.503\",\"Greece, Total % change: -0.30, Happiness % change: 0.065\",\"Guatemala, Total % change: -0.28, Happiness % change: -0.491\",\"Guinea, Total % change: -0.18, Happiness % change: 1.557\",\"Haiti, Total % change: -0.27, Happiness % change: 0.114\",\"Honduras, Total % change: -0.24, Happiness % change: -0.137\",\"Hong Kong, Total % change: -0.26, Happiness % change: -0.620\",\"Hungary, Total % change: -0.25, Happiness % change: -0.382\",\"Iceland, Total % change: -0.30, Happiness % change: -0.681\",\"India, Total % change: -0.26, Happiness % change: 1.423\",\"Indonesia, Total % change: -0.29, Happiness % change: -0.115\",\"Iran, Total % change: -0.15, Happiness % change: -0.015\",\"Iraq, Total % change: -0.08, Happiness % change: -0.476\",\"Ireland, Total % change: -0.30, Happiness % change: -0.591\",\"Israel, Total % change: -0.30, Happiness % change: -0.515\",\"Italy, Total % change: -0.30, Happiness % change: -0.593\",\"Jamaica, Total % change: -0.30, Happiness % change: -0.278\",\"Japan, Total % change: -0.29, Happiness % change: -0.650\",\"Jordan, Total % change: -0.25, Happiness % change: -0.221\",\"Kazakhstan, Total % change: -0.24, Happiness % change: -0.494\",\"Kenya, Total % change: -0.27, Happiness % change: 0.691\",\"Kosovo, Total % change: -0.05, Happiness % change: 0.234\",\"Kuwait, Total % change: -0.27, Happiness % change: -0.633\",\"Kyrgyzstan, Total % change: 0.11, Happiness % change: 0.159\",\"Laos, Total % change: -0.14, Happiness % change: -0.517\",\"Latvia, Total % change: -0.30, Happiness % change: -0.377\",\"Lebanon, Total % change: -0.24, Happiness % change: 2.163\",\"Lesotho, Total % change: -0.29, Happiness % change: -0.685\",\"Liberia, Total % change: -0.25, Happiness % change: 4.636\",\"Libya, Total % change: 0.86, Happiness % change: -0.628\",\"Lithuania, Total % change: -0.30, Happiness % change: -0.279\",\"Luxembourg, Total % change: -0.30, Happiness % change: -0.620\",\"Madagascar, Total % change: 0.21, Happiness % change: -0.419\",\"Malawi, Total % change: -0.29, Happiness % change: 0.452\",\"Malaysia, Total % change: -0.18, Happiness % change: -0.457\",\"Maldives, Total % change: -0.30, Happiness % change: -0.685\",\"Mali, Total % change: 3.38, Happiness % change: 0.986\",\"Malta, Total % change: -0.29, Happiness % change: -0.510\",\"Mauritania, Total % change: -0.24, Happiness % change: -0.009\",\"Mauritius, Total % change: -0.30, Happiness % change: -0.429\",\"Mexico, Total % change: -0.28, Happiness % change: 0.193\",\"Moldova, Total % change: -0.26, Happiness % change: -0.464\",\"Mongolia, Total % change: -0.30, Happiness % change: -0.487\",\"Montenegro, Total % change: -0.28, Happiness % change: -0.502\",\"Morocco, Total % change: -0.27, Happiness % change: -0.104\",\"Mozambique, Total % change: -0.30, Happiness % change: -0.433\",\"Myanmar, Total % change: -0.09, Happiness % change: 0.122\",\"Namibia, Total % change: -0.29, Happiness % change: -0.342\",\"Nepal, Total % change: -0.25, Happiness % change: 1.023\",\"Netherlands, Total % change: -0.30, Happiness % change: -0.658\",\"New Zealand, Total % change: -0.30, Happiness % change: -0.651\",\"Nicaragua, Total % change: 0.47, Happiness % change: -0.222\",\"Niger, Total % change: -0.26, Happiness % change: 0.372\",\"Nigeria, Total % change: -0.20, Happiness % change: 1.475\",\"North Macedonia, Total % change: -0.23, Happiness % change: -0.367\",\"Norway, Total % change: -0.30, Happiness % change: -0.666\",\"Pakistan, Total % change: -0.24, Happiness % change: 0.450\",\"Panama, Total % change: -0.30, Happiness % change: -0.376\",\"Paraguay, Total % change: -0.28, Happiness % change: -0.143\",\"Peru, Total % change: -0.30, Happiness % change: 0.071\",\"Philippines, Total % change: -0.27, Happiness % change: 0.426\",\"Poland, Total % change: -0.28, Happiness % change: -0.445\",\"Portugal, Total % change: -0.30, Happiness % change: -0.421\",\"Qatar, Total % change: -0.30, Happiness % change: -0.685\",\"Romania, Total % change: -0.28, Happiness % change: -0.264\",\"Russia, Total % change: -0.17, Happiness % change: -0.365\",\"Rwanda, Total % change: -0.24, Happiness % change: -0.182\",\"Saudi Arabia, Total % change: 0.15, Happiness % change: -0.631\",\"Senegal, Total % change: -0.26, Happiness % change: 0.503\",\"Serbia, Total % change: -0.24, Happiness % change: 0.005\",\"Sierra Leone, Total % change: -0.29, Happiness % change: 1.602\",\"Singapore, Total % change: -0.30, Happiness % change: -0.390\",\"Slovakia, Total % change: -0.30, Happiness % change: -0.570\",\"Slovenia, Total % change: -0.29, Happiness % change: -0.508\",\"Somalia, Total % change: -0.30, Happiness % change: -0.447\",\"South Africa, Total % change: -0.30, Happiness % change: 1.104\",\"South Korea, Total % change: -0.30, Happiness % change: -0.599\",\"South Sudan, Total % change: 2.96, Happiness % change: 0.532\",\"Spain, Total % change: -0.30, Happiness % change: -0.609\",\"Sri Lanka, Total % change: -0.29, Happiness % change: -0.028\",\"Sudan, Total % change: -0.30, Happiness % change: -0.685\",\"Sweden, Total % change: -0.30, Happiness % change: -0.664\",\"Switzerland, Total % change: -0.30, Happiness % change: -0.606\",\"Syria, Total % change: -0.30, Happiness % change: -0.685\",\"Taiwan, Total % change: -0.30, Happiness % change: -0.531\",\"Tajikistan, Total % change: 0.81, Happiness % change: -0.324\",\"Tanzania, Total % change: 0.04, Happiness % change: 0.476\",\"Thailand, Total % change: 0.51, Happiness % change: -0.208\",\"The Gambia, Total % change: 5.23, Happiness % change: -0.130\",\"Togo, Total % change: -0.26, Happiness % change: 1.143\",\"Trinidad and Tobago, Total % change: -0.30, Happiness % change: -0.685\",\"Tunisia, Total % change: 0.15, Happiness % change: 0.426\",\"Turkey, Total % change: 0.27, Happiness % change: -0.086\",\"Turkmenistan, Total % change: 1.60, Happiness % change: 0.216\",\"Uganda, Total % change: -0.23, Happiness % change: 0.109\",\"Ukraine, Total % change: -0.20, Happiness % change: 0.086\",\"United Arab Emirates, Total % change: -0.17, Happiness % change: -0.548\",\"United Kingdom, Total % change: -0.30, Happiness % change: -0.559\",\"United States, Total % change: -0.29, Happiness % change: -0.621\",\"Uruguay, Total % change: -0.30, Happiness % change: -0.538\",\"Uzbekistan, Total % change: 9.37, Happiness % change: -0.456\",\"Venezuela, Total % change: 0.48, Happiness % change: 2.106\",\"Vietnam, Total % change: -0.28, Happiness % change: -0.416\",\"Yemen, Total % change: 0.52, Happiness % change: 3.558\",\"Zambia, Total % change: -0.26, Happiness % change: 5.366\",\"Zimbabwe, Total % change: -0.08, Happiness % change: 0.995\"],\"z\":[2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,3,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,2,0,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,1,0,3,1,0,1,0,3,0,0,0,0,0,0,4,1,0,2,2,1],\"type\":\"choropleth\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Coropleth of percentage change clustering\"},\"geo\":{\"projection\":{\"type\":\"equirectangular\"},\"showframe\":false,\"showcoastlines\":false}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('884999a2-dfea-48c8-86bc-e3e7df24baad');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["From this coropleth we notice that the greates part of the world hasn't changes over years in term of Happiness and Freedom, but some exceptions exist.\n","\n","In particular the most varied countries are in the south part of the world (Sub saharian Africa and Asia).\n","\n","The most changed country is Uzbekistan in which Freedom has change a lot.\n","\n","It is followed by states in cluster 3 (Turkmenistan, Ethiopia, South Sudan and Mali): in these countries Freedom has change.\n","\n","Instead the countries in which the most varied variable is Happiness are Afghanistan, Yemen, Liberia and Zambia"],"metadata":{"id":"J9E8MbomdHW6"}},{"cell_type":"markdown","source":["Now let's perform internal evaluation of our clustering"],"metadata":{"id":"lQelGPUnfTy0"}},{"cell_type":"code","source":["silhouette_coefficient = silhouette_score(variance_df[selected_columns], remapped_clusters)\n","calinski_harabasz= metrics.calinski_harabasz_score(variance_df[selected_columns], remapped_clusters)\n","davies_bouldin = davies_bouldin_score(variance_df[selected_columns], remapped_clusters)\n","\n","print('Internal evaluation measures of percentage changes Clustering')\n","print('\\n')\n","print(\"Coefficient of Silhouette:\", silhouette_coefficient)\n","print(f'Calinski Harabasz Score: {calinski_harabasz}')\n","print(f'Davies Bouldin Score using: {davies_bouldin}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-CecjTpUfSjf","executionInfo":{"status":"ok","timestamp":1694073688012,"user_tz":-120,"elapsed":82,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"41f5f625-0bbf-42c7-d71e-62aba1bf87de"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Internal evaluation measures of percentage changes Clustering\n","\n","\n","Coefficient of Silhouette: 0.6420442900180066\n","Calinski Harabasz Score: 282.23260127712064\n","Davies Bouldin Score using: 0.4703862788436763\n"]}]},{"cell_type":"markdown","source":["## Now let's better inspect the most varied Countries\n","\n","- Uzbekistan\n","- Turkmenistan, Ethiopia, South Sudan and Mali\n","- Afghanistan, Yemen, Liberia and Zambia\n","\n","Let us analyze the most varied countries, which belong to the 'South' of the world.\n","\n","Indeed, as one might think, the countries that have varied the most are the most unstable from a socio-political point of view."],"metadata":{"id":"N3kwe64_f4fa"}},{"cell_type":"code","source":["# recalling merged dataframe\n","data_all=pd.read_csv(\"/content/drive/MyDrive/DS LAB - Colombaro, Ferretti, Fracchia, Salvatori/PROCESSED DATASETS/Happiness + Freedom/freedom_cleaned.csv\")\n","\n","data=data_all[['Country name', 'Edition',\n","               'PR',\n","               'CL',\n","               'Total', 'Total % change',\n","               'Log GDP per capita',\n","               'Social support',\n","               'Healthy life expectancy at birth',\n","               'Freedom to make life choices',\n","               'Generosity',\n","               'Perceptions of corruption',\n","               'Happiness', 'Happiness % change']]\n","\n","\n","# Countries of interest\n","most_changed_countries = [ 'Uzbekistan', 'Turkmenistan', 'Ethiopia', 'South Sudan', 'Mali',\n","                          'Afghanistan', 'Yemen', 'Liberia', 'Zambia', 'The Gambia']\n","\n","columns=['Country name','Edition','PR', 'CL', 'Total', 'Total % change',\n","               'Log GDP per capita', 'Social support', 'Healthy life expectancy at birth',\n","               'Freedom to make life choices', 'Generosity','Perceptions of corruption', 'Happiness', 'Happiness % change']\n","\n","\n","# subset\n","subset_most_changed_countries =data.loc[\n","    data['Country name'].isin(most_changed_countries), columns]\n","subset_most_changed_countries"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":475},"id":"_aPbJ_mlgHTa","executionInfo":{"status":"ok","timestamp":1694073688014,"user_tz":-120,"elapsed":79,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"8fc768d7-481a-459f-c980-967cc2c0e5d7"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Country name  Edition  PR  CL  Total  Total % change  Log GDP per capita  \\\n","0     Afghanistan     2013  11  16     27        0.000000            7.680333   \n","1     Afghanistan     2014  11  15     26        0.001372            7.670638   \n","2     Afghanistan     2015  11  13     24        0.005917            7.653833   \n","3     Afghanistan     2016  10  14     24        0.000000            7.650370   \n","4     Afghanistan     2017  10  14     24        0.000000            7.647830   \n","...           ...      ...  ..  ..    ...             ...                 ...   \n","1323       Zambia     2017  23  33     56        0.004444            8.130200   \n","1324       Zambia     2018  22  33     55        0.000319            8.139133   \n","1325       Zambia     2019  22  32     54        0.000331            8.123367   \n","1326       Zambia     2020  22  32     54        0.000000            8.065784   \n","1327       Zambia     2021  20  32     52        0.001372            8.082337   \n","\n","      Social support  Healthy life expectancy at birth  \\\n","0           0.483552                         52.000000   \n","1           0.525568                         52.299999   \n","2           0.528597                         52.599998   \n","3           0.559072                         52.924999   \n","4           0.490880                         53.250000   \n","...              ...                               ...   \n","1323        0.743754                         53.549999   \n","1324        0.717720                         53.974998   \n","1325        0.637894                         54.400002   \n","1326        0.766872                         54.825001   \n","1327        0.619071                         55.250000   \n","\n","      Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","0                         0.577955    0.062666                   0.823204   \n","1                         0.508514    0.105755                   0.871242   \n","2                         0.388928    0.081652                   0.880638   \n","3                         0.522566    0.043916                   0.793246   \n","4                         0.427011   -0.119410                   0.954393   \n","...                            ...         ...                        ...   \n","1323                      0.823169    0.140128                   0.739541   \n","1324                      0.790626    0.048026                   0.810731   \n","1325                      0.811040    0.077648                   0.831956   \n","1326                      0.750422    0.057657                   0.809750   \n","1327                      0.832574    0.141230                   0.824031   \n","\n","      Happiness  Happiness % change  \n","0      3.572100            0.000000  \n","1      3.130896            0.015256  \n","2      3.982855            0.074046  \n","3      4.220169            0.003550  \n","4      2.661718            0.136372  \n","...         ...                 ...  \n","1323   3.932777            0.009102  \n","1324   4.041488            0.000764  \n","1325   3.306797            0.033047  \n","1326   4.837992            0.214411  \n","1327   3.082155            0.131716  \n","\n","[76 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-47660f52-4b3e-4c09-821a-d4248f9c62c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>2013</td>\n","      <td>11</td>\n","      <td>16</td>\n","      <td>27</td>\n","      <td>0.000000</td>\n","      <td>7.680333</td>\n","      <td>0.483552</td>\n","      <td>52.000000</td>\n","      <td>0.577955</td>\n","      <td>0.062666</td>\n","      <td>0.823204</td>\n","      <td>3.572100</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Afghanistan</td>\n","      <td>2014</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>26</td>\n","      <td>0.001372</td>\n","      <td>7.670638</td>\n","      <td>0.525568</td>\n","      <td>52.299999</td>\n","      <td>0.508514</td>\n","      <td>0.105755</td>\n","      <td>0.871242</td>\n","      <td>3.130896</td>\n","      <td>0.015256</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Afghanistan</td>\n","      <td>2015</td>\n","      <td>11</td>\n","      <td>13</td>\n","      <td>24</td>\n","      <td>0.005917</td>\n","      <td>7.653833</td>\n","      <td>0.528597</td>\n","      <td>52.599998</td>\n","      <td>0.388928</td>\n","      <td>0.081652</td>\n","      <td>0.880638</td>\n","      <td>3.982855</td>\n","      <td>0.074046</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Afghanistan</td>\n","      <td>2016</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>24</td>\n","      <td>0.000000</td>\n","      <td>7.650370</td>\n","      <td>0.559072</td>\n","      <td>52.924999</td>\n","      <td>0.522566</td>\n","      <td>0.043916</td>\n","      <td>0.793246</td>\n","      <td>4.220169</td>\n","      <td>0.003550</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Afghanistan</td>\n","      <td>2017</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>24</td>\n","      <td>0.000000</td>\n","      <td>7.647830</td>\n","      <td>0.490880</td>\n","      <td>53.250000</td>\n","      <td>0.427011</td>\n","      <td>-0.119410</td>\n","      <td>0.954393</td>\n","      <td>2.661718</td>\n","      <td>0.136372</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1323</th>\n","      <td>Zambia</td>\n","      <td>2017</td>\n","      <td>23</td>\n","      <td>33</td>\n","      <td>56</td>\n","      <td>0.004444</td>\n","      <td>8.130200</td>\n","      <td>0.743754</td>\n","      <td>53.549999</td>\n","      <td>0.823169</td>\n","      <td>0.140128</td>\n","      <td>0.739541</td>\n","      <td>3.932777</td>\n","      <td>0.009102</td>\n","    </tr>\n","    <tr>\n","      <th>1324</th>\n","      <td>Zambia</td>\n","      <td>2018</td>\n","      <td>22</td>\n","      <td>33</td>\n","      <td>55</td>\n","      <td>0.000319</td>\n","      <td>8.139133</td>\n","      <td>0.717720</td>\n","      <td>53.974998</td>\n","      <td>0.790626</td>\n","      <td>0.048026</td>\n","      <td>0.810731</td>\n","      <td>4.041488</td>\n","      <td>0.000764</td>\n","    </tr>\n","    <tr>\n","      <th>1325</th>\n","      <td>Zambia</td>\n","      <td>2019</td>\n","      <td>22</td>\n","      <td>32</td>\n","      <td>54</td>\n","      <td>0.000331</td>\n","      <td>8.123367</td>\n","      <td>0.637894</td>\n","      <td>54.400002</td>\n","      <td>0.811040</td>\n","      <td>0.077648</td>\n","      <td>0.831956</td>\n","      <td>3.306797</td>\n","      <td>0.033047</td>\n","    </tr>\n","    <tr>\n","      <th>1326</th>\n","      <td>Zambia</td>\n","      <td>2020</td>\n","      <td>22</td>\n","      <td>32</td>\n","      <td>54</td>\n","      <td>0.000000</td>\n","      <td>8.065784</td>\n","      <td>0.766872</td>\n","      <td>54.825001</td>\n","      <td>0.750422</td>\n","      <td>0.057657</td>\n","      <td>0.809750</td>\n","      <td>4.837992</td>\n","      <td>0.214411</td>\n","    </tr>\n","    <tr>\n","      <th>1327</th>\n","      <td>Zambia</td>\n","      <td>2021</td>\n","      <td>20</td>\n","      <td>32</td>\n","      <td>52</td>\n","      <td>0.001372</td>\n","      <td>8.082337</td>\n","      <td>0.619071</td>\n","      <td>55.250000</td>\n","      <td>0.832574</td>\n","      <td>0.141230</td>\n","      <td>0.824031</td>\n","      <td>3.082155</td>\n","      <td>0.131716</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>76 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47660f52-4b3e-4c09-821a-d4248f9c62c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47660f52-4b3e-4c09-821a-d4248f9c62c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47660f52-4b3e-4c09-821a-d4248f9c62c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d413eaed-bc49-441d-b2d3-19f581203e2a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d413eaed-bc49-441d-b2d3-19f581203e2a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d413eaed-bc49-441d-b2d3-19f581203e2a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["# cluster 4: most varied in Freedom score (variable Total)\n","subset_most_changed_countries[subset_most_changed_countries['Country name']=='Uzbekistan']"],"metadata":{"id":"vC6IIUoWiGZN","colab":{"base_uri":"https://localhost:8080/","height":415},"executionInfo":{"status":"ok","timestamp":1694073688016,"user_tz":-120,"elapsed":78,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"cb6dc5b6-eeb4-4199-cb85-37c091500bff"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Country name  Edition  PR  CL  Total  Total % change  Log GDP per capita  \\\n","1282   Uzbekistan     2013   0   4      4        0.000000            8.662359   \n","1283   Uzbekistan     2014   0   4      4        0.000000            8.711969   \n","1284   Uzbekistan     2015   0   4      4        0.000000            8.764228   \n","1285   Uzbekistan     2016   0   3      3        0.062500            8.804467   \n","1286   Uzbekistan     2017   0   3      3        0.000000            8.830647   \n","1287   Uzbekistan     2018   1   6      7        1.777778            8.865442   \n","1288   Uzbekistan     2019   1   8      9        0.081633            8.902204   \n","1289   Uzbekistan     2020   2   8     10        0.012346            8.901669   \n","1290   Uzbekistan     2021   2   9     11        0.010000            8.953489   \n","1291   Uzbekistan     2022   2   9     11        0.000000            8.989866   \n","\n","      Social support  Healthy life expectancy at birth  \\\n","1282        0.962781                         63.020000   \n","1283        0.952406                         63.259998   \n","1284        0.968225                         63.500000   \n","1285        0.945102                         63.799999   \n","1286        0.942131                         64.099998   \n","1287        0.920821                         64.400002   \n","1288        0.915276                         64.699997   \n","1289        0.849565                         65.000000   \n","1290        0.895504                         65.300003   \n","1291        0.878923                         65.599998   \n","\n","      Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","1282                      0.949540   -0.040500                   0.433932   \n","1283                      0.954481    0.055038                   0.536461   \n","1284                      0.979937    0.368485                   0.470917   \n","1285                      0.983803    0.202085                   0.539662   \n","1286                      0.985178    0.116439                   0.464642   \n","1287                      0.969898    0.311533                   0.520360   \n","1288                      0.970295    0.298115                   0.511197   \n","1289                      0.928216    0.193077                   0.642044   \n","1290                      0.927415    0.186012                   0.661562   \n","1291                      0.959019    0.308951                   0.615844   \n","\n","      Happiness  Happiness % change  \n","1282   5.939986            0.000000  \n","1283   6.049212            0.000338  \n","1284   5.972364            0.000161  \n","1285   5.892539            0.000179  \n","1286   6.421448            0.008057  \n","1287   6.205460            0.001131  \n","1288   6.154049            0.000069  \n","1289   5.841930            0.002572  \n","1290   6.185308            0.003455  \n","1291   6.016239            0.000747  "],"text/html":["\n","  <div id=\"df-bcb0c2f6-869d-49f1-848a-466f1564d3e6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1282</th>\n","      <td>Uzbekistan</td>\n","      <td>2013</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0.000000</td>\n","      <td>8.662359</td>\n","      <td>0.962781</td>\n","      <td>63.020000</td>\n","      <td>0.949540</td>\n","      <td>-0.040500</td>\n","      <td>0.433932</td>\n","      <td>5.939986</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>Uzbekistan</td>\n","      <td>2014</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0.000000</td>\n","      <td>8.711969</td>\n","      <td>0.952406</td>\n","      <td>63.259998</td>\n","      <td>0.954481</td>\n","      <td>0.055038</td>\n","      <td>0.536461</td>\n","      <td>6.049212</td>\n","      <td>0.000338</td>\n","    </tr>\n","    <tr>\n","      <th>1284</th>\n","      <td>Uzbekistan</td>\n","      <td>2015</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0.000000</td>\n","      <td>8.764228</td>\n","      <td>0.968225</td>\n","      <td>63.500000</td>\n","      <td>0.979937</td>\n","      <td>0.368485</td>\n","      <td>0.470917</td>\n","      <td>5.972364</td>\n","      <td>0.000161</td>\n","    </tr>\n","    <tr>\n","      <th>1285</th>\n","      <td>Uzbekistan</td>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0.062500</td>\n","      <td>8.804467</td>\n","      <td>0.945102</td>\n","      <td>63.799999</td>\n","      <td>0.983803</td>\n","      <td>0.202085</td>\n","      <td>0.539662</td>\n","      <td>5.892539</td>\n","      <td>0.000179</td>\n","    </tr>\n","    <tr>\n","      <th>1286</th>\n","      <td>Uzbekistan</td>\n","      <td>2017</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0.000000</td>\n","      <td>8.830647</td>\n","      <td>0.942131</td>\n","      <td>64.099998</td>\n","      <td>0.985178</td>\n","      <td>0.116439</td>\n","      <td>0.464642</td>\n","      <td>6.421448</td>\n","      <td>0.008057</td>\n","    </tr>\n","    <tr>\n","      <th>1287</th>\n","      <td>Uzbekistan</td>\n","      <td>2018</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>1.777778</td>\n","      <td>8.865442</td>\n","      <td>0.920821</td>\n","      <td>64.400002</td>\n","      <td>0.969898</td>\n","      <td>0.311533</td>\n","      <td>0.520360</td>\n","      <td>6.205460</td>\n","      <td>0.001131</td>\n","    </tr>\n","    <tr>\n","      <th>1288</th>\n","      <td>Uzbekistan</td>\n","      <td>2019</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>0.081633</td>\n","      <td>8.902204</td>\n","      <td>0.915276</td>\n","      <td>64.699997</td>\n","      <td>0.970295</td>\n","      <td>0.298115</td>\n","      <td>0.511197</td>\n","      <td>6.154049</td>\n","      <td>0.000069</td>\n","    </tr>\n","    <tr>\n","      <th>1289</th>\n","      <td>Uzbekistan</td>\n","      <td>2020</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>0.012346</td>\n","      <td>8.901669</td>\n","      <td>0.849565</td>\n","      <td>65.000000</td>\n","      <td>0.928216</td>\n","      <td>0.193077</td>\n","      <td>0.642044</td>\n","      <td>5.841930</td>\n","      <td>0.002572</td>\n","    </tr>\n","    <tr>\n","      <th>1290</th>\n","      <td>Uzbekistan</td>\n","      <td>2021</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>0.010000</td>\n","      <td>8.953489</td>\n","      <td>0.895504</td>\n","      <td>65.300003</td>\n","      <td>0.927415</td>\n","      <td>0.186012</td>\n","      <td>0.661562</td>\n","      <td>6.185308</td>\n","      <td>0.003455</td>\n","    </tr>\n","    <tr>\n","      <th>1291</th>\n","      <td>Uzbekistan</td>\n","      <td>2022</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>0.000000</td>\n","      <td>8.989866</td>\n","      <td>0.878923</td>\n","      <td>65.599998</td>\n","      <td>0.959019</td>\n","      <td>0.308951</td>\n","      <td>0.615844</td>\n","      <td>6.016239</td>\n","      <td>0.000747</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bcb0c2f6-869d-49f1-848a-466f1564d3e6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bcb0c2f6-869d-49f1-848a-466f1564d3e6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bcb0c2f6-869d-49f1-848a-466f1564d3e6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1746b9c8-f5a4-4861-8b47-fb68dae70831\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1746b9c8-f5a4-4861-8b47-fb68dae70831')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1746b9c8-f5a4-4861-8b47-fb68dae70831 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["Speaking of Uzbekistan and contrary to what you think, the country that is most varied has varied positively gaining many points with regard to civil rights.\n","\n","Political rights have also improved with a gain, however, of only 2 points.\n","\n","As you can see, the big change in terms of improvement was made between 2017 and 2018, the year in which civil rights were improved.\n","\n","Happiness has also improved over time, although less proportionally with a gain both in terms of life expectancy and a gain in terms of trust in the government."],"metadata":{"id":"gSc1cRxdjNJg"}},{"cell_type":"code","source":["# cluster 3: marked change in Freedom score, less in Happiness.\n","subset_most_changed_countries[subset_most_changed_countries['Country name']=='Mali']"],"metadata":{"id":"ugQEa9R2jFJj","colab":{"base_uri":"https://localhost:8080/","height":415},"executionInfo":{"status":"ok","timestamp":1694073688018,"user_tz":-120,"elapsed":78,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"2b74c48b-36b6-4bdd-b863-ee9d4b560e6c"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Country name  Edition  PR  CL  Total  Total % change  Log GDP per capita  \\\n","739         Mali     2013   5  19     24        0.000000            7.565345   \n","740         Mali     2014  17  27     44        0.694444            7.602088   \n","741         Mali     2015  17  27     44        0.000000            7.630509   \n","742         Mali     2016  17  28     45        0.000517            7.655479   \n","743         Mali     2017  17  28     45        0.000000            7.675010   \n","744         Mali     2018  17  27     44        0.000494            7.689634   \n","745         Mali     2019  18  26     44        0.000000            7.704833   \n","746         Mali     2020  17  24     41        0.004649            7.660975   \n","747         Mali     2021   9  24     33        0.038073            7.659465   \n","748         Mali     2022   8  24     32        0.000918            7.645282   \n","\n","     Social support  Healthy life expectancy at birth  \\\n","739        0.819691                         52.320000   \n","740        0.843123                         52.660000   \n","741        0.830189                         53.000000   \n","742        0.836255                         53.400002   \n","743        0.741359                         53.799999   \n","744        0.691859                         54.200001   \n","745        0.754558                         54.599998   \n","746        0.567915                         55.000000   \n","747        0.573394                         55.400002   \n","748        0.641625                         55.799999   \n","\n","     Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","739                      0.664711   -0.052537                   0.754807   \n","740                      0.651514   -0.036473                   0.657931   \n","741                      0.633754   -0.066475                   0.800047   \n","742                      0.696007   -0.068685                   0.862327   \n","743                      0.753213   -0.068084                   0.862655   \n","744                      0.737205   -0.032464                   0.793091   \n","745                      0.670405   -0.036142                   0.846340   \n","746                      0.645314   -0.065397                   0.894637   \n","747                      0.672789   -0.000231                   0.901567   \n","748                      0.817643   -0.019203                   0.745647   \n","\n","     Happiness  Happiness % change  \n","739   3.676277            0.000000  \n","740   3.974714            0.006590  \n","741   4.582098            0.023352  \n","742   4.016028            0.015262  \n","743   4.741850            0.032664  \n","744   4.415730            0.004730  \n","745   4.987992            0.016795  \n","746   4.269474            0.020750  \n","747   4.113096            0.001342  \n","748   4.210548            0.000561  "],"text/html":["\n","  <div id=\"df-c1502713-ca99-44c8-ac83-b643c227b46e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>739</th>\n","      <td>Mali</td>\n","      <td>2013</td>\n","      <td>5</td>\n","      <td>19</td>\n","      <td>24</td>\n","      <td>0.000000</td>\n","      <td>7.565345</td>\n","      <td>0.819691</td>\n","      <td>52.320000</td>\n","      <td>0.664711</td>\n","      <td>-0.052537</td>\n","      <td>0.754807</td>\n","      <td>3.676277</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>740</th>\n","      <td>Mali</td>\n","      <td>2014</td>\n","      <td>17</td>\n","      <td>27</td>\n","      <td>44</td>\n","      <td>0.694444</td>\n","      <td>7.602088</td>\n","      <td>0.843123</td>\n","      <td>52.660000</td>\n","      <td>0.651514</td>\n","      <td>-0.036473</td>\n","      <td>0.657931</td>\n","      <td>3.974714</td>\n","      <td>0.006590</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>Mali</td>\n","      <td>2015</td>\n","      <td>17</td>\n","      <td>27</td>\n","      <td>44</td>\n","      <td>0.000000</td>\n","      <td>7.630509</td>\n","      <td>0.830189</td>\n","      <td>53.000000</td>\n","      <td>0.633754</td>\n","      <td>-0.066475</td>\n","      <td>0.800047</td>\n","      <td>4.582098</td>\n","      <td>0.023352</td>\n","    </tr>\n","    <tr>\n","      <th>742</th>\n","      <td>Mali</td>\n","      <td>2016</td>\n","      <td>17</td>\n","      <td>28</td>\n","      <td>45</td>\n","      <td>0.000517</td>\n","      <td>7.655479</td>\n","      <td>0.836255</td>\n","      <td>53.400002</td>\n","      <td>0.696007</td>\n","      <td>-0.068685</td>\n","      <td>0.862327</td>\n","      <td>4.016028</td>\n","      <td>0.015262</td>\n","    </tr>\n","    <tr>\n","      <th>743</th>\n","      <td>Mali</td>\n","      <td>2017</td>\n","      <td>17</td>\n","      <td>28</td>\n","      <td>45</td>\n","      <td>0.000000</td>\n","      <td>7.675010</td>\n","      <td>0.741359</td>\n","      <td>53.799999</td>\n","      <td>0.753213</td>\n","      <td>-0.068084</td>\n","      <td>0.862655</td>\n","      <td>4.741850</td>\n","      <td>0.032664</td>\n","    </tr>\n","    <tr>\n","      <th>744</th>\n","      <td>Mali</td>\n","      <td>2018</td>\n","      <td>17</td>\n","      <td>27</td>\n","      <td>44</td>\n","      <td>0.000494</td>\n","      <td>7.689634</td>\n","      <td>0.691859</td>\n","      <td>54.200001</td>\n","      <td>0.737205</td>\n","      <td>-0.032464</td>\n","      <td>0.793091</td>\n","      <td>4.415730</td>\n","      <td>0.004730</td>\n","    </tr>\n","    <tr>\n","      <th>745</th>\n","      <td>Mali</td>\n","      <td>2019</td>\n","      <td>18</td>\n","      <td>26</td>\n","      <td>44</td>\n","      <td>0.000000</td>\n","      <td>7.704833</td>\n","      <td>0.754558</td>\n","      <td>54.599998</td>\n","      <td>0.670405</td>\n","      <td>-0.036142</td>\n","      <td>0.846340</td>\n","      <td>4.987992</td>\n","      <td>0.016795</td>\n","    </tr>\n","    <tr>\n","      <th>746</th>\n","      <td>Mali</td>\n","      <td>2020</td>\n","      <td>17</td>\n","      <td>24</td>\n","      <td>41</td>\n","      <td>0.004649</td>\n","      <td>7.660975</td>\n","      <td>0.567915</td>\n","      <td>55.000000</td>\n","      <td>0.645314</td>\n","      <td>-0.065397</td>\n","      <td>0.894637</td>\n","      <td>4.269474</td>\n","      <td>0.020750</td>\n","    </tr>\n","    <tr>\n","      <th>747</th>\n","      <td>Mali</td>\n","      <td>2021</td>\n","      <td>9</td>\n","      <td>24</td>\n","      <td>33</td>\n","      <td>0.038073</td>\n","      <td>7.659465</td>\n","      <td>0.573394</td>\n","      <td>55.400002</td>\n","      <td>0.672789</td>\n","      <td>-0.000231</td>\n","      <td>0.901567</td>\n","      <td>4.113096</td>\n","      <td>0.001342</td>\n","    </tr>\n","    <tr>\n","      <th>748</th>\n","      <td>Mali</td>\n","      <td>2022</td>\n","      <td>8</td>\n","      <td>24</td>\n","      <td>32</td>\n","      <td>0.000918</td>\n","      <td>7.645282</td>\n","      <td>0.641625</td>\n","      <td>55.799999</td>\n","      <td>0.817643</td>\n","      <td>-0.019203</td>\n","      <td>0.745647</td>\n","      <td>4.210548</td>\n","      <td>0.000561</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1502713-ca99-44c8-ac83-b643c227b46e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c1502713-ca99-44c8-ac83-b643c227b46e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c1502713-ca99-44c8-ac83-b643c227b46e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5add7d29-8db6-44d4-83e5-e4121a58da52\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5add7d29-8db6-44d4-83e5-e4121a58da52')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5add7d29-8db6-44d4-83e5-e4121a58da52 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["subset_most_changed_countries[subset_most_changed_countries['Country name']=='Turkmenistan']"],"metadata":{"id":"n5QkjlCNl7Rq","colab":{"base_uri":"https://localhost:8080/","height":341},"executionInfo":{"status":"ok","timestamp":1694073688020,"user_tz":-120,"elapsed":75,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"3f9d8c6b-7dc8-4954-ab27-3a7979fe7119"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Country name  Edition  PR  CL  Total  Total % change  \\\n","1216  Turkmenistan     2013   1   6      7        0.000000   \n","1217  Turkmenistan     2014   1   6      7        0.000000   \n","1218  Turkmenistan     2015   1   5      6        0.020408   \n","1219  Turkmenistan     2016   0   4      4        0.111111   \n","1220  Turkmenistan     2017   0   4      4        0.000000   \n","1221  Turkmenistan     2018   0   4      4        0.000000   \n","1222  Turkmenistan     2019   0   2      2        0.250000   \n","\n","      Log GDP per capita  Social support  Healthy life expectancy at birth  \\\n","1216            9.312131        0.845733                         61.060001   \n","1217            9.391799        0.908927                         61.380001   \n","1218            9.436702        0.960158                         61.700001   \n","1219            9.479300        0.929032                         61.799999   \n","1220            9.525408        0.908455                         61.900002   \n","1221            9.569492        0.984489                         62.000000   \n","1222            9.615313        0.981502                         62.099998   \n","\n","      Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","1216                      0.704529   -0.071969                        NaN   \n","1217                      0.804678    0.031376                        NaN   \n","1218                      0.701358    0.092152                        NaN   \n","1219                      0.748504    0.003984                        NaN   \n","1220                      0.720399    0.065374                        NaN   \n","1221                      0.857774    0.258955                        NaN   \n","1222                      0.891527    0.284132                        NaN   \n","\n","      Happiness  Happiness % change  \n","1216   5.391763        0.000000e+00  \n","1217   5.787379        5.383780e-03  \n","1218   5.791460        4.971883e-07  \n","1219   5.887052        2.724350e-04  \n","1220   5.229149        1.248900e-02  \n","1221   4.620602        1.354336e-02  \n","1222   5.474300        3.413593e-02  "],"text/html":["\n","  <div id=\"df-4eb681c0-f7a8-42c2-8fe2-904dbbdba8dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1216</th>\n","      <td>Turkmenistan</td>\n","      <td>2013</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>0.000000</td>\n","      <td>9.312131</td>\n","      <td>0.845733</td>\n","      <td>61.060001</td>\n","      <td>0.704529</td>\n","      <td>-0.071969</td>\n","      <td>NaN</td>\n","      <td>5.391763</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>1217</th>\n","      <td>Turkmenistan</td>\n","      <td>2014</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>0.000000</td>\n","      <td>9.391799</td>\n","      <td>0.908927</td>\n","      <td>61.380001</td>\n","      <td>0.804678</td>\n","      <td>0.031376</td>\n","      <td>NaN</td>\n","      <td>5.787379</td>\n","      <td>5.383780e-03</td>\n","    </tr>\n","    <tr>\n","      <th>1218</th>\n","      <td>Turkmenistan</td>\n","      <td>2015</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>0.020408</td>\n","      <td>9.436702</td>\n","      <td>0.960158</td>\n","      <td>61.700001</td>\n","      <td>0.701358</td>\n","      <td>0.092152</td>\n","      <td>NaN</td>\n","      <td>5.791460</td>\n","      <td>4.971883e-07</td>\n","    </tr>\n","    <tr>\n","      <th>1219</th>\n","      <td>Turkmenistan</td>\n","      <td>2016</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0.111111</td>\n","      <td>9.479300</td>\n","      <td>0.929032</td>\n","      <td>61.799999</td>\n","      <td>0.748504</td>\n","      <td>0.003984</td>\n","      <td>NaN</td>\n","      <td>5.887052</td>\n","      <td>2.724350e-04</td>\n","    </tr>\n","    <tr>\n","      <th>1220</th>\n","      <td>Turkmenistan</td>\n","      <td>2017</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0.000000</td>\n","      <td>9.525408</td>\n","      <td>0.908455</td>\n","      <td>61.900002</td>\n","      <td>0.720399</td>\n","      <td>0.065374</td>\n","      <td>NaN</td>\n","      <td>5.229149</td>\n","      <td>1.248900e-02</td>\n","    </tr>\n","    <tr>\n","      <th>1221</th>\n","      <td>Turkmenistan</td>\n","      <td>2018</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>0.000000</td>\n","      <td>9.569492</td>\n","      <td>0.984489</td>\n","      <td>62.000000</td>\n","      <td>0.857774</td>\n","      <td>0.258955</td>\n","      <td>NaN</td>\n","      <td>4.620602</td>\n","      <td>1.354336e-02</td>\n","    </tr>\n","    <tr>\n","      <th>1222</th>\n","      <td>Turkmenistan</td>\n","      <td>2019</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.250000</td>\n","      <td>9.615313</td>\n","      <td>0.981502</td>\n","      <td>62.099998</td>\n","      <td>0.891527</td>\n","      <td>0.284132</td>\n","      <td>NaN</td>\n","      <td>5.474300</td>\n","      <td>3.413593e-02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4eb681c0-f7a8-42c2-8fe2-904dbbdba8dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4eb681c0-f7a8-42c2-8fe2-904dbbdba8dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4eb681c0-f7a8-42c2-8fe2-904dbbdba8dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b5e72097-bfe8-4bb0-b689-9c6968cfc767\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5e72097-bfe8-4bb0-b689-9c6968cfc767')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b5e72097-bfe8-4bb0-b689-9c6968cfc767 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["subset_most_changed_countries[subset_most_changed_countries['Country name']=='Ethiopia']"],"metadata":{"id":"K3oTBn2WhZ_r","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1694073688022,"user_tz":-120,"elapsed":74,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"fc962319-9a77-49f7-99d1-155a68ba9782"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Country name  Edition  PR  CL  Total  Total % change  Log GDP per capita  \\\n","379     Ethiopia     2013   7  11     18        0.000000            7.325243   \n","380     Ethiopia     2014   7  11     18        0.000000            7.395838   \n","381     Ethiopia     2015   7  11     18        0.000000            7.467755   \n","382     Ethiopia     2016   4  11     15        0.027778            7.530742   \n","383     Ethiopia     2017   4   8     12        0.040000            7.594869   \n","384     Ethiopia     2018   4   8     12        0.000000            7.634074   \n","385     Ethiopia     2019   7  12     19        0.340278            7.687841   \n","386     Ethiopia     2020  10  14     24        0.069252            7.720123   \n","387     Ethiopia     2022  12  11     23        0.000000            7.757499   \n","\n","     Social support  Healthy life expectancy at birth  \\\n","379        0.602482                         56.980000   \n","380        0.640452                         57.639999   \n","381        0.625597                         58.299999   \n","382        0.718719                         58.700001   \n","383        0.733540                         59.099998   \n","384        0.740155                         59.500000   \n","385        0.748058                         59.900002   \n","386        0.823138                         60.299999   \n","387        0.740168                         61.099998   \n","\n","     Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","379                      0.706796   -0.007848                   0.750478   \n","380                      0.693559    0.080013                   0.701800   \n","381                      0.802643    0.112379                   0.567027   \n","382                      0.744308    0.038057                   0.702881   \n","383                      0.717101    0.001010                   0.756899   \n","384                      0.740343    0.039048                   0.799466   \n","385                      0.753516    0.052132                   0.731845   \n","386                      0.768694    0.186139                   0.783822   \n","387                      0.673659    0.361245                   0.793105   \n","\n","     Happiness  Happiness % change  \n","379   4.444827            0.000000  \n","380   4.506647            0.000193  \n","381   4.573155            0.000218  \n","382   4.297849            0.003624  \n","383   4.180315            0.000748  \n","384   4.379262            0.002265  \n","385   4.099555            0.004079  \n","386   4.549220            0.012031  \n","387   3.628072            0.000000  "],"text/html":["\n","  <div id=\"df-9c3857bd-43fc-4436-9153-3d6175e121ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>379</th>\n","      <td>Ethiopia</td>\n","      <td>2013</td>\n","      <td>7</td>\n","      <td>11</td>\n","      <td>18</td>\n","      <td>0.000000</td>\n","      <td>7.325243</td>\n","      <td>0.602482</td>\n","      <td>56.980000</td>\n","      <td>0.706796</td>\n","      <td>-0.007848</td>\n","      <td>0.750478</td>\n","      <td>4.444827</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>380</th>\n","      <td>Ethiopia</td>\n","      <td>2014</td>\n","      <td>7</td>\n","      <td>11</td>\n","      <td>18</td>\n","      <td>0.000000</td>\n","      <td>7.395838</td>\n","      <td>0.640452</td>\n","      <td>57.639999</td>\n","      <td>0.693559</td>\n","      <td>0.080013</td>\n","      <td>0.701800</td>\n","      <td>4.506647</td>\n","      <td>0.000193</td>\n","    </tr>\n","    <tr>\n","      <th>381</th>\n","      <td>Ethiopia</td>\n","      <td>2015</td>\n","      <td>7</td>\n","      <td>11</td>\n","      <td>18</td>\n","      <td>0.000000</td>\n","      <td>7.467755</td>\n","      <td>0.625597</td>\n","      <td>58.299999</td>\n","      <td>0.802643</td>\n","      <td>0.112379</td>\n","      <td>0.567027</td>\n","      <td>4.573155</td>\n","      <td>0.000218</td>\n","    </tr>\n","    <tr>\n","      <th>382</th>\n","      <td>Ethiopia</td>\n","      <td>2016</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>0.027778</td>\n","      <td>7.530742</td>\n","      <td>0.718719</td>\n","      <td>58.700001</td>\n","      <td>0.744308</td>\n","      <td>0.038057</td>\n","      <td>0.702881</td>\n","      <td>4.297849</td>\n","      <td>0.003624</td>\n","    </tr>\n","    <tr>\n","      <th>383</th>\n","      <td>Ethiopia</td>\n","      <td>2017</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>12</td>\n","      <td>0.040000</td>\n","      <td>7.594869</td>\n","      <td>0.733540</td>\n","      <td>59.099998</td>\n","      <td>0.717101</td>\n","      <td>0.001010</td>\n","      <td>0.756899</td>\n","      <td>4.180315</td>\n","      <td>0.000748</td>\n","    </tr>\n","    <tr>\n","      <th>384</th>\n","      <td>Ethiopia</td>\n","      <td>2018</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>12</td>\n","      <td>0.000000</td>\n","      <td>7.634074</td>\n","      <td>0.740155</td>\n","      <td>59.500000</td>\n","      <td>0.740343</td>\n","      <td>0.039048</td>\n","      <td>0.799466</td>\n","      <td>4.379262</td>\n","      <td>0.002265</td>\n","    </tr>\n","    <tr>\n","      <th>385</th>\n","      <td>Ethiopia</td>\n","      <td>2019</td>\n","      <td>7</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>0.340278</td>\n","      <td>7.687841</td>\n","      <td>0.748058</td>\n","      <td>59.900002</td>\n","      <td>0.753516</td>\n","      <td>0.052132</td>\n","      <td>0.731845</td>\n","      <td>4.099555</td>\n","      <td>0.004079</td>\n","    </tr>\n","    <tr>\n","      <th>386</th>\n","      <td>Ethiopia</td>\n","      <td>2020</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>24</td>\n","      <td>0.069252</td>\n","      <td>7.720123</td>\n","      <td>0.823138</td>\n","      <td>60.299999</td>\n","      <td>0.768694</td>\n","      <td>0.186139</td>\n","      <td>0.783822</td>\n","      <td>4.549220</td>\n","      <td>0.012031</td>\n","    </tr>\n","    <tr>\n","      <th>387</th>\n","      <td>Ethiopia</td>\n","      <td>2022</td>\n","      <td>12</td>\n","      <td>11</td>\n","      <td>23</td>\n","      <td>0.000000</td>\n","      <td>7.757499</td>\n","      <td>0.740168</td>\n","      <td>61.099998</td>\n","      <td>0.673659</td>\n","      <td>0.361245</td>\n","      <td>0.793105</td>\n","      <td>3.628072</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c3857bd-43fc-4436-9153-3d6175e121ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c3857bd-43fc-4436-9153-3d6175e121ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c3857bd-43fc-4436-9153-3d6175e121ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3cc0e9e0-43d8-400e-92e3-fdedcd92b487\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3cc0e9e0-43d8-400e-92e3-fdedcd92b487')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3cc0e9e0-43d8-400e-92e3-fdedcd92b487 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["The countries analyzed are part of the third cluster, ie the one in which the indicator of Freedom has changed the most compared to that of Happiness.\n","We can see how this cluster contains both countries that have changed their situation positively (such as Ethiopia) and negatively as in the case of Mali and Turkmenistan."],"metadata":{"id":"ho-UoYuqhuQr"}},{"cell_type":"code","source":["# cluster 2: marjed change in Happiness score, less in Freedom.\n","subset_most_changed_countries[subset_most_changed_countries['Country name']=='Afghanistan']"],"metadata":{"id":"QTAqKqTrm60m","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1694073688025,"user_tz":-120,"elapsed":73,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"392c1143-b985-463d-cdf9-7b5e624ca316"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Country name  Edition  PR  CL  Total  Total % change  Log GDP per capita  \\\n","0  Afghanistan     2013  11  16     27        0.000000            7.680333   \n","1  Afghanistan     2014  11  15     26        0.001372            7.670638   \n","2  Afghanistan     2015  11  13     24        0.005917            7.653833   \n","3  Afghanistan     2016  10  14     24        0.000000            7.650370   \n","4  Afghanistan     2017  10  14     24        0.000000            7.647830   \n","5  Afghanistan     2018  12  14     26        0.006944            7.630801   \n","6  Afghanistan     2019  13  14     27        0.001479            7.640086   \n","7  Afghanistan     2021  13  14     27        0.000000            7.324032   \n","8  Afghanistan     2022   1   9     10        0.396433            7.612240   \n","\n","   Social support  Healthy life expectancy at birth  \\\n","0        0.483552                         52.000000   \n","1        0.525568                         52.299999   \n","2        0.528597                         52.599998   \n","3        0.559072                         52.924999   \n","4        0.490880                         53.250000   \n","5        0.507516                         53.575001   \n","6        0.419973                         53.900002   \n","7        0.454175                         54.549999   \n","8        0.228217                         54.875000   \n","\n","   Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","0                      0.577955    0.062666                   0.823204   \n","1                      0.508514    0.105755                   0.871242   \n","2                      0.388928    0.081652                   0.880638   \n","3                      0.522566    0.043916                   0.793246   \n","4                      0.427011   -0.119410                   0.954393   \n","5                      0.373536   -0.091106                   0.927606   \n","6                      0.393656   -0.106016                   0.923849   \n","7                      0.394306   -0.081011                   0.946299   \n","8                      0.368377   -0.012944                   0.733198   \n","\n","   Happiness  Happiness % change  \n","0   3.572100            0.000000  \n","1   3.130896            0.015256  \n","2   3.982855            0.074046  \n","3   4.220169            0.003550  \n","4   2.661718            0.136372  \n","5   2.694303            0.000150  \n","6   2.375092            0.014037  \n","7   2.436034            0.000000  \n","8   1.281271            0.224708  "],"text/html":["\n","  <div id=\"df-91d348dd-bfd1-4fa0-a9e6-98216d9d7008\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Afghanistan</td>\n","      <td>2013</td>\n","      <td>11</td>\n","      <td>16</td>\n","      <td>27</td>\n","      <td>0.000000</td>\n","      <td>7.680333</td>\n","      <td>0.483552</td>\n","      <td>52.000000</td>\n","      <td>0.577955</td>\n","      <td>0.062666</td>\n","      <td>0.823204</td>\n","      <td>3.572100</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Afghanistan</td>\n","      <td>2014</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>26</td>\n","      <td>0.001372</td>\n","      <td>7.670638</td>\n","      <td>0.525568</td>\n","      <td>52.299999</td>\n","      <td>0.508514</td>\n","      <td>0.105755</td>\n","      <td>0.871242</td>\n","      <td>3.130896</td>\n","      <td>0.015256</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Afghanistan</td>\n","      <td>2015</td>\n","      <td>11</td>\n","      <td>13</td>\n","      <td>24</td>\n","      <td>0.005917</td>\n","      <td>7.653833</td>\n","      <td>0.528597</td>\n","      <td>52.599998</td>\n","      <td>0.388928</td>\n","      <td>0.081652</td>\n","      <td>0.880638</td>\n","      <td>3.982855</td>\n","      <td>0.074046</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Afghanistan</td>\n","      <td>2016</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>24</td>\n","      <td>0.000000</td>\n","      <td>7.650370</td>\n","      <td>0.559072</td>\n","      <td>52.924999</td>\n","      <td>0.522566</td>\n","      <td>0.043916</td>\n","      <td>0.793246</td>\n","      <td>4.220169</td>\n","      <td>0.003550</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Afghanistan</td>\n","      <td>2017</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>24</td>\n","      <td>0.000000</td>\n","      <td>7.647830</td>\n","      <td>0.490880</td>\n","      <td>53.250000</td>\n","      <td>0.427011</td>\n","      <td>-0.119410</td>\n","      <td>0.954393</td>\n","      <td>2.661718</td>\n","      <td>0.136372</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Afghanistan</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>14</td>\n","      <td>26</td>\n","      <td>0.006944</td>\n","      <td>7.630801</td>\n","      <td>0.507516</td>\n","      <td>53.575001</td>\n","      <td>0.373536</td>\n","      <td>-0.091106</td>\n","      <td>0.927606</td>\n","      <td>2.694303</td>\n","      <td>0.000150</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Afghanistan</td>\n","      <td>2019</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>27</td>\n","      <td>0.001479</td>\n","      <td>7.640086</td>\n","      <td>0.419973</td>\n","      <td>53.900002</td>\n","      <td>0.393656</td>\n","      <td>-0.106016</td>\n","      <td>0.923849</td>\n","      <td>2.375092</td>\n","      <td>0.014037</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Afghanistan</td>\n","      <td>2021</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>27</td>\n","      <td>0.000000</td>\n","      <td>7.324032</td>\n","      <td>0.454175</td>\n","      <td>54.549999</td>\n","      <td>0.394306</td>\n","      <td>-0.081011</td>\n","      <td>0.946299</td>\n","      <td>2.436034</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Afghanistan</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>0.396433</td>\n","      <td>7.612240</td>\n","      <td>0.228217</td>\n","      <td>54.875000</td>\n","      <td>0.368377</td>\n","      <td>-0.012944</td>\n","      <td>0.733198</td>\n","      <td>1.281271</td>\n","      <td>0.224708</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91d348dd-bfd1-4fa0-a9e6-98216d9d7008')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-91d348dd-bfd1-4fa0-a9e6-98216d9d7008 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-91d348dd-bfd1-4fa0-a9e6-98216d9d7008');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3b1486f6-4753-4cfa-8791-0a69c923efc0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b1486f6-4753-4cfa-8791-0a69c923efc0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3b1486f6-4753-4cfa-8791-0a69c923efc0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["subset_most_changed_countries[subset_most_changed_countries['Country name']=='Zambia']"],"metadata":{"id":"ct0d05xuiizl","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1694073688027,"user_tz":-120,"elapsed":72,"user":{"displayName":"Ilaria Salvatori","userId":"04565068118230364096"}},"outputId":"1c9910fa-fa47-44fc-e149-60ba62a7adc9"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Country name  Edition  PR  CL  Total  Total % change  Log GDP per capita  \\\n","1319       Zambia     2013  28  34     62        0.000000            8.110991   \n","1320       Zambia     2014  25  34     59        0.002341            8.124430   \n","1321       Zambia     2015  26  34     60        0.000287            8.121296   \n","1322       Zambia     2016  26  34     60        0.000000            8.126893   \n","1323       Zambia     2017  23  33     56        0.004444            8.130200   \n","1324       Zambia     2018  22  33     55        0.000319            8.139133   \n","1325       Zambia     2019  22  32     54        0.000331            8.123367   \n","1326       Zambia     2020  22  32     54        0.000000            8.065784   \n","1327       Zambia     2021  20  32     52        0.001372            8.082337   \n","\n","      Social support  Healthy life expectancy at birth  \\\n","1319        0.761312                         51.380001   \n","1320        0.706223                         52.040001   \n","1321        0.691483                         52.700001   \n","1322        0.767047                         53.125000   \n","1323        0.743754                         53.549999   \n","1324        0.717720                         53.974998   \n","1325        0.637894                         54.400002   \n","1326        0.766872                         54.825001   \n","1327        0.619071                         55.250000   \n","\n","      Freedom to make life choices  Generosity  Perceptions of corruption  \\\n","1319                      0.769912   -0.104995                   0.732268   \n","1320                      0.811825   -0.011231                   0.808841   \n","1321                      0.758654   -0.039224                   0.871020   \n","1322                      0.811575    0.122042                   0.770644   \n","1323                      0.823169    0.140128                   0.739541   \n","1324                      0.790626    0.048026                   0.810731   \n","1325                      0.811040    0.077648                   0.831956   \n","1326                      0.750422    0.057657                   0.809750   \n","1327                      0.832574    0.141230                   0.824031   \n","\n","      Happiness  Happiness % change  \n","1319   5.243996            0.000000  \n","1320   4.345837            0.029335  \n","1321   4.843164            0.013096  \n","1322   4.347544            0.010472  \n","1323   3.932777            0.009102  \n","1324   4.041488            0.000764  \n","1325   3.306797            0.033047  \n","1326   4.837992            0.214411  \n","1327   3.082155            0.131716  "],"text/html":["\n","  <div id=\"df-7cea256c-24d0-4127-8ece-52e1efafe1d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Country name</th>\n","      <th>Edition</th>\n","      <th>PR</th>\n","      <th>CL</th>\n","      <th>Total</th>\n","      <th>Total % change</th>\n","      <th>Log GDP per capita</th>\n","      <th>Social support</th>\n","      <th>Healthy life expectancy at birth</th>\n","      <th>Freedom to make life choices</th>\n","      <th>Generosity</th>\n","      <th>Perceptions of corruption</th>\n","      <th>Happiness</th>\n","      <th>Happiness % change</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1319</th>\n","      <td>Zambia</td>\n","      <td>2013</td>\n","      <td>28</td>\n","      <td>34</td>\n","      <td>62</td>\n","      <td>0.000000</td>\n","      <td>8.110991</td>\n","      <td>0.761312</td>\n","      <td>51.380001</td>\n","      <td>0.769912</td>\n","      <td>-0.104995</td>\n","      <td>0.732268</td>\n","      <td>5.243996</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1320</th>\n","      <td>Zambia</td>\n","      <td>2014</td>\n","      <td>25</td>\n","      <td>34</td>\n","      <td>59</td>\n","      <td>0.002341</td>\n","      <td>8.124430</td>\n","      <td>0.706223</td>\n","      <td>52.040001</td>\n","      <td>0.811825</td>\n","      <td>-0.011231</td>\n","      <td>0.808841</td>\n","      <td>4.345837</td>\n","      <td>0.029335</td>\n","    </tr>\n","    <tr>\n","      <th>1321</th>\n","      <td>Zambia</td>\n","      <td>2015</td>\n","      <td>26</td>\n","      <td>34</td>\n","      <td>60</td>\n","      <td>0.000287</td>\n","      <td>8.121296</td>\n","      <td>0.691483</td>\n","      <td>52.700001</td>\n","      <td>0.758654</td>\n","      <td>-0.039224</td>\n","      <td>0.871020</td>\n","      <td>4.843164</td>\n","      <td>0.013096</td>\n","    </tr>\n","    <tr>\n","      <th>1322</th>\n","      <td>Zambia</td>\n","      <td>2016</td>\n","      <td>26</td>\n","      <td>34</td>\n","      <td>60</td>\n","      <td>0.000000</td>\n","      <td>8.126893</td>\n","      <td>0.767047</td>\n","      <td>53.125000</td>\n","      <td>0.811575</td>\n","      <td>0.122042</td>\n","      <td>0.770644</td>\n","      <td>4.347544</td>\n","      <td>0.010472</td>\n","    </tr>\n","    <tr>\n","      <th>1323</th>\n","      <td>Zambia</td>\n","      <td>2017</td>\n","      <td>23</td>\n","      <td>33</td>\n","      <td>56</td>\n","      <td>0.004444</td>\n","      <td>8.130200</td>\n","      <td>0.743754</td>\n","      <td>53.549999</td>\n","      <td>0.823169</td>\n","      <td>0.140128</td>\n","      <td>0.739541</td>\n","      <td>3.932777</td>\n","      <td>0.009102</td>\n","    </tr>\n","    <tr>\n","      <th>1324</th>\n","      <td>Zambia</td>\n","      <td>2018</td>\n","      <td>22</td>\n","      <td>33</td>\n","      <td>55</td>\n","      <td>0.000319</td>\n","      <td>8.139133</td>\n","      <td>0.717720</td>\n","      <td>53.974998</td>\n","      <td>0.790626</td>\n","      <td>0.048026</td>\n","      <td>0.810731</td>\n","      <td>4.041488</td>\n","      <td>0.000764</td>\n","    </tr>\n","    <tr>\n","      <th>1325</th>\n","      <td>Zambia</td>\n","      <td>2019</td>\n","      <td>22</td>\n","      <td>32</td>\n","      <td>54</td>\n","      <td>0.000331</td>\n","      <td>8.123367</td>\n","      <td>0.637894</td>\n","      <td>54.400002</td>\n","      <td>0.811040</td>\n","      <td>0.077648</td>\n","      <td>0.831956</td>\n","      <td>3.306797</td>\n","      <td>0.033047</td>\n","    </tr>\n","    <tr>\n","      <th>1326</th>\n","      <td>Zambia</td>\n","      <td>2020</td>\n","      <td>22</td>\n","      <td>32</td>\n","      <td>54</td>\n","      <td>0.000000</td>\n","      <td>8.065784</td>\n","      <td>0.766872</td>\n","      <td>54.825001</td>\n","      <td>0.750422</td>\n","      <td>0.057657</td>\n","      <td>0.809750</td>\n","      <td>4.837992</td>\n","      <td>0.214411</td>\n","    </tr>\n","    <tr>\n","      <th>1327</th>\n","      <td>Zambia</td>\n","      <td>2021</td>\n","      <td>20</td>\n","      <td>32</td>\n","      <td>52</td>\n","      <td>0.001372</td>\n","      <td>8.082337</td>\n","      <td>0.619071</td>\n","      <td>55.250000</td>\n","      <td>0.832574</td>\n","      <td>0.141230</td>\n","      <td>0.824031</td>\n","      <td>3.082155</td>\n","      <td>0.131716</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cea256c-24d0-4127-8ece-52e1efafe1d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7cea256c-24d0-4127-8ece-52e1efafe1d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7cea256c-24d0-4127-8ece-52e1efafe1d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dfce0387-0df6-4bfe-a2f2-fbf4cd7ed596\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfce0387-0df6-4bfe-a2f2-fbf4cd7ed596')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dfce0387-0df6-4bfe-a2f2-fbf4cd7ed596 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","source":["As far as Afghanistan and Zambia are concerned, these two countries belong to the cluster in which the indicator that has varied the most is happiness.\n","\n","In fact, in both countries (albeit with different socio-economic and political situations), the score has dropped by 2 points over time, testifying to a worsening of living conditions - less marked in Zambia - in the countries belonging to this cluster.\n","\n","For both the transition between 2021 and 2022 was the most incisive."],"metadata":{"id":"x4WYhmTifItf"}},{"cell_type":"markdown","source":["In conclusion, we would like to underline and highlight that this last clustering divides the countries on the basis of major or minor changes in the two indicators analysed, without discerning between positive or negative changes.\n","\n","This derives from the fact that the variation analyzed is calculated as the sum of the squares of the annual variations in such a way as to capture the overall effects and avoid that positive and negative changes counterbalance each other."],"metadata":{"id":"14vh187WmmRj"}}]}